{
  "info": {
    "description": "Credo AI server API",
    "title": "Credo AI server API"
  },
  "definitions": {
    "SourceUpdateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "name": {
                  "description": "Source name",
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "type": "object"
            },
            "id": {
              "description": "The JSON-API resource ID",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PolicyPackVersionsResponse": {
      "description": "A collection of [PolicyPackVersionResource](#policypackversionresource)",
      "properties": {
        "data": {
          "description": "Content with [PolicyPackVersionResource](#policypackversionresource) objects",
          "items": {
            "$ref": "#/definitions/PolicyPackVersionResource"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "PolicyControlVersionResponse": {
      "description": "A JSON-API document with a single [PolicyControlVersionResource](#policycontrolversionresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/PolicyControlVersionResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "SectionFileResponse": {
      "description": "A JSON-API document with a single [SectionFileResource](#sectionfileresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/SectionFileResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "RiskScenarioResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "archived": {
              "description": "",
              "type": "string"
            },
            "author": {
              "description": "",
              "type": "string"
            },
            "deprecated": {
              "description": "",
              "type": "string"
            },
            "description": {
              "description": "",
              "type": "string"
            },
            "domains": {
              "description": "",
              "type": "string"
            },
            "industries": {
              "description": "",
              "type": "string"
            },
            "metadata": {
              "description": "",
              "type": "string"
            },
            "name": {
              "description": "",
              "type": "string"
            },
            "ownership_type": {
              "description": "",
              "type": "string"
            },
            "reasoning": {
              "description": "",
              "type": "string"
            },
            "regions": {
              "description": "",
              "type": "string"
            },
            "risk_type_ids": {
              "description": "",
              "type": "string"
            },
            "transferred_at": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {},
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "risk_scenarios",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UseCaseReviewResponse": {
      "description": "A JSON-API document with a single [UseCaseReviewResource](#usecasereviewresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/UseCaseReviewResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "VendorEvidenceResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "creator": {
              "description": "",
              "type": "string"
            },
            "data": {
              "description": "",
              "type": "string"
            },
            "entity_id": {
              "description": "",
              "type": "string"
            },
            "generated_at": {
              "description": "",
              "type": "string"
            },
            "hash_key": {
              "description": "",
              "type": "string"
            },
            "inserted_at": {
              "description": "",
              "type": "string"
            },
            "label": {
              "description": "",
              "type": "string"
            },
            "metadata": {
              "description": "",
              "type": "string"
            },
            "type": {
              "description": "",
              "type": "string"
            },
            "vendor_id": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {
            "asset_links": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related asset_links resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related asset_links resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "vendor_evidences",
          "type": "string"
        }
      },
      "type": "object"
    },
    "WorkflowStageResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "assessment_required": {
              "description": "",
              "type": "string"
            },
            "child_id": {
              "description": "",
              "type": "string"
            },
            "description": {
              "description": "",
              "type": "string"
            },
            "evidence_collection_required": {
              "description": "",
              "type": "string"
            },
            "id": {
              "description": "",
              "type": "string"
            },
            "inserted_at": {
              "description": "",
              "type": "string"
            },
            "name": {
              "description": "",
              "type": "string"
            },
            "parent_id": {
              "description": "",
              "type": "string"
            },
            "type": {
              "description": "",
              "type": "string"
            },
            "updated_at": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {},
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "workflow_stages",
          "type": "string"
        }
      },
      "type": "object"
    },
    "IntegrationResponse": {
      "description": "A JSON-API document with a single [IntegrationResource](#integrationresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/IntegrationResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "MetadataFieldsSettingUpdateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "use_case_settings": {
                  "description": "Use case settings",
                  "example": "{\n  \"domains\": {\"visible\": false},\n  \"regions\": {\"visible\": true},\n  \"industries\": {\"visible\": false},\n  \"ai_type\": {\"visible\": true},\n  \"monetary_value\": {\"visible\": false}\n}\n",
                  "type": "object"
                }
              },
              "type": "object"
            },
            "id": {
              "description": "The JSON-API resource ID",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TenantInfoResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "display_name": {
              "description": "Display Name",
              "example": "Credo AI",
              "type": "string"
            },
            "help_url": {
              "description": "Help URL",
              "example": "https://help.acme.com/help/me",
              "type": "string"
            },
            "logo_url": {
              "description": "Logo URL",
              "example": "https://assets.credo.ai/foo.png",
              "type": "string"
            },
            "scim_token_enabled": {
              "description": "SCIM Token Enabled",
              "example": true,
              "type": "boolean"
            },
            "scim_token_last_generated_at": {
              "description": "SCIM Token Last Generated At",
              "example": "2021-01-01T00:00:00Z",
              "type": "string"
            },
            "scim_token_last_used_at": {
              "description": "SCIM Token Last Used At",
              "example": "2021-01-01T00:00:00Z",
              "type": "string"
            },
            "webhook_app_id": {
              "description": "Webhook App ID",
              "example": "ep_2etTEQef3g4gSOb0q1jDRARZ7R2",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {},
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "tenant_infos",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UseCaseReviewActionResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "comment": {
              "description": "",
              "type": "string"
            },
            "deleted": {
              "description": "",
              "type": "string"
            },
            "inserted_at": {
              "description": "",
              "type": "string"
            },
            "reply_thread_id": {
              "description": "",
              "type": "string"
            },
            "resolved": {
              "description": "",
              "type": "string"
            },
            "review_id": {
              "description": "",
              "type": "string"
            },
            "tags": {
              "description": "",
              "type": "string"
            },
            "task_id": {
              "description": "",
              "type": "string"
            },
            "type": {
              "description": "",
              "type": "string"
            },
            "updated_at": {
              "description": "",
              "type": "string"
            },
            "use_case_id": {
              "description": "",
              "type": "string"
            },
            "user_id": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {
            "reply_thread": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related reply_thread resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related reply_thread resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "review": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related review resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related review resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "task": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related task resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related task resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "use_case": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related use_case resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related use_case resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "user": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related user resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related user resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "use_case_review_actions",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EvidencesResponse": {
      "description": "A collection of [EvidenceResource](#evidenceresource)",
      "properties": {
        "data": {
          "description": "Content with [EvidenceResource](#evidenceresource) objects",
          "items": {
            "$ref": "#/definitions/EvidenceResource"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "TaskResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "assigner_id": {
              "description": "",
              "type": "string"
            },
            "completed_at": {
              "description": "",
              "type": "string"
            },
            "due_date": {
              "description": "",
              "type": "string"
            },
            "inserted_at": {
              "description": "",
              "type": "string"
            },
            "status": {
              "description": "",
              "type": "string"
            },
            "sub_status": {
              "description": "",
              "type": "string"
            },
            "team_ids": {
              "description": "",
              "type": "string"
            },
            "timezone": {
              "description": "",
              "type": "string"
            },
            "type": {
              "description": "",
              "type": "string"
            },
            "updated_at": {
              "description": "",
              "type": "string"
            },
            "use_case_control_id": {
              "description": "",
              "type": "string"
            },
            "use_case_id": {
              "description": "",
              "type": "string"
            },
            "use_case_questionnaire_section_id": {
              "description": "",
              "type": "string"
            },
            "use_case_review_id": {
              "description": "",
              "type": "string"
            },
            "user_ids": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {
            "assigner": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related assigner resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related assigner resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "teams": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related teams resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related teams resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "use_case": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related use_case resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related use_case resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "use_case_control": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related use_case_control resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related use_case_control resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "use_case_questionnaire_section": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related use_case_questionnaire_section resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related use_case_questionnaire_section resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "use_case_review": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related use_case_review resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related use_case_review resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "users": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related users resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related users resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "tasks",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TaskUpdateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "due_date": {
                  "description": "due date",
                  "example": "2024-01-30T17:00:00.000Z",
                  "type": "string"
                },
                "status": {
                  "description": "status",
                  "enum": [
                    "todo",
                    "in_progress",
                    "done"
                  ],
                  "type": "string"
                },
                "sub_status": {
                  "description": "sub status",
                  "enum": [
                    "none",
                    "change_request",
                    "approve",
                    "reject",
                    "cancel",
                    "ready_for_validation"
                  ],
                  "type": "string"
                },
                "team_ids": {
                  "description": "team ids",
                  "example": [
                    1,
                    2
                  ],
                  "type": "array"
                },
                "timezone": {
                  "description": "due date timezone",
                  "example": "America/New_York",
                  "type": "string"
                },
                "user_ids": {
                  "description": "user ids",
                  "example": [
                    1,
                    2
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "id": {
              "description": "The JSON-API resource ID",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SourceResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "id": {
              "description": "",
              "type": "string"
            },
            "inserted_at": {
              "description": "",
              "type": "string"
            },
            "name": {
              "description": "",
              "type": "string"
            },
            "updated_at": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {},
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "sources",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UseCaseRaiIssuesResponse": {
      "description": "A collection of [UseCaseRaiIssueResource](#usecaseraiissueresource)",
      "properties": {
        "data": {
          "description": "Content with [UseCaseRaiIssueResource](#usecaseraiissueresource) objects",
          "items": {
            "$ref": "#/definitions/UseCaseRaiIssueResource"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "CustomPolicyPackBaseResponse": {
      "description": "A JSON-API document with a single [CustomPolicyPackBaseResource](#custompolicypackbaseresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/CustomPolicyPackBaseResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "CommentResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "comment_thread_id": {
              "description": "",
              "type": "string"
            },
            "content": {
              "description": "",
              "type": "string"
            },
            "inserted_at": {
              "description": "",
              "type": "string"
            },
            "updated_at": {
              "description": "",
              "type": "string"
            },
            "user_id": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {
            "user": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related user resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related user resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "comments",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ForbiddenError": {
      "properties": {
        "errors": {
          "description": "Errors",
          "items": {
            "properties": {
              "code": {
                "description": "an application-specific error code, expressed as a string value.",
                "type": "integer"
              },
              "detail": {
                "description": "a human-readable explanation specific to this occurrence of the problem. Like title, this field’s value can be localized.",
                "type": "string"
              },
              "title": {
                "description": "a short, human-readable summary of the problem that SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "UseCaseCreateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "ai_type": {
                  "description": "",
                  "type": "string"
                },
                "description": {
                  "description": "",
                  "type": "string"
                },
                "icon": {
                  "description": "",
                  "type": "string"
                },
                "industries": {
                  "description": "Industries",
                  "example": [
                    "Fishing, Hunting, & Trapping"
                  ],
                  "type": "array"
                },
                "is_vendor": {
                  "description": "",
                  "type": "boolean"
                },
                "monetary_value": {
                  "description": "",
                  "type": "integer"
                },
                "name": {
                  "description": "",
                  "type": "string"
                },
                "owner": {
                  "description": "Owner Details",
                  "example": {
                    "owner_id": "user_id",
                    "owner_type": "user"
                  },
                  "type": "object"
                },
                "questionnaire_ids": {
                  "description": "Questionnaire Version IDs To Include",
                  "example": [
                    "SEQR+1",
                    "PRIV+2"
                  ],
                  "type": "array"
                },
                "regions": {
                  "description": "Regions",
                  "example": [
                    "CA",
                    "US"
                  ],
                  "type": "array"
                },
                "risk_classification_level": {
                  "description": "Risk Classification Level",
                  "example": 1,
                  "type": "integer"
                },
                "source": {
                  "description": "",
                  "type": "string"
                },
                "workflow_stage_id": {
                  "description": "",
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TriggerUpdateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "data": {
                  "description": "",
                  "type": "object"
                },
                "description": {
                  "description": "",
                  "type": "string"
                },
                "type": {
                  "description": "",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "id": {
              "description": "The JSON-API resource ID",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ControlFileResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "content_type": {
              "description": "",
              "type": "string"
            },
            "control_id": {
              "description": "",
              "type": "string"
            },
            "filename": {
              "description": "",
              "type": "string"
            },
            "id": {
              "description": "",
              "type": "string"
            },
            "inserted_at": {
              "description": "",
              "type": "string"
            },
            "requirement_key": {
              "description": "",
              "type": "string"
            },
            "size": {
              "description": "",
              "type": "string"
            },
            "updated_at": {
              "description": "",
              "type": "string"
            },
            "url": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {},
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "use_case_control_files",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RegionResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "name": {
              "description": "",
              "type": "string"
            },
            "parents": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {},
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "regions",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PolicyControlBaseResponse": {
      "description": "A JSON-API document with a single [PolicyControlBaseResource](#policycontrolbaseresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/PolicyControlBaseResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "UseCaseThreadCreateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "parent_comment_id": {
                  "description": "",
                  "type": "string"
                },
                "tags": {
                  "description": "Tags",
                  "example": {
                    "controlKey": "FAIR.C1"
                  },
                  "type": "object"
                },
                "topic": {
                  "description": "",
                  "type": "string"
                },
                "type": {
                  "description": "",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ModelQuestionnaireResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "entity_id": {
              "description": "",
              "type": "string"
            },
            "inserted_at": {
              "description": "",
              "type": "string"
            },
            "key": {
              "description": "",
              "type": "string"
            },
            "model_id": {
              "description": "",
              "type": "string"
            },
            "updated_at": {
              "description": "",
              "type": "string"
            },
            "version": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {},
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "model_questionnaires",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UseCaseScheduledReviewResponse": {
      "description": "A JSON-API document with a single [UseCaseScheduledReviewResource](#usecasescheduledreviewresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/UseCaseScheduledReviewResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "UserCreateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "email": {
                  "description": "name@credo.ai",
                  "type": "string"
                },
                "family_name": {
                  "description": "",
                  "type": "string"
                },
                "given_name": {
                  "description": "",
                  "type": "string"
                },
                "job": {
                  "description": "",
                  "type": "string"
                },
                "locale": {
                  "description": "",
                  "type": "string"
                },
                "nickname": {
                  "description": "",
                  "type": "string"
                },
                "picture": {
                  "description": "",
                  "type": "string"
                },
                "role": {
                  "description": "role",
                  "enum": [
                    "vendor",
                    "user"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "email",
                "role"
              ],
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "NotificationResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "inserted_at": {
              "description": "",
              "type": "string"
            },
            "message": {
              "description": "",
              "type": "string"
            },
            "metadata": {
              "description": "",
              "type": "string"
            },
            "requester_id": {
              "description": "",
              "type": "string"
            },
            "status": {
              "description": "",
              "type": "string"
            },
            "type": {
              "description": "",
              "type": "string"
            },
            "updated_at": {
              "description": "",
              "type": "string"
            },
            "user_id": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {
            "requester": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related requester resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related requester resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "user": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related user resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related user resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "notifications",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CommentResponse": {
      "description": "A JSON-API document with a single [CommentResource](#commentresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/CommentResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "UseCaseRaiIssueResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "asset_link_id": {
              "description": "",
              "type": "string"
            },
            "entity_id": {
              "description": "",
              "type": "string"
            },
            "evidence_id": {
              "description": "",
              "type": "string"
            },
            "explanation": {
              "description": "",
              "type": "string"
            },
            "inserted_at": {
              "description": "",
              "type": "string"
            },
            "issue": {
              "description": "",
              "type": "string"
            },
            "use_case_id": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {
            "asset_link": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related asset_link resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related asset_link resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "evidence": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related evidence resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related evidence resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "policy_pack_link": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related policy_pack_link resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related policy_pack_link resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "use_case_rai_issues",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MeResponse": {
      "description": "A JSON-API document with a single [MeResource](#meresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/MeResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "ModelQuestionnaireCreateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "key": {
                  "description": "questionnaire key",
                  "type": "string"
                },
                "version": {
                  "description": "questionnaire version",
                  "type": "integer"
                }
              },
              "required": [
                "key",
                "version"
              ],
              "type": "object"
            },
            "id": {
              "description": "The JSON-API resource ID",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "VendorQuestionnaireSectionEvidenceCreateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "data": {
                  "description": "value data",
                  "example": {
                    "value": "This is text evidence"
                  },
                  "type": "object"
                },
                "generated_at": {
                  "description": "evidence generated time",
                  "example": "2022-05-03T11:33:25.582138Z",
                  "type": "string"
                },
                "question_id": {
                  "description": "question id",
                  "type": "string"
                }
              },
              "required": [
                "question_id",
                "data"
              ],
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UseCaseQuestionnaireResponse": {
      "description": "A JSON-API document with a single [UseCaseQuestionnaireResource](#usecasequestionnaireresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/UseCaseQuestionnaireResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "IntegrationUpdateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "data": {
                  "description": "integration data",
                  "type": "object"
                },
                "type": {
                  "description": "integration type",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "id": {
              "description": "The JSON-API resource ID",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ControlsAssignmentResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "control_ids": {
              "description": "string",
              "type": "string"
            },
            "team_id": {
              "description": "",
              "type": "string"
            },
            "user_id": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {},
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "control_assignments",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RiskTypeResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "custom": {
              "description": "",
              "type": "string"
            },
            "description": {
              "description": "",
              "type": "string"
            },
            "hidden": {
              "description": "",
              "type": "string"
            },
            "inserted_at": {
              "description": "",
              "type": "string"
            },
            "name": {
              "description": "",
              "type": "string"
            },
            "updated_at": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {},
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "risk_types",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ModelVersionResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "description": {
              "description": "",
              "type": "string"
            },
            "model_id": {
              "description": "",
              "type": "string"
            },
            "version": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {},
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "model_versions",
          "type": "string"
        }
      },
      "type": "object"
    },
    "NotificationPreferencesRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "type_email_enabled": {
                  "description": "",
                  "type": "boolean"
                },
                "type_in_app_enabled": {
                  "description": "",
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "id": {
              "description": "The JSON-API resource ID",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ModelVendorLinkResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "inserted_at": {
              "description": "When the link was created",
              "type": "datetime"
            },
            "model_id": {
              "description": "The ID of the model",
              "type": "string"
            },
            "updated_at": {
              "description": "When the link was last updated",
              "type": "datetime"
            },
            "vendor_id": {
              "description": "The ID of the vendor",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {
            "model": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related model resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related model resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "vendor": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related vendor resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related vendor resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "model_vendor_links",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UseCaseVendorLinksResponse": {
      "description": "A page of [UseCaseVendorLinkResource](#usecasevendorlinkresource) results",
      "properties": {
        "data": {
          "description": "Content with [UseCaseVendorLinkResource](#usecasevendorlinkresource) objects",
          "items": {
            "$ref": "#/definitions/UseCaseVendorLinkResource"
          },
          "type": "array"
        },
        "meta": {
          "properties": {
            "after": {
              "description": "after cursor for the next page resources",
              "type": "string"
            },
            "before": {
              "description": "before cursor for the previous page resources",
              "type": "string"
            },
            "limit": {
              "description": "number of resources limit applied to this request",
              "type": "integer"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "UseCaseResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "ai_type": {
              "description": "",
              "type": "string"
            },
            "control_refs": {
              "description": "",
              "type": "string"
            },
            "creator_id": {
              "description": "",
              "type": "string"
            },
            "description": {
              "description": "",
              "type": "string"
            },
            "domain_ids": {
              "description": "",
              "type": "string"
            },
            "entity_id": {
              "description": "",
              "type": "string"
            },
            "icon": {
              "description": "",
              "type": "string"
            },
            "in_review": {
              "description": "",
              "type": "string"
            },
            "industries": {
              "description": "",
              "type": "string"
            },
            "inserted_at": {
              "description": "",
              "type": "string"
            },
            "is_vendor": {
              "description": "",
              "type": "string"
            },
            "monetary_value": {
              "description": "",
              "type": "string"
            },
            "name": {
              "description": "",
              "type": "string"
            },
            "policy_pack_refs": {
              "description": "",
              "type": "string"
            },
            "questionnaire_ids": {
              "description": "",
              "type": "string"
            },
            "rai_issues_count": {
              "description": "",
              "type": "string"
            },
            "regions": {
              "description": "",
              "type": "string"
            },
            "risk_category_level": {
              "description": "",
              "type": "string"
            },
            "risk_classification_level": {
              "description": "",
              "type": "string"
            },
            "settings": {
              "description": "",
              "type": "string"
            },
            "source": {
              "description": "",
              "type": "string"
            },
            "updated_at": {
              "description": "",
              "type": "string"
            },
            "use_case_number": {
              "description": "",
              "type": "string"
            },
            "workflow_stage_id": {
              "description": "",
              "type": "string"
            },
            "workflow_stage_step": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {
            "assist": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related assist resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related assist resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "creator": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related creator resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related creator resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "custom_fields": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related custom_fields resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related custom_fields resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "model_links": {
              "properties": {
                "data": {
                  "items": {
                    "properties": {
                      "id": {
                        "description": "Related model_links resource id",
                        "type": "string"
                      },
                      "type": {
                        "description": "Type of related model_links resource",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "models": {
              "properties": {
                "data": {
                  "items": {
                    "properties": {
                      "id": {
                        "description": "Related models resource id",
                        "type": "string"
                      },
                      "type": {
                        "description": "Type of related models resource",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "policy_packs": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related policy_packs resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related policy_packs resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "questionnaires": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related questionnaires resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related questionnaires resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "risk_scenarios": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related risk_scenarios resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related risk_scenarios resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "scheduled_reviews": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related scheduled_reviews resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related scheduled_reviews resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "stakeholders": {
              "properties": {
                "data": {
                  "items": {
                    "properties": {
                      "id": {
                        "description": "Related stakeholders resource id",
                        "type": "string"
                      },
                      "type": {
                        "description": "Type of related stakeholders resource",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "use_case_sync_issues": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related use_case_sync_issues resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related use_case_sync_issues resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "vendor_links": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related vendor_links resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related vendor_links resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "vendors": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related vendors resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related vendors resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "workflow_stage": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related workflow_stage resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related workflow_stage resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "use_cases",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UseCasesResponse": {
      "description": "A page of [UseCaseResource](#usecaseresource) results",
      "properties": {
        "data": {
          "description": "Content with [UseCaseResource](#usecaseresource) objects",
          "items": {
            "$ref": "#/definitions/UseCaseResource"
          },
          "type": "array"
        },
        "meta": {
          "properties": {
            "after": {
              "description": "after cursor for the next page resources",
              "type": "string"
            },
            "before": {
              "description": "before cursor for the previous page resources",
              "type": "string"
            },
            "limit": {
              "description": "number of resources limit applied to this request",
              "type": "integer"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "ModelQuestionnaireSectionResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "compliances": {
              "description": "",
              "type": "string"
            },
            "entity_id": {
              "description": "",
              "type": "string"
            },
            "inserted_at": {
              "description": "",
              "type": "string"
            },
            "model_id": {
              "description": "",
              "type": "string"
            },
            "questionnaire_id": {
              "description": "",
              "type": "string"
            },
            "section_id": {
              "description": "",
              "type": "string"
            },
            "status": {
              "description": "",
              "type": "string"
            },
            "updated_at": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {},
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "model_questionnaire_sections",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomPolicyPackBaseCreateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "id": {
                  "description": "id",
                  "type": "string"
                },
                "info": {
                  "description": "policy pack info shared across versions",
                  "example": {
                    "name": "Policy pack name"
                  },
                  "type": "object"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PolicyControlVersionUpdateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "draft": {
                  "description": "draft",
                  "type": "boolean"
                },
                "evidence_requirements": {
                  "description": "policy control evidence requirements",
                  "type": "array"
                },
                "info": {
                  "description": "policy control info",
                  "type": "object"
                },
                "risk_type_ids": {
                  "description": "risk type ids",
                  "example": [
                    "NkBkDB9i64w53eVR6ssfzj"
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "id": {
              "description": "The JSON-API resource ID",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UseCasePolicyPackResponse": {
      "description": "A JSON-API document with a single [UseCasePolicyPackResource](#usecasepolicypackresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/UseCasePolicyPackResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "UpdateWorkflowStepRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "workflow_stage_step": {
                  "description": "workflow step.",
                  "example": [
                    "assessment",
                    "evidence_collection",
                    "clear"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "workflow_stage_step"
              ],
              "type": "object"
            },
            "id": {
              "description": "The JSON-API resource ID",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SectionAssignmentResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "section_ids": {
              "description": "string",
              "type": "string"
            },
            "team_id": {
              "description": "",
              "type": "string"
            },
            "user_id": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {},
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "section_assignments",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PolicyPackDuplicateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "key": {
                  "description": "key of duplicated policy pack",
                  "example": "PACK-DUP",
                  "type": "string"
                },
                "name": {
                  "description": "name of duplicated policy pack",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "id": {
              "description": "The JSON-API resource ID",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TenantInfoResponse": {
      "description": "A JSON-API document with a single [TenantInfoResource](#tenantinforesource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/TenantInfoResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "UseCasesRiskScenariosResponse": {
      "description": "A collection of [UseCaseRiskScenarioResource](#usecaseriskscenarioresource)",
      "properties": {
        "data": {
          "description": "Content with [UseCaseRiskScenarioResource](#usecaseriskscenarioresource) objects",
          "items": {
            "$ref": "#/definitions/UseCaseRiskScenarioResource"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "UseCaseRiskControlLinksResponse": {
      "description": "A collection of [UseCaseRiskControlLinkResource](#usecaseriskcontrollinkresource)",
      "properties": {
        "data": {
          "description": "Content with [UseCaseRiskControlLinkResource](#usecaseriskcontrollinkresource) objects",
          "items": {
            "$ref": "#/definitions/UseCaseRiskControlLinkResource"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "UseCasesStakeholdersResponse": {
      "description": "A collection of [UseCaseStakeholderResource](#usecasestakeholderresource)",
      "properties": {
        "data": {
          "description": "Content with [UseCaseStakeholderResource](#usecasestakeholderresource) objects",
          "items": {
            "$ref": "#/definitions/UseCaseStakeholderResource"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "ReportAttestationRequestResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "attestation_comment": {
              "description": "",
              "type": "string"
            },
            "attested_at": {
              "description": "",
              "type": "string"
            },
            "attester_id": {
              "description": "",
              "type": "string"
            },
            "inserted_at": {
              "description": "",
              "type": "string"
            },
            "report_id": {
              "description": "",
              "type": "string"
            },
            "requested_team_id": {
              "description": "",
              "type": "string"
            },
            "requested_user_id": {
              "description": "",
              "type": "string"
            },
            "requester_id": {
              "description": "",
              "type": "string"
            },
            "status": {
              "description": "",
              "type": "string"
            },
            "updated_at": {
              "description": "",
              "type": "string"
            },
            "use_case_id": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {
            "attester": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related attester resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related attester resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "requested_team": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related requested_team resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related requested_team resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "requested_user": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related requested_user resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related requested_user resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "requester": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related requester resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related requester resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "report_attestation_requests",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TenantInfoUpdateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "display_name": {
                  "description": "Display Name",
                  "example": "Credo AI",
                  "type": "string"
                },
                "help_url": {
                  "description": "Help URL",
                  "example": "https://help.acme.com/help/me",
                  "type": "string"
                },
                "logo_url": {
                  "description": "Logo URL",
                  "example": "https://assets.credo.ai/foo.png",
                  "type": "string"
                },
                "scim_token_enabled": {
                  "description": "SCIM Token Enabled",
                  "example": true,
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "EvidenceTypeResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "document": {
              "description": "document evidence types",
              "example": [
                "text",
                "select",
                "user",
                "file",
                "yes_no",
                "date",
                "number"
              ],
              "type": "array"
            },
            "technical": {
              "description": "technical evidence types",
              "example": [
                "metric",
                "statistical_test",
                "table"
              ],
              "type": "array"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {},
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "evidence_types",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PolicyPackVersionResponse": {
      "description": "A JSON-API document with a single [PolicyPackVersionResource](#policypackversionresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/PolicyPackVersionResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "CommentUpdateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "content": {
                  "description": "The content of the comment",
                  "type": "string"
                }
              },
              "required": [
                "content"
              ],
              "type": "object"
            },
            "id": {
              "description": "The JSON-API resource ID",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "comments",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "VendorUpdateStatusRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "status": {
                  "description": "status",
                  "enum": [
                    "none",
                    "approved",
                    "rejected"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "id": {
              "description": "The JSON-API resource ID",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UseCaseAssistResponse": {
      "description": "A JSON-API document with a single [UseCaseAssistResource](#usecaseassistresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/UseCaseAssistResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "UseCaseControlCookbookResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "data": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {},
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "use_case_control_cookbooks",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UnprocessableEntityError": {
      "properties": {
        "errors": {
          "description": "Errors",
          "items": {
            "properties": {
              "code": {
                "description": "an application-specific error code, expressed as a string value.",
                "type": "integer"
              },
              "detail": {
                "description": "a human-readable explanation specific to this occurrence of the problem. Like title, this field’s value can be localized.",
                "type": "string"
              },
              "title": {
                "description": "a short, human-readable summary of the problem that SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "UseCaseScheduledReviewUpdateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "due_date": {
                  "description": "due date",
                  "example": "2024-01-30T17:00:00.000Z",
                  "type": "string"
                },
                "scheduled_at": {
                  "description": "scheduled date time",
                  "example": "2024-01-30T17:00:00.000Z",
                  "type": "string"
                },
                "team_ids": {
                  "description": "list of team ids",
                  "example": [
                    "team_123",
                    "team_456"
                  ],
                  "type": "array"
                },
                "timezone": {
                  "description": "timezone",
                  "example": "America/New_York",
                  "type": "string"
                },
                "user_ids": {
                  "description": "list of user ids",
                  "example": [
                    "user_123",
                    "user_456"
                  ],
                  "type": "array"
                },
                "workflow_stage_step": {
                  "description": "workflow stage step",
                  "example": "step_123",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "id": {
              "description": "The JSON-API resource ID",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "IntegrationResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "data": {
              "description": "",
              "type": "string"
            },
            "inserted_at": {
              "description": "",
              "type": "string"
            },
            "type": {
              "description": "",
              "type": "string"
            },
            "updated_at": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {
            "use_case_sync_issues": {
              "properties": {
                "data": {
                  "items": {
                    "properties": {
                      "id": {
                        "description": "Related use_case_sync_issues resource id",
                        "type": "string"
                      },
                      "type": {
                        "description": "Type of related use_case_sync_issues resource",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "integrations",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UseCaseModelDeleteRelationships": {
      "properties": {
        "data": {
          "items": {
            "properties": {
              "id": {
                "description": "Model ID",
                "example": "39cbqQk7gjmAJ55amVoNxm",
                "type": "string"
              },
              "type": {
                "description": "type",
                "example": "use_case_model_links",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "UseCaseCustomFieldCreateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "name": {
                  "description": "name",
                  "type": "string"
                },
                "value": {
                  "description": "value",
                  "type": "any"
                }
              },
              "required": [
                "name",
                "value"
              ],
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "WebhookUpdateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "authentication_method": {
                  "description": "string",
                  "type": "string"
                },
                "authentication_payload": {
                  "description": "object",
                  "type": "object"
                },
                "authentication_payload_type": {
                  "description": "string",
                  "type": "string"
                },
                "authentication_server": {
                  "description": "string",
                  "type": "string"
                },
                "bucket": {
                  "description": "use_case_events",
                  "type": "string"
                },
                "description": {
                  "description": "string",
                  "type": "string"
                },
                "environment": {
                  "description": "string",
                  "type": "string"
                },
                "event_type_prefix": {
                  "description": "string",
                  "type": "string"
                },
                "event_type_suffix": {
                  "description": "string",
                  "type": "string"
                },
                "event_types": {
                  "description": "array",
                  "type": "array"
                },
                "url": {
                  "description": "string",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "id": {
              "description": "The JSON-API resource ID",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UseCasePolicyPacksResponse": {
      "description": "A collection of [UseCasePolicyPackResource](#usecasepolicypackresource)",
      "properties": {
        "data": {
          "description": "Content with [UseCasePolicyPackResource](#usecasepolicypackresource) objects",
          "items": {
            "$ref": "#/definitions/UseCasePolicyPackResource"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "ModelFilesResponse": {
      "description": "A collection of [ModelFileResource](#modelfileresource)",
      "properties": {
        "data": {
          "description": "Content with [ModelFileResource](#modelfileresource) objects",
          "items": {
            "$ref": "#/definitions/ModelFileResource"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "UseCaseResponse": {
      "description": "A JSON-API document with a single [UseCaseResource](#usecaseresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/UseCaseResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "PolicyPackResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "controls": {
              "description": "",
              "type": "string"
            },
            "id": {
              "description": "",
              "type": "string"
            },
            "info": {
              "description": "",
              "type": "string"
            },
            "key": {
              "description": "",
              "type": "string"
            },
            "kind": {
              "description": "",
              "type": "string"
            },
            "metadata": {
              "description": "",
              "type": "string"
            },
            "report_template": {
              "description": "",
              "type": "string"
            },
            "spec": {
              "description": "",
              "type": "string"
            },
            "version": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {},
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "policy_packs",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PolicyControlVersionsResponse": {
      "description": "A collection of [PolicyControlVersionResource](#policycontrolversionresource)",
      "properties": {
        "data": {
          "description": "Content with [PolicyControlVersionResource](#policycontrolversionresource) objects",
          "items": {
            "$ref": "#/definitions/PolicyControlVersionResource"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "UseCaseVendorLinkResponse": {
      "description": "A JSON-API document with a single [UseCaseVendorLinkResource](#usecasevendorlinkresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/UseCaseVendorLinkResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "UseCaseCustomFieldUpdateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "value": {
                  "description": "value",
                  "type": "any"
                }
              },
              "required": [
                "value"
              ],
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "QuestionnaireVersionUpdateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "draft": {
                  "description": "draft",
                  "type": "boolean"
                },
                "sections": {
                  "description": "sections",
                  "type": "array"
                }
              },
              "type": "object"
            },
            "id": {
              "description": "The JSON-API resource ID",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UseCaseControlCookbookResponse": {
      "description": "A JSON-API document with a single [UseCaseControlCookbookResource](#usecasecontrolcookbookresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/UseCaseControlCookbookResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "ModelLinkUpdateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "model_version": {
                  "description": "",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "id": {
              "description": "The JSON-API resource ID",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UseCaseReviewCreateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "due_date": {
                  "description": "due date",
                  "example": "2024-01-30T17:00:00.000Z",
                  "type": "string"
                },
                "timezone": {
                  "description": "due date timezone",
                  "example": "America/New_York",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ModelEvidenceCreateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "data": {
                  "description": "value data",
                  "example": {
                    "value": "This is text evidence"
                  },
                  "type": "object"
                },
                "generated_at": {
                  "description": "evidence generated time",
                  "example": "2022-05-03T11:33:25.582138Z",
                  "type": "string"
                },
                "question_id": {
                  "description": "question id",
                  "type": "string"
                }
              },
              "required": [
                "question_id",
                "data"
              ],
              "type": "object"
            },
            "id": {
              "description": "The JSON-API resource ID",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ReportAttestationRequestResponse": {
      "description": "A JSON-API document with a single [ReportAttestationRequestResource](#reportattestationrequestresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/ReportAttestationRequestResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "UseCaseCommentsPageResponse": {
      "description": "A page of [UseCaseCommentResource](#usecasecommentresource) results",
      "properties": {
        "data": {
          "description": "Content with [UseCaseCommentResource](#usecasecommentresource) objects",
          "items": {
            "$ref": "#/definitions/UseCaseCommentResource"
          },
          "type": "array"
        },
        "meta": {
          "properties": {
            "after": {
              "description": "after cursor for the next page resources",
              "type": "string"
            },
            "before": {
              "description": "before cursor for the previous page resources",
              "type": "string"
            },
            "limit": {
              "description": "number of resources limit applied to this request",
              "type": "integer"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "UseCaseScheduledReviewCreateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "due_date": {
                  "description": "due date",
                  "example": "2024-01-30T17:00:00.000Z",
                  "type": "string"
                },
                "scheduled_at": {
                  "description": "scheduled date time",
                  "example": "2024-01-30T17:00:00.000Z",
                  "type": "string"
                },
                "team_ids": {
                  "description": "list of team ids",
                  "example": [
                    "team_123",
                    "team_456"
                  ],
                  "type": "array"
                },
                "timezone": {
                  "description": "timezone",
                  "example": "America/New_York",
                  "type": "string"
                },
                "user_ids": {
                  "description": "list of user ids",
                  "example": [
                    "user_123",
                    "user_456"
                  ],
                  "type": "array"
                },
                "workflow_stage_step": {
                  "description": "workflow stage step",
                  "example": "step_123",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TeamUpdateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "description": {
                  "description": "",
                  "type": "string"
                },
                "name": {
                  "description": "",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "id": {
              "description": "The JSON-API resource ID",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UseCaseReviewsResponse": {
      "description": "A collection of [UseCaseReviewResource](#usecasereviewresource)",
      "properties": {
        "data": {
          "description": "Content with [UseCaseReviewResource](#usecasereviewresource) objects",
          "items": {
            "$ref": "#/definitions/UseCaseReviewResource"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "UseCaseStakeholderUpdateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "role": {
                  "description": "role",
                  "enum": [
                    "owner",
                    "contributor"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "id": {
              "description": "The JSON-API resource ID",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UseCaseModelCreateRelationships": {
      "properties": {
        "data": {
          "items": {
            "properties": {
              "attributes": {
                "properties": {
                  "model_id": {
                    "description": "Model ID",
                    "example": "39cbqQk7gjmAJ55amVoNxm",
                    "type": "string"
                  },
                  "model_version": {
                    "description": "Model version",
                    "example": "v0.7",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": {
                "description": "type",
                "example": "use_case_model_links",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "QuestionnaireBaseUpdateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "archived": {
                  "description": "archived",
                  "type": "boolean"
                },
                "info": {
                  "description": "",
                  "type": "object"
                },
                "metadata": {
                  "description": "",
                  "type": "object"
                },
                "name": {
                  "description": "name",
                  "type": "string"
                },
                "show_on_create": {
                  "description": "show_on_create",
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "id": {
              "description": "The JSON-API resource ID",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "WorkflowStagesResponse": {
      "description": "A page of [WorkflowStageResource](#workflowstageresource) results",
      "properties": {
        "data": {
          "description": "Content with [WorkflowStageResource](#workflowstageresource) objects",
          "items": {
            "$ref": "#/definitions/WorkflowStageResource"
          },
          "type": "array"
        },
        "meta": {
          "properties": {
            "after": {
              "description": "after cursor for the next page resources",
              "type": "string"
            },
            "before": {
              "description": "before cursor for the previous page resources",
              "type": "string"
            },
            "limit": {
              "description": "number of resources limit applied to this request",
              "type": "integer"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "ModelEvidenceResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "creator": {
              "description": "",
              "type": "string"
            },
            "data": {
              "description": "",
              "type": "string"
            },
            "entity_id": {
              "description": "",
              "type": "string"
            },
            "generated_at": {
              "description": "",
              "type": "string"
            },
            "hash_key": {
              "description": "",
              "type": "string"
            },
            "inserted_at": {
              "description": "",
              "type": "string"
            },
            "label": {
              "description": "",
              "type": "string"
            },
            "metadata": {
              "description": "",
              "type": "string"
            },
            "model_id": {
              "description": "",
              "type": "string"
            },
            "type": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {
            "asset_links": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related asset_links resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related asset_links resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "model_evidences",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorFileResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "content_type": {
              "description": "",
              "type": "string"
            },
            "entity_id": {
              "description": "",
              "type": "string"
            },
            "filename": {
              "description": "",
              "type": "string"
            },
            "inserted_at": {
              "description": "",
              "type": "string"
            },
            "size": {
              "description": "",
              "type": "string"
            },
            "updated_at": {
              "description": "",
              "type": "string"
            },
            "url": {
              "description": "",
              "type": "string"
            },
            "vendor_id": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {},
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "vendor_files",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EvidenceResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "control_key": {
              "description": "Control key",
              "example": "FAIR.C1",
              "type": "string"
            },
            "creator": {
              "description": "Creator",
              "example": {
                "family_name": "John",
                "given_name": "Doe",
                "nickname": "doe"
              },
              "type": "object"
            },
            "data": {
              "description": "value data,",
              "example": {
                "value": "value"
              },
              "type": "object"
            },
            "entity_id": {
              "description": "",
              "type": "string"
            },
            "generated_at": {
              "description": "Evidence generation time",
              "example": "2015-05-22T14:56:29.000Z",
              "type": "string"
            },
            "hash_key": {
              "description": "",
              "type": "string"
            },
            "inserted_at": {
              "description": "insert time",
              "example": "2015-05-22T14:56:29.000Z",
              "type": "string"
            },
            "label": {
              "description": "label in the evidence requirement",
              "example": {
                "key": "value"
              },
              "type": "object"
            },
            "metadata": {
              "description": "metadata",
              "example": {
                "key": "value"
              },
              "type": "object"
            },
            "model_id": {
              "description": "model_id",
              "example": "4pEfRTw2RVVrouMbFH9tuH",
              "type": "string"
            },
            "model_version": {
              "description": "",
              "type": "string"
            },
            "type": {
              "description": "Evidence type",
              "example": "text",
              "type": "string"
            },
            "use_case_id": {
              "description": "use_case_id",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {
            "asset_links": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related asset_links resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related asset_links resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "model": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related model resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related model resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "policy_pack_links": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related policy_pack_links resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related policy_pack_links resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "rai_issues": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related rai_issues resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related rai_issues resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "evidences",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UseCaseReviewActionCreateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "comment": {
                  "description": "comment",
                  "example": "This is a comment",
                  "type": "string"
                },
                "tags": {
                  "description": "Tags",
                  "example": {
                    "controlKey": "FAIR.C1"
                  },
                  "type": "object"
                },
                "task_id": {
                  "description": "task id",
                  "example": "y4AsgRJnHGPn6MZXp4uRYe",
                  "type": "string"
                },
                "type": {
                  "description": "type",
                  "enum": [
                    "change_request",
                    "approve",
                    "reject",
                    "close_review",
                    "comment"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MetadataFieldsSettingResponse": {
      "description": "A JSON-API document with a single [MetadataFieldsSettingResource](#metadatafieldssettingresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/MetadataFieldsSettingResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "UseCaseScheduledReviewsResponse": {
      "description": "A collection of [UseCaseScheduledReviewResource](#usecasescheduledreviewresource)",
      "properties": {
        "data": {
          "description": "Content with [UseCaseScheduledReviewResource](#usecasescheduledreviewresource) objects",
          "items": {
            "$ref": "#/definitions/UseCaseScheduledReviewResource"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "UserResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "deleted_at": {
              "description": "",
              "type": "string"
            },
            "email": {
              "description": "",
              "type": "string"
            },
            "family_name": {
              "description": "",
              "type": "string"
            },
            "given_name": {
              "description": "",
              "type": "string"
            },
            "invitation_accepted_at": {
              "description": "",
              "type": "string"
            },
            "invitation_sent_at": {
              "description": "",
              "type": "string"
            },
            "is_initialized": {
              "description": "",
              "type": "boolean"
            },
            "is_invitation_expired": {
              "description": "",
              "type": "string"
            },
            "is_local": {
              "description": "",
              "type": "boolean"
            },
            "job": {
              "description": "",
              "type": "string"
            },
            "locale": {
              "description": "",
              "type": "string"
            },
            "nickname": {
              "description": "",
              "type": "string"
            },
            "picture": {
              "description": "",
              "type": "string"
            },
            "role": {
              "description": "",
              "type": "string"
            },
            "sub": {
              "description": "",
              "type": "string"
            },
            "team": {
              "description": "",
              "type": "string"
            },
            "title": {
              "description": "",
              "type": "string"
            },
            "ux_config": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {
            "setting": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related setting resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related setting resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "users",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ActionUpdateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "data": {
                  "description": "",
                  "type": "object"
                },
                "description": {
                  "description": "",
                  "type": "string"
                },
                "show_visual_alert": {
                  "description": "",
                  "type": "boolean"
                },
                "trigger_ids": {
                  "description": "trigger_ids",
                  "example": [
                    "abc",
                    "def",
                    "ghi"
                  ],
                  "type": "array"
                },
                "type": {
                  "description": "",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "id": {
              "description": "The JSON-API resource ID",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "QuestionnaireVersionResponse": {
      "description": "A JSON-API document with a single [QuestionnaireVersionResource](#questionnaireversionresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/QuestionnaireVersionResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "VendorEvidenceResponse": {
      "description": "A JSON-API document with a single [VendorEvidenceResource](#vendorevidenceresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/VendorEvidenceResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "ModelUpdateStatusRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "status": {
                  "description": "Model approval status",
                  "enum": [
                    "none",
                    "approved",
                    "rejected"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "NotificationUpdateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "status": {
                  "description": "",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "id": {
              "description": "The JSON-API resource ID",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ModelVendorLinksResponse": {
      "description": "A page of [ModelVendorLinkResource](#modelvendorlinkresource) results",
      "properties": {
        "data": {
          "description": "Content with [ModelVendorLinkResource](#modelvendorlinkresource) objects",
          "items": {
            "$ref": "#/definitions/ModelVendorLinkResource"
          },
          "type": "array"
        },
        "meta": {
          "properties": {
            "after": {
              "description": "after cursor for the next page resources",
              "type": "string"
            },
            "before": {
              "description": "before cursor for the previous page resources",
              "type": "string"
            },
            "limit": {
              "description": "number of resources limit applied to this request",
              "type": "integer"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "UseCaseControlUpdateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "due_date": {
                  "description": "due date",
                  "example": "2024-01-30T17:00:00.000Z",
                  "type": "string"
                },
                "team_ids": {
                  "description": "team ids",
                  "example": "[8zA2nPjVSenyvcc429LPDT]",
                  "type": "array"
                },
                "timezone": {
                  "description": "due date timezone",
                  "example": "America/New_York",
                  "type": "string"
                },
                "user_ids": {
                  "description": "user ids",
                  "example": "[8zA2nPjVSenyvcc429LPDT]",
                  "type": "array"
                }
              },
              "type": "object"
            },
            "id": {
              "description": "The JSON-API resource ID",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ModelQuestionnaireUpdateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "version": {
                  "description": "questionnaire version",
                  "type": "integer"
                }
              },
              "required": [
                "version"
              ],
              "type": "object"
            },
            "id": {
              "description": "The JSON-API resource ID",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UseCaseCustomFieldUpdateOneRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "custom_field_id": {
                  "description": "custom_field_id",
                  "type": "string"
                },
                "value": {
                  "description": "value",
                  "type": "any"
                }
              },
              "required": [
                "custom_field_id"
              ],
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DomainResponse": {
      "description": "A JSON-API document with a single [DomainResource](#domainresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/DomainResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "TeamMembersRemoveResource": {
      "description": "Upsert TeamMembership",
      "example": {
        "id": "user_id",
        "type": "users"
      },
      "properties": {
        "id": {
          "description": "member id",
          "type": "string"
        },
        "type": {
          "description": "users",
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "title": "Upsert TeamMembership",
      "type": "object"
    },
    "IntegrationCreateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "data": {
                  "description": "integration data",
                  "type": "object"
                },
                "type": {
                  "description": "integration type",
                  "type": "string"
                }
              },
              "required": [
                "type",
                "data"
              ],
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PolicyControlResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "evidence_requirements": {
              "description": "",
              "type": "string"
            },
            "info": {
              "description": "",
              "type": "string"
            },
            "key": {
              "description": "",
              "type": "string"
            },
            "kind": {
              "description": "",
              "type": "string"
            },
            "metadata": {
              "description": "",
              "type": "string"
            },
            "policy_pack_key": {
              "description": "",
              "type": "string"
            },
            "reasoning": {
              "description": "",
              "type": "string"
            },
            "risk_type_ids": {
              "description": "",
              "type": "string"
            },
            "spec": {
              "description": "",
              "type": "string"
            },
            "version": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {},
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "policy_controls",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ModifyPolicyPackRequest": {
      "description": "modify policy pack",
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/ModifyPolicyPackResource"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ModelQuestionnaireSectionResponse": {
      "description": "A JSON-API document with a single [ModelQuestionnaireSectionResource](#modelquestionnairesectionresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/ModelQuestionnaireSectionResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "ModelCustomFieldResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "custom_field_id": {
              "description": "",
              "type": "string"
            },
            "entity_id": {
              "description": "",
              "type": "string"
            },
            "model_id": {
              "description": "",
              "type": "string"
            },
            "name": {
              "description": "",
              "type": "string"
            },
            "value": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {
            "custom_field": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related custom_field resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related custom_field resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "model_custom_fields",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCustomFieldsResponse": {
      "description": "A collection of [VendorCustomFieldResource](#vendorcustomfieldresource)",
      "properties": {
        "data": {
          "description": "Content with [VendorCustomFieldResource](#vendorcustomfieldresource) objects",
          "items": {
            "$ref": "#/definitions/VendorCustomFieldResource"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "ApiTokenCreateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "name": {
                  "description": "",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "id": {
              "description": "The JSON-API resource ID",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UseCaseCommentCreateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "content": {
                  "description": "",
                  "type": "string"
                },
                "metadata": {
                  "description": "",
                  "type": "object"
                }
              },
              "required": [
                "content"
              ],
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UseCaseQuestionnaireUpdateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "due_date": {
                  "description": "due date",
                  "example": "2024-01-30T17:00:00.000Z",
                  "type": "string"
                },
                "timezone": {
                  "description": "timezone",
                  "example": "Asia/Seoul",
                  "type": "string"
                },
                "version": {
                  "description": "quetionnaire version",
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "id": {
              "description": "The JSON-API resource ID",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CommentThreadResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "comments_count": {
              "description": "",
              "type": "string"
            },
            "id": {
              "description": "",
              "type": "string"
            },
            "inserted_at": {
              "description": "",
              "type": "string"
            },
            "is_external": {
              "description": "",
              "type": "string"
            },
            "parent_entity_control_id": {
              "description": "",
              "type": "string"
            },
            "parent_q_section_id": {
              "description": "",
              "type": "string"
            },
            "parent_use_case_review_id": {
              "description": "",
              "type": "string"
            },
            "resource_id": {
              "description": "",
              "type": "string"
            },
            "resource_type": {
              "description": "",
              "type": "string"
            },
            "status": {
              "description": "",
              "type": "string"
            },
            "status_updated_at": {
              "description": "",
              "type": "string"
            },
            "use_case_id": {
              "description": "",
              "type": "string"
            },
            "user_id": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {
            "comments": {
              "properties": {
                "data": {
                  "items": {
                    "properties": {
                      "id": {
                        "description": "Related comments resource id",
                        "type": "string"
                      },
                      "type": {
                        "description": "Type of related comments resource",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "user": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related user resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related user resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "comment_threads",
          "type": "string"
        }
      },
      "type": "object"
    },
    "QuestionnaireResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "info": {
              "description": "",
              "type": "string"
            },
            "key": {
              "description": "",
              "type": "string"
            },
            "kind": {
              "description": "",
              "type": "string"
            },
            "metadata": {
              "description": "",
              "type": "string"
            },
            "name": {
              "description": "",
              "type": "string"
            },
            "sections": {
              "description": "",
              "type": "string"
            },
            "spec": {
              "description": "",
              "type": "string"
            },
            "target": {
              "description": "",
              "type": "string"
            },
            "version": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {},
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "questionnaires",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RegionsResponse": {
      "description": "A collection of [RegionResource](#regionresource)",
      "properties": {
        "data": {
          "description": "Content with [RegionResource](#regionresource) objects",
          "items": {
            "$ref": "#/definitions/RegionResource"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "CustomFieldCreateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "element_type": {
                  "description": "element type",
                  "enum": [
                    "input",
                    "checkbox",
                    "select",
                    "datepicker"
                  ],
                  "type": "string"
                },
                "metadata": {
                  "description": "metadata",
                  "example": {
                    "max": 100,
                    "min": 0
                  },
                  "type": "object"
                },
                "multiple": {
                  "description": "multiple",
                  "example": true,
                  "type": "boolean"
                },
                "name": {
                  "description": "name",
                  "type": "string"
                },
                "options": {
                  "description": "options",
                  "example": [
                    "Finance",
                    "Marketing"
                  ],
                  "type": "array"
                },
                "target": {
                  "description": "target",
                  "enum": [
                    "use_case",
                    "vendor",
                    "model"
                  ],
                  "type": "string"
                },
                "type": {
                  "description": "type",
                  "enum": [
                    "string",
                    "number",
                    "datetime",
                    "user"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UseCaseAssistResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "description": {
              "description": "",
              "type": "string"
            },
            "domains": {
              "description": "domain names",
              "example": [
                "domain1"
              ],
              "type": "array"
            },
            "error_message": {
              "description": "",
              "type": "string"
            },
            "status": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {},
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "use_case_assists",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ModelVersionsResponse": {
      "description": "A collection of [ModelVersionResource](#modelversionresource)",
      "properties": {
        "data": {
          "description": "Content with [ModelVersionResource](#modelversionresource) objects",
          "items": {
            "$ref": "#/definitions/ModelVersionResource"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "PolicyControlVersionCreateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "evidence_requirements": {
                  "description": "policy control evidence requirements",
                  "type": "array"
                },
                "info": {
                  "description": "policy control info",
                  "type": "object"
                },
                "risk_type_ids": {
                  "description": "risk type ids",
                  "example": [
                    "NkBkDB9i64w53eVR6ssfzj"
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "RiskScenarioUpdateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "archived": {
                  "description": "",
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "id": {
              "description": "The JSON-API resource ID",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "QuestionnaireResponse": {
      "description": "A JSON-API document with a single [QuestionnaireResource](#questionnaireresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/QuestionnaireResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "ControlFilesResponse": {
      "description": "A page of [ControlFileResponse](#controlfileresponse) results",
      "properties": {
        "data": {
          "description": "Content with [ControlFileResponse](#controlfileresponse) objects",
          "items": {
            "$ref": "#/definitions/ControlFileResponse"
          },
          "type": "array"
        },
        "meta": {
          "properties": {
            "after": {
              "description": "after cursor for the next page resources",
              "type": "string"
            },
            "before": {
              "description": "before cursor for the previous page resources",
              "type": "string"
            },
            "limit": {
              "description": "number of resources limit applied to this request",
              "type": "integer"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "VendorEvidencesResponse": {
      "description": "A collection of [VendorEvidenceResource](#vendorevidenceresource)",
      "properties": {
        "data": {
          "description": "Content with [VendorEvidenceResource](#vendorevidenceresource) objects",
          "items": {
            "$ref": "#/definitions/VendorEvidenceResource"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "UseCaseControlResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "compliances": {
              "description": "",
              "type": "string"
            },
            "control_key": {
              "description": "",
              "type": "string"
            },
            "due_date": {
              "description": "",
              "type": "string"
            },
            "entity_id": {
              "description": "",
              "type": "string"
            },
            "inserted_at": {
              "description": "",
              "type": "string"
            },
            "model_id": {
              "description": "",
              "type": "string"
            },
            "policy_pack_key": {
              "description": "",
              "type": "string"
            },
            "status": {
              "description": "",
              "type": "string"
            },
            "timezone": {
              "description": "",
              "type": "string"
            },
            "updated_at": {
              "description": "",
              "type": "string"
            },
            "use_case_id": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {
            "model": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related model resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related model resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "reviewer": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related reviewer resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related reviewer resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "task": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related task resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related task resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "use_case": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related use_case resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related use_case resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "use_case_controls",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SectionAssignmentRequest": {
      "description": "A JSON-API document with a single [SectionAssignmentResource](#sectionassignmentresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/SectionAssignmentResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "VendorQuestionnaireSectionsResponse": {
      "description": "A collection of [VendorQuestionnaireSectionResource](#vendorquestionnairesectionresource)",
      "properties": {
        "data": {
          "description": "Content with [VendorQuestionnaireSectionResource](#vendorquestionnairesectionresource) objects",
          "items": {
            "$ref": "#/definitions/VendorQuestionnaireSectionResource"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "UpdateWorkflowStageRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "workflow_stage_id": {
                  "description": "workflow stage ID",
                  "type": "string"
                }
              },
              "required": [
                "workflow_stage_id"
              ],
              "type": "object"
            },
            "id": {
              "description": "The JSON-API resource ID",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UseCaseRiskControlLinkResponse": {
      "description": "A JSON-API document with a single [UseCaseRiskControlLinkResource](#usecaseriskcontrollinkresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/UseCaseRiskControlLinkResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "TriggerResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "data": {
              "description": "",
              "type": "string"
            },
            "description": {
              "description": "",
              "type": "string"
            },
            "type": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {},
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "trigger",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PolicyControlBaseCreateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "id": {
                  "description": "id",
                  "type": "string"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ModelEvidenceResponse": {
      "description": "A JSON-API document with a single [ModelEvidenceResource](#modelevidenceresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/ModelEvidenceResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "ReportAttestationRequestCreateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "team_id": {
                  "description": "",
                  "type": "string"
                },
                "user_id": {
                  "description": "",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UseCaseReviewActionResponse": {
      "description": "A JSON-API document with a single [UseCaseReviewActionResource](#usecasereviewactionresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/UseCaseReviewActionResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "QuestionnaireVersionCreateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "draft": {
                  "description": "draft",
                  "type": "boolean"
                },
                "sections": {
                  "description": "sections",
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UseCaseCommentUpdateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "content": {
                  "description": "",
                  "type": "string"
                }
              },
              "required": [
                "content"
              ],
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "VendorFileCreateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "content": {
                  "description": "Base 64 encoded file content",
                  "type": "string"
                },
                "content_type": {
                  "description": "content type",
                  "type": "string"
                },
                "filename": {
                  "description": "File name",
                  "type": "string"
                },
                "size": {
                  "description": "File size",
                  "type": "integer"
                }
              },
              "required": [
                "content"
              ],
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "VendorFileResponse": {
      "description": "A JSON-API document with a single [VendorFileResource](#vendorfileresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/VendorFileResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "CustomPolicyPackBaseUpdateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "archived": {
                  "description": "archived",
                  "type": "boolean"
                },
                "info": {
                  "description": "policy pack info shared across versions",
                  "example": {
                    "name": "Policy pack name"
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "id": {
              "description": "The JSON-API resource ID",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PolicyControlBasesResponse": {
      "description": "A collection of [PolicyControlBaseResource](#policycontrolbaseresource)",
      "properties": {
        "data": {
          "description": "Content with [PolicyControlBaseResource](#policycontrolbaseresource) objects",
          "items": {
            "$ref": "#/definitions/PolicyControlBaseResource"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "PolicyPackVersionCreateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "controls": {
                  "description": "policy pack controls",
                  "type": "array"
                },
                "info": {
                  "description": "policy pack info",
                  "type": "object"
                },
                "report_template": {
                  "description": "policy pack report template",
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PolicyPackVersionResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "archived": {
              "description": "",
              "type": "string"
            },
            "base_id": {
              "description": "",
              "type": "string"
            },
            "controls": {
              "description": "",
              "type": "string"
            },
            "deprecated": {
              "description": "",
              "type": "string"
            },
            "draft": {
              "description": "",
              "type": "string"
            },
            "info": {
              "description": "",
              "type": "string"
            },
            "inserted_at": {
              "description": "",
              "type": "string"
            },
            "ownership_type": {
              "description": "",
              "type": "string"
            },
            "report_template": {
              "description": "",
              "type": "string"
            },
            "transferred_at": {
              "description": "",
              "type": "string"
            },
            "updated_at": {
              "description": "",
              "type": "string"
            },
            "version": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {},
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "custom_policy_pack_versions",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UserUpdateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "family_name": {
                  "description": "",
                  "type": "string"
                },
                "given_name": {
                  "description": "",
                  "type": "string"
                },
                "is_initialized": {
                  "description": "",
                  "type": "boolean"
                },
                "job": {
                  "description": "",
                  "type": "string"
                },
                "locale": {
                  "description": "",
                  "type": "string"
                },
                "nickname": {
                  "description": "",
                  "type": "string"
                },
                "picture": {
                  "description": "",
                  "type": "string"
                },
                "role": {
                  "description": "",
                  "enum": [
                    "admin",
                    "reviewer",
                    "user",
                    "vendor"
                  ],
                  "type": "string"
                },
                "team": {
                  "description": "",
                  "type": "string"
                },
                "title": {
                  "description": "",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "id": {
              "description": "The JSON-API resource ID",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "VendorFilesResponse": {
      "description": "A collection of [VendorFileResource](#vendorfileresource)",
      "properties": {
        "data": {
          "description": "Content with [VendorFileResource](#vendorfileresource) objects",
          "items": {
            "$ref": "#/definitions/VendorFileResource"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "TriggerCreateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "data": {
                  "description": "",
                  "type": "object"
                },
                "description": {
                  "description": "",
                  "type": "string"
                },
                "type": {
                  "description": "",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "RiskTypeResponse": {
      "description": "A JSON-API document with a single [RiskTypeResource](#risktyperesource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/RiskTypeResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "DomainsResponse": {
      "description": "A collection of [DomainResource](#domainresource)",
      "properties": {
        "data": {
          "description": "Content with [DomainResource](#domainresource) objects",
          "items": {
            "$ref": "#/definitions/DomainResource"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "TeamsResponse": {
      "description": "A page of [TeamResource](#teamresource) results",
      "properties": {
        "data": {
          "description": "Content with [TeamResource](#teamresource) objects",
          "items": {
            "$ref": "#/definitions/TeamResource"
          },
          "type": "array"
        },
        "meta": {
          "properties": {
            "after": {
              "description": "after cursor for the next page resources",
              "type": "string"
            },
            "before": {
              "description": "before cursor for the previous page resources",
              "type": "string"
            },
            "limit": {
              "description": "number of resources limit applied to this request",
              "type": "integer"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "ModelVersionUpdateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "description": {
                  "description": "",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "id": {
              "description": "The JSON-API resource ID",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PolicyPackVersionUpdateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "controls": {
                  "description": "policy pack controls",
                  "type": "array"
                },
                "draft": {
                  "description": "draft",
                  "type": "boolean"
                },
                "info": {
                  "description": "policy pack info",
                  "type": "object"
                },
                "report_template": {
                  "description": "policy pack report template",
                  "type": "object"
                }
              },
              "type": "object"
            },
            "id": {
              "description": "The JSON-API resource ID",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "VendorCustomFieldResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "custom_field_id": {
              "description": "",
              "type": "string"
            },
            "entity_id": {
              "description": "",
              "type": "string"
            },
            "name": {
              "description": "",
              "type": "string"
            },
            "value": {
              "description": "",
              "type": "string"
            },
            "vendor_id": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {
            "custom_field": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related custom_field resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related custom_field resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "vendor_custom_fields",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UseCaseReviewResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "due_date": {
              "description": "",
              "type": "string"
            },
            "inserted_at": {
              "description": "",
              "type": "string"
            },
            "review_date": {
              "description": "",
              "type": "string"
            },
            "snapshot_id": {
              "description": "",
              "type": "string"
            },
            "status": {
              "description": "",
              "type": "string"
            },
            "timezone": {
              "description": "",
              "type": "string"
            },
            "updated_at": {
              "description": "",
              "type": "string"
            },
            "use_case_id": {
              "description": "",
              "type": "string"
            },
            "user_id": {
              "description": "",
              "type": "string"
            },
            "workflow_step_type": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {
            "actions": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related actions resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related actions resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "snapshot": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related snapshot resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related snapshot resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "tasks": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related tasks resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related tasks resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "use_case": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related use_case resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related use_case resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "user": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related user resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related user resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "use_case_reviews",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UseCaseRiskScenarioUpdateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "description": {
                  "description": "risk scenario description",
                  "type": "string"
                },
                "inherent_risk_impact": {
                  "description": "inherent risk impact(1-5)",
                  "example": 1,
                  "type": "integer"
                },
                "inherent_risk_likelihood": {
                  "description": "inherent risk likelihood(1-5)",
                  "example": 1,
                  "type": "integer"
                },
                "name": {
                  "description": "risk scenario name",
                  "type": "string"
                },
                "residual_risk_impact": {
                  "description": "residual risk impact(1-5)",
                  "example": 1,
                  "type": "integer"
                },
                "residual_risk_likelihood": {
                  "description": "residual risk likelihood(1-5)",
                  "example": 1,
                  "type": "integer"
                },
                "risk_type_ids": {
                  "description": "risk type ids",
                  "example": [
                    "NkBkDB9i64w53eVR6ssfzj"
                  ],
                  "type": "array"
                },
                "type": {
                  "description": "risk type",
                  "example": "abuse_misuse",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "id": {
              "description": "The JSON-API resource ID",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CommentThreadsResponse": {
      "description": "A page of [CommentThreadResource](#commentthreadresource) results",
      "properties": {
        "data": {
          "description": "Content with [CommentThreadResource](#commentthreadresource) objects",
          "items": {
            "$ref": "#/definitions/CommentThreadResource"
          },
          "type": "array"
        },
        "meta": {
          "properties": {
            "after": {
              "description": "after cursor for the next page resources",
              "type": "string"
            },
            "before": {
              "description": "before cursor for the previous page resources",
              "type": "string"
            },
            "limit": {
              "description": "number of resources limit applied to this request",
              "type": "integer"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "SectionFilesResponse": {
      "description": "A page of [SectionFileResponse](#sectionfileresponse) results",
      "properties": {
        "data": {
          "description": "Content with [SectionFileResponse](#sectionfileresponse) objects",
          "items": {
            "$ref": "#/definitions/SectionFileResponse"
          },
          "type": "array"
        },
        "meta": {
          "properties": {
            "after": {
              "description": "after cursor for the next page resources",
              "type": "string"
            },
            "before": {
              "description": "before cursor for the previous page resources",
              "type": "string"
            },
            "limit": {
              "description": "number of resources limit applied to this request",
              "type": "integer"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "VendorQuestionnaireResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "entity_id": {
              "description": "",
              "type": "string"
            },
            "inserted_at": {
              "description": "",
              "type": "string"
            },
            "key": {
              "description": "",
              "type": "string"
            },
            "updated_at": {
              "description": "",
              "type": "string"
            },
            "vendor_id": {
              "description": "",
              "type": "string"
            },
            "version": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {},
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "vendor_questionnaires",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProfileUpdateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "family_name": {
                  "description": "",
                  "type": "string"
                },
                "given_name": {
                  "description": "",
                  "type": "string"
                },
                "is_initialized": {
                  "description": "",
                  "type": "boolean"
                },
                "job": {
                  "description": "",
                  "type": "string"
                },
                "locale": {
                  "description": "",
                  "type": "string"
                },
                "nickname": {
                  "description": "",
                  "type": "string"
                },
                "picture": {
                  "description": "",
                  "type": "string"
                },
                "team": {
                  "description": "",
                  "type": "string"
                },
                "title": {
                  "description": "",
                  "type": "string"
                },
                "ux_config": {
                  "description": "",
                  "type": "object"
                }
              },
              "type": "object"
            },
            "id": {
              "description": "The JSON-API resource ID",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MeUpdateFavoriteUseCasesRequest": {
      "description": "Request payload for updating favorite use cases",
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/RelationshipResource"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "AuthError": {
      "properties": {
        "errors": {
          "description": "Errors",
          "items": {
            "properties": {
              "code": {
                "description": "an application-specific error code, expressed as a string value.",
                "type": "integer"
              },
              "detail": {
                "description": "a human-readable explanation specific to this occurrence of the problem. Like title, this field’s value can be localized.",
                "type": "string"
              },
              "title": {
                "description": "a short, human-readable summary of the problem that SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "MetadataFieldsSettingResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "use_case_settings": {
              "description": "",
              "type": "object"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {},
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "metadata_fields_setting",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TaskResponse": {
      "description": "A JSON-API document with a single [TaskResource](#taskresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/TaskResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "UseCaseSnapshotResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "comments": {
              "description": "comments",
              "example": [],
              "type": "array"
            },
            "controls": {
              "description": "controls",
              "example": [],
              "type": "array"
            },
            "custom_fields": {
              "description": "custom_fields",
              "example": [],
              "type": "array"
            },
            "evidences": {
              "description": "evidences",
              "example": [],
              "type": "array"
            },
            "inserted_at": {
              "description": "insert time",
              "example": "2015-05-22T14:56:29.000Z",
              "type": "string"
            },
            "model_links": {
              "description": "model_links",
              "example": [],
              "type": "array"
            },
            "models": {
              "description": "models",
              "example": [],
              "type": "array"
            },
            "questionnaire_sections": {
              "description": "questionnaire_sections",
              "example": [],
              "type": "array"
            },
            "rai_issues": {
              "description": "rai_issues",
              "example": [],
              "type": "array"
            },
            "risk_scenarios": {
              "description": "risk_scenarios",
              "example": [],
              "type": "array"
            },
            "schema_version": {
              "description": "",
              "type": "string"
            },
            "stakeholders": {
              "description": "stakeholders",
              "example": [],
              "type": "array"
            },
            "trigger_actions": {
              "description": "triggered_actions",
              "example": [],
              "type": "array"
            },
            "triggered_actions": {
              "description": "",
              "type": "string"
            },
            "use_case": {
              "description": "",
              "type": "object"
            },
            "use_case_id": {
              "description": "use_case_id",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            },
            "vendors": {
              "description": "vendors",
              "example": [],
              "type": "array"
            },
            "workflow_stage": {
              "description": "",
              "type": "object"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {},
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "use_case_snapshots",
          "type": "string"
        }
      },
      "type": "object"
    },
    "WebhookResponse": {
      "description": "A JSON-API document with a single [WebhookResource](#webhookresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/WebhookResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "PolicyControlVersionResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "archived": {
              "description": "",
              "type": "string"
            },
            "base_id": {
              "description": "",
              "type": "string"
            },
            "deprecated": {
              "description": "",
              "type": "string"
            },
            "draft": {
              "description": "",
              "type": "string"
            },
            "evidence_requirements": {
              "description": "",
              "type": "string"
            },
            "info": {
              "description": "",
              "type": "string"
            },
            "inserted_at": {
              "description": "",
              "type": "string"
            },
            "ownership_type": {
              "description": "",
              "type": "string"
            },
            "risk_type_ids": {
              "description": "",
              "type": "string"
            },
            "transferred_at": {
              "description": "",
              "type": "string"
            },
            "updated_at": {
              "description": "",
              "type": "string"
            },
            "version": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {},
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "policy_control_versions",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ModelUpdateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "name": {
                  "description": "",
                  "type": "string"
                },
                "questionnaire_ids": {
                  "description": "Questionnaire Version IDs To Include",
                  "example": [
                    "MODEL-QUEST+1",
                    "MODEL-EVAL+2"
                  ],
                  "items": "string",
                  "type": "array"
                },
                "source": {
                  "description": "",
                  "type": "string"
                },
                "status": {
                  "description": "Model approval status",
                  "enum": [
                    "none",
                    "approved",
                    "rejected"
                  ],
                  "type": "string"
                },
                "summary": {
                  "description": "",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "id": {
              "description": "The JSON-API resource ID",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "VendorCustomFieldUpdateOneRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "custom_field_id": {
                  "description": "custom_field_id",
                  "type": "string"
                },
                "value": {
                  "description": "value",
                  "type": "any"
                }
              },
              "required": [
                "custom_field_id"
              ],
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UseCaseQuestionnairesResponse": {
      "description": "A collection of [UseCaseQuestionnaireResource](#usecasequestionnaireresource)",
      "properties": {
        "data": {
          "description": "Content with [UseCaseQuestionnaireResource](#usecasequestionnaireresource) objects",
          "items": {
            "$ref": "#/definitions/UseCaseQuestionnaireResource"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "UseCaseControlTaskCreateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "team_ids": {
                  "description": "team ids",
                  "example": "[8zA2nPjVSenyvcc429LPDT]",
                  "type": "array"
                },
                "user_ids": {
                  "description": "user ids",
                  "example": "[8zA2nPjVSenyvcc429LPDT]",
                  "type": "array"
                }
              },
              "type": "object"
            },
            "id": {
              "description": "The JSON-API resource ID",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TriggerResponse": {
      "description": "A JSON-API document with a single [TriggerResource](#triggerresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/TriggerResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "UseCaseCustomFieldsResponse": {
      "description": "A collection of [UseCaseCustomFieldResource](#usecasecustomfieldresource)",
      "properties": {
        "data": {
          "description": "Content with [UseCaseCustomFieldResource](#usecasecustomfieldresource) objects",
          "items": {
            "$ref": "#/definitions/UseCaseCustomFieldResource"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "NotificationResponse": {
      "description": "A JSON-API document with a single [NotificationResource](#notificationresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/NotificationResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "ActionsResponse": {
      "description": "A page of [ActionResource](#actionresource) results",
      "properties": {
        "data": {
          "description": "Content with [ActionResource](#actionresource) objects",
          "items": {
            "$ref": "#/definitions/ActionResource"
          },
          "type": "array"
        },
        "meta": {
          "properties": {
            "after": {
              "description": "after cursor for the next page resources",
              "type": "string"
            },
            "before": {
              "description": "before cursor for the previous page resources",
              "type": "string"
            },
            "limit": {
              "description": "number of resources limit applied to this request",
              "type": "integer"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "TriggersResponse": {
      "description": "A page of [TriggerResource](#triggerresource) results",
      "properties": {
        "data": {
          "description": "Content with [TriggerResource](#triggerresource) objects",
          "items": {
            "$ref": "#/definitions/TriggerResource"
          },
          "type": "array"
        },
        "meta": {
          "properties": {
            "after": {
              "description": "after cursor for the next page resources",
              "type": "string"
            },
            "before": {
              "description": "before cursor for the previous page resources",
              "type": "string"
            },
            "limit": {
              "description": "number of resources limit applied to this request",
              "type": "integer"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "UseCaseStakeholderAlreadyExistError": {
      "properties": {
        "errors": {
          "description": "Errors",
          "items": {
            "properties": {
              "code": {
                "description": "an application-specific error code, expressed as a string value.",
                "type": "integer"
              },
              "detail": {
                "description": "a human-readable explanation specific to this occurrence of the problem. Like title, this field’s value can be localized.",
                "type": "string"
              },
              "title": {
                "description": "a short, human-readable summary of the problem that SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "UseCaseScheduledReviewResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "created_by_id": {
              "description": "",
              "type": "string"
            },
            "due_date": {
              "description": "",
              "type": "string"
            },
            "inserted_at": {
              "description": "",
              "type": "string"
            },
            "scheduled_at": {
              "description": "",
              "type": "string"
            },
            "team_ids": {
              "description": "",
              "type": "string"
            },
            "timezone": {
              "description": "",
              "type": "string"
            },
            "updated_at": {
              "description": "",
              "type": "string"
            },
            "use_case_id": {
              "description": "",
              "type": "string"
            },
            "user_ids": {
              "description": "",
              "type": "string"
            },
            "workflow_stage_id": {
              "description": "",
              "type": "string"
            },
            "workflow_stage_step": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {
            "teams": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related teams resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related teams resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "use_case": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related use_case resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related use_case resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "users": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related users resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related users resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "use_case_scheduled_reviews",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SectionFileResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "content_type": {
              "description": "",
              "type": "string"
            },
            "filename": {
              "description": "",
              "type": "string"
            },
            "id": {
              "description": "",
              "type": "string"
            },
            "inserted_at": {
              "description": "",
              "type": "string"
            },
            "question_id": {
              "description": "",
              "type": "string"
            },
            "section_id": {
              "description": "",
              "type": "string"
            },
            "size": {
              "description": "",
              "type": "string"
            },
            "updated_at": {
              "description": "",
              "type": "string"
            },
            "url": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {},
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "use_case_questionnaire_section_files",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ModelQuestionnaireResponse": {
      "description": "A JSON-API document with a single [ModelQuestionnaireResource](#modelquestionnaireresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/ModelQuestionnaireResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "CustomPolicyPackBasesResponse": {
      "description": "A collection of [CustomPolicyPackBaseResource](#custompolicypackbaseresource)",
      "properties": {
        "data": {
          "description": "Content with [CustomPolicyPackBaseResource](#custompolicypackbaseresource) objects",
          "items": {
            "$ref": "#/definitions/CustomPolicyPackBaseResource"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "QuestionnaireBaseCreateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "id": {
                  "description": "id",
                  "type": "string"
                },
                "info": {
                  "description": "",
                  "type": "object"
                },
                "metadata": {
                  "description": "",
                  "type": "object"
                },
                "name": {
                  "description": "name",
                  "type": "string"
                },
                "target": {
                  "description": "target",
                  "type": "string"
                }
              },
              "required": [
                "id",
                "name"
              ],
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "WebhookCreateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "authentication_method": {
                  "description": "authentication method",
                  "type": "string"
                },
                "authentication_payload": {
                  "description": "object",
                  "type": "object"
                },
                "authentication_payload_type": {
                  "description": "string",
                  "type": "string"
                },
                "authentication_server": {
                  "description": "string",
                  "type": "string"
                },
                "bucket": {
                  "description": "use_case_events",
                  "type": "string"
                },
                "description": {
                  "description": "description",
                  "type": "string"
                },
                "environment": {
                  "description": "string",
                  "type": "string"
                },
                "event_type_prefix": {
                  "description": "string",
                  "type": "string"
                },
                "event_type_suffix": {
                  "description": "string",
                  "type": "string"
                },
                "event_types": {
                  "description": "event type",
                  "type": "array"
                },
                "url": {
                  "description": "url",
                  "type": "string"
                }
              },
              "required": [
                "description",
                "event_types",
                "url",
                "authentication_method"
              ],
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "VendorCustomFieldResponse": {
      "description": "A JSON-API document with a single [VendorCustomFieldResource](#vendorcustomfieldresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/VendorCustomFieldResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "UseCaseRiskScenarioCreateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "description": {
                  "description": "risk scenario description",
                  "type": "string"
                },
                "inherent_risk_impact": {
                  "description": "inherent risk impact(1-5)",
                  "example": 1,
                  "type": "integer"
                },
                "inherent_risk_likelihood": {
                  "description": "inherent risk likelihood(1-5)",
                  "example": 1,
                  "type": "integer"
                },
                "name": {
                  "description": "risk scenario name",
                  "type": "string"
                },
                "risk_scenario_id": {
                  "description": "risk scenario id",
                  "example": "8zA2nPjVSenyvcc429LPDT",
                  "type": "string"
                },
                "risk_type_ids": {
                  "description": "risk type ids",
                  "example": [
                    "NkBkDB9i64w53eVR6ssfzj"
                  ],
                  "type": "array"
                },
                "type": {
                  "description": "risk type",
                  "example": "abuse_misuse",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UseCaseCustomFieldResponse": {
      "description": "A JSON-API document with a single [UseCaseCustomFieldResource](#usecasecustomfieldresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/UseCaseCustomFieldResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "DatabaseError": {
      "properties": {
        "errors": {
          "description": "Errors",
          "items": {
            "properties": {
              "code": {
                "description": "an application-specific error code, expressed as a string value.",
                "type": "integer"
              },
              "detail": {
                "description": "a human-readable explanation specific to this occurrence of the problem. Like title, this field’s value can be localized.",
                "type": "string"
              },
              "title": {
                "description": "a short, human-readable summary of the problem that SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "SectionFileCreateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "content": {
                  "description": "Base 64 encoded file content",
                  "type": "string"
                },
                "content_type": {
                  "description": "Content type",
                  "type": "string"
                },
                "filename": {
                  "description": "File name",
                  "type": "string"
                },
                "question_id": {
                  "description": "Question ID",
                  "type": "string"
                },
                "size": {
                  "description": "File size",
                  "type": "integer"
                }
              },
              "required": [
                "content"
              ],
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UseCaseCustomFieldResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "custom_field_id": {
              "description": "",
              "type": "string"
            },
            "entity_id": {
              "description": "",
              "type": "string"
            },
            "name": {
              "description": "",
              "type": "string"
            },
            "use_case_id": {
              "description": "",
              "type": "string"
            },
            "value": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {
            "custom_field": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related custom_field resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related custom_field resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "use_case_custom_fields",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomRiskScenarioCreateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "author": {
                  "description": "author name",
                  "type": "string"
                },
                "description": {
                  "description": "risk scenario description",
                  "type": "string"
                },
                "domains": {
                  "description": "domain names",
                  "example": [
                    "domain 1"
                  ],
                  "type": "array"
                },
                "industries": {
                  "description": "industry names",
                  "example": [
                    "industry 1"
                  ],
                  "type": "array"
                },
                "name": {
                  "description": "risk scenario name",
                  "type": "string"
                },
                "regions": {
                  "description": "region names",
                  "example": [
                    "region 1"
                  ],
                  "type": "array"
                },
                "risk_type_ids": {
                  "description": "risk type ids",
                  "example": [
                    "ppduDfPRaPVNh8NvPD9Gug"
                  ],
                  "type": "array"
                }
              },
              "required": [
                "name"
              ],
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "WorkflowStageCreateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "assessment_required": {
                  "description": true,
                  "type": "boolean"
                },
                "description": {
                  "description": "",
                  "type": "string"
                },
                "evidence_collection_required": {
                  "description": true,
                  "type": "boolean"
                },
                "name": {
                  "description": "",
                  "type": "string"
                },
                "parent_id": {
                  "description": "",
                  "type": "string"
                }
              },
              "required": [
                "name",
                "parent_id"
              ],
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UseCasePolicyPackResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "due_date": {
              "description": "",
              "type": "string"
            },
            "entity_id": {
              "description": "",
              "type": "string"
            },
            "inserted_at": {
              "description": "",
              "type": "string"
            },
            "key": {
              "description": "",
              "type": "string"
            },
            "timezone": {
              "description": "",
              "type": "string"
            },
            "updated_at": {
              "description": "",
              "type": "string"
            },
            "use_case_id": {
              "description": "",
              "type": "string"
            },
            "version": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {
            "use_case": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related use_case resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related use_case resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "use_case_policy_packs",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CommentThreadCreateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "content": {
                  "description": "",
                  "type": "string"
                },
                "parent_entity_control_id": {
                  "description": "parent entity control id",
                  "type": "string"
                },
                "parent_q_section_id": {
                  "description": "parent question section id",
                  "type": "string"
                },
                "parent_use_case_review_id": {
                  "description": "parent use case review id",
                  "type": "string"
                },
                "resource_id": {
                  "description": "resource id",
                  "type": "string"
                },
                "resource_type": {
                  "description": "resource type",
                  "enum": [
                    "review_action",
                    "evidence_requirement",
                    "control",
                    "question",
                    "none"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "content"
              ],
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "comment_threads",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ModelQuestionnaireSectionsResponse": {
      "description": "A collection of [ModelQuestionnaireSectionResource](#modelquestionnairesectionresource)",
      "properties": {
        "data": {
          "description": "Content with [ModelQuestionnaireSectionResource](#modelquestionnairesectionresource) objects",
          "items": {
            "$ref": "#/definitions/ModelQuestionnaireSectionResource"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "IndustryResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "description": {
              "description": "",
              "type": "string"
            },
            "name": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {},
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "industries",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ModifyPolicyPackResource": {
      "description": "A PolicyPackRel",
      "properties": {
        "id": {
          "description": "policy pack id",
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "title": "PolicyPackRel",
      "type": "object"
    },
    "DomainCreateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "description": {
                  "description": "Domain description",
                  "type": "string"
                },
                "id": {
                  "description": "Domain ID",
                  "type": "string"
                },
                "name": {
                  "description": "Domain name",
                  "type": "string"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MeResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "email": {
              "description": "",
              "type": "string"
            },
            "family_name": {
              "description": "",
              "type": "string"
            },
            "given_name": {
              "description": "",
              "type": "string"
            },
            "is_initialized": {
              "description": "",
              "type": "boolean"
            },
            "is_local": {
              "description": "",
              "type": "boolean"
            },
            "job": {
              "description": "",
              "type": "string"
            },
            "locale": {
              "description": "",
              "type": "string"
            },
            "nickname": {
              "description": "",
              "type": "string"
            },
            "picture": {
              "description": "",
              "type": "string"
            },
            "role": {
              "description": "",
              "type": "string"
            },
            "sub": {
              "description": "",
              "type": "array"
            },
            "team": {
              "description": "",
              "type": "string"
            },
            "title": {
              "description": "",
              "type": "string"
            },
            "ux_config": {
              "description": "",
              "type": "map"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {
            "favorite_use_cases": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related favorite_use_cases resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related favorite_use_cases resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "recently_visited_use_cases": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related recently_visited_use_cases resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related recently_visited_use_cases resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "setting": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related setting resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related setting resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "me",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ModelQuestionnairesResponse": {
      "description": "A collection of [ModelQuestionnaireResource](#modelquestionnaireresource)",
      "properties": {
        "data": {
          "description": "Content with [ModelQuestionnaireResource](#modelquestionnaireresource) objects",
          "items": {
            "$ref": "#/definitions/ModelQuestionnaireResource"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "UseCaseRiskScenarioResponse": {
      "description": "A JSON-API document with a single [UseCaseRiskScenarioResource](#usecaseriskscenarioresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/UseCaseRiskScenarioResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "QuestionnaireBasesResponse": {
      "description": "A collection of [QuestionnaireBaseResource](#questionnairebaseresource)",
      "properties": {
        "data": {
          "description": "Content with [QuestionnaireBaseResource](#questionnairebaseresource) objects",
          "items": {
            "$ref": "#/definitions/QuestionnaireBaseResource"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "ModelsPageResponse": {
      "description": "A page of [ModelResource](#modelresource) results",
      "properties": {
        "data": {
          "description": "Content with [ModelResource](#modelresource) objects",
          "items": {
            "$ref": "#/definitions/ModelResource"
          },
          "type": "array"
        },
        "meta": {
          "properties": {
            "after": {
              "description": "after cursor for the next page resources",
              "type": "string"
            },
            "before": {
              "description": "before cursor for the previous page resources",
              "type": "string"
            },
            "limit": {
              "description": "number of resources limit applied to this request",
              "type": "integer"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "UseCaseTriggeredActionResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "active": {
              "description": "",
              "type": "boolean"
            },
            "multi_trigger_info": {
              "description": "",
              "items": {
                "properties": {
                  "answer": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "options": {
                    "description": "Options for the question",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "question_id": {
                    "type": "string"
                  },
                  "questionnaire_id": {
                    "type": "string"
                  },
                  "section_id": {
                    "type": "string"
                  },
                  "trigger_id": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "question": {
              "description": "",
              "type": "string"
            },
            "trigger_source": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {
            "action": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related action resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related action resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "trigger": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related trigger resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related trigger resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "use_case": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related use_case resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related use_case resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "triggered_action",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ModelCustomFieldUpdateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "custom_field_id": {
                  "description": "custom_field_id",
                  "type": "string"
                },
                "value": {
                  "description": "value",
                  "type": "any"
                }
              },
              "required": [
                "custom_field_id"
              ],
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "QuestionnaireVersionsResponse": {
      "description": "A collection of [QuestionnaireVersionResource](#questionnaireversionresource)",
      "properties": {
        "data": {
          "description": "Content with [QuestionnaireVersionResource](#questionnaireversionresource) objects",
          "items": {
            "$ref": "#/definitions/QuestionnaireVersionResource"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "UseCaseStakeholderResponse": {
      "description": "A JSON-API document with a single [UseCaseStakeholderResource](#usecasestakeholderresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/UseCaseStakeholderResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "ModelVersionResponse": {
      "description": "A JSON-API document with a single [ModelVersionResource](#modelversionresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/ModelVersionResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "SourcesPageResponse": {
      "description": "A page of [SourceResource](#sourceresource) results",
      "properties": {
        "data": {
          "description": "Content with [SourceResource](#sourceresource) objects",
          "items": {
            "$ref": "#/definitions/SourceResource"
          },
          "type": "array"
        },
        "meta": {
          "properties": {
            "after": {
              "description": "after cursor for the next page resources",
              "type": "string"
            },
            "before": {
              "description": "before cursor for the previous page resources",
              "type": "string"
            },
            "limit": {
              "description": "number of resources limit applied to this request",
              "type": "integer"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "RiskScenarioResponse": {
      "description": "A JSON-API document with a single [RiskScenarioResource](#riskscenarioresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/RiskScenarioResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "TasksResponse": {
      "description": "A collection of [TaskResource](#taskresource)",
      "properties": {
        "data": {
          "description": "Content with [TaskResource](#taskresource) objects",
          "items": {
            "$ref": "#/definitions/TaskResource"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "RiskTypeUpdateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "description": {
                  "description": "risk type description",
                  "example": "Custom Risk Description",
                  "type": "string"
                },
                "hidden": {
                  "description": "hidden value for risk type",
                  "example": true,
                  "type": "boolean"
                },
                "name": {
                  "description": "risk type name",
                  "example": "Custom Risk",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "id": {
              "description": "The JSON-API resource ID",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "NotFoundError": {
      "properties": {
        "errors": {
          "description": "Errors",
          "items": {
            "properties": {
              "code": {
                "description": "an application-specific error code, expressed as a string value.",
                "type": "integer"
              },
              "detail": {
                "description": "a human-readable explanation specific to this occurrence of the problem. Like title, this field’s value can be localized.",
                "type": "string"
              },
              "title": {
                "description": "a short, human-readable summary of the problem that SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "UseCaseExportResponse": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "ai_type": {
              "description": "",
              "type": "string"
            },
            "control_refs": {
              "description": "",
              "type": "string"
            },
            "creator_id": {
              "description": "",
              "type": "string"
            },
            "description": {
              "description": "",
              "type": "string"
            },
            "domain_ids": {
              "description": "",
              "type": "string"
            },
            "entity_id": {
              "description": "",
              "type": "string"
            },
            "icon": {
              "description": "",
              "type": "string"
            },
            "in_review": {
              "description": "",
              "type": "string"
            },
            "industries": {
              "description": "",
              "type": "string"
            },
            "inserted_at": {
              "description": "",
              "type": "string"
            },
            "is_vendor": {
              "description": "",
              "type": "string"
            },
            "monetary_value": {
              "description": "",
              "type": "string"
            },
            "name": {
              "description": "",
              "type": "string"
            },
            "policy_pack_refs": {
              "description": "",
              "type": "string"
            },
            "questionnaire_ids": {
              "description": "",
              "type": "string"
            },
            "rai_issues_count": {
              "description": "",
              "type": "string"
            },
            "regions": {
              "description": "",
              "type": "string"
            },
            "risk_category_level": {
              "description": "",
              "type": "string"
            },
            "risk_classification_level": {
              "description": "",
              "type": "string"
            },
            "settings": {
              "description": "",
              "type": "string"
            },
            "source": {
              "description": "",
              "type": "string"
            },
            "updated_at": {
              "description": "",
              "type": "string"
            },
            "use_case_number": {
              "description": "",
              "type": "string"
            },
            "workflow_stage_id": {
              "description": "",
              "type": "string"
            },
            "workflow_stage_step": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {
            "assist": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related assist resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related assist resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "creator": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related creator resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related creator resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "custom_fields": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related custom_fields resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related custom_fields resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "model_links": {
              "properties": {
                "data": {
                  "items": {
                    "properties": {
                      "id": {
                        "description": "Related model_links resource id",
                        "type": "string"
                      },
                      "type": {
                        "description": "Type of related model_links resource",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "models": {
              "properties": {
                "data": {
                  "items": {
                    "properties": {
                      "id": {
                        "description": "Related models resource id",
                        "type": "string"
                      },
                      "type": {
                        "description": "Type of related models resource",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "policy_packs": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related policy_packs resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related policy_packs resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "questionnaires": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related questionnaires resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related questionnaires resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "risk_scenarios": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related risk_scenarios resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related risk_scenarios resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "scheduled_reviews": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related scheduled_reviews resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related scheduled_reviews resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "stakeholders": {
              "properties": {
                "data": {
                  "items": {
                    "properties": {
                      "id": {
                        "description": "Related stakeholders resource id",
                        "type": "string"
                      },
                      "type": {
                        "description": "Type of related stakeholders resource",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "use_case_sync_issues": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related use_case_sync_issues resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related use_case_sync_issues resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "vendor_links": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related vendor_links resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related vendor_links resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "vendors": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related vendors resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related vendors resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "workflow_stage": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related workflow_stage resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related workflow_stage resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "use_cases",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UseCaseVendorLinkResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "inserted_at": {
              "description": "",
              "type": "string"
            },
            "use_case_id": {
              "description": "",
              "type": "string"
            },
            "vendor_id": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {
            "vendor": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related vendor resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related vendor resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "use_case_vendor_links",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RelationshipResource": {
      "description": "Represents a relationship between resources",
      "properties": {
        "id": {
          "description": "Unique identifier for the resource",
          "type": "string"
        },
        "type": {
          "description": "Type of the resource",
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "UseCaseSnapshotResponse": {
      "description": "A JSON-API document with a single [UseCaseSnapshotResource](#usecasesnapshotresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/UseCaseSnapshotResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "IndustriesResponse": {
      "description": "A collection of [IndustryResource](#industryresource)",
      "properties": {
        "data": {
          "description": "Content with [IndustryResource](#industryresource) objects",
          "items": {
            "$ref": "#/definitions/IndustryResource"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "UseCaseCommentResponse": {
      "description": "A JSON-API document with a single [UseCaseCommentResource](#usecasecommentresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/UseCaseCommentResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "VendorQuestionnaireUpdateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "version": {
                  "description": "questionnaire version",
                  "type": "integer"
                }
              },
              "required": [
                "version"
              ],
              "type": "object"
            },
            "id": {
              "description": "The JSON-API resource ID",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SourceCreateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "name": {
                  "description": "Source name",
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "VendorQuestionnaireSectionResponse": {
      "description": "A JSON-API document with a single [VendorQuestionnaireSectionResource](#vendorquestionnairesectionresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/VendorQuestionnaireSectionResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "UseCaseStakeholderResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "inserted_at": {
              "description": "",
              "type": "string"
            },
            "role": {
              "description": "",
              "type": "string"
            },
            "team_id": {
              "description": "",
              "type": "string"
            },
            "updated_at": {
              "description": "",
              "type": "string"
            },
            "use_case_id": {
              "description": "",
              "type": "string"
            },
            "user_id": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {
            "team": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related team resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related team resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "user": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related user resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related user resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "use_case_stakeholders",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ModelCreateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "name": {
                  "description": "Model name",
                  "type": "string"
                },
                "questionnaire_ids": {
                  "description": "Questionnaire Version IDs To Include",
                  "example": [
                    "MODEL-QUEST+1",
                    "MODEL-EVAL+2"
                  ],
                  "items": "string",
                  "type": "array"
                },
                "source": {
                  "description": "",
                  "type": "string"
                },
                "status": {
                  "description": "",
                  "type": "string"
                },
                "summary": {
                  "description": "",
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "RiskScenariosResponse": {
      "description": "A collection of [RiskScenarioResource](#riskscenarioresource)",
      "properties": {
        "data": {
          "description": "Content with [RiskScenarioResource](#riskscenarioresource) objects",
          "items": {
            "$ref": "#/definitions/RiskScenarioResource"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "AuditLogsPageResponse": {
      "description": "A page of [AuditLogResource](#auditlogresource) results",
      "properties": {
        "data": {
          "description": "Content with [AuditLogResource](#auditlogresource) objects",
          "items": {
            "$ref": "#/definitions/AuditLogResource"
          },
          "type": "array"
        },
        "meta": {
          "properties": {
            "after": {
              "description": "after cursor for the next page resources",
              "type": "string"
            },
            "before": {
              "description": "before cursor for the previous page resources",
              "type": "string"
            },
            "limit": {
              "description": "number of resources limit applied to this request",
              "type": "integer"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "ActionResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "data": {
              "description": "",
              "type": "string"
            },
            "description": {
              "description": "",
              "type": "string"
            },
            "rank": {
              "description": "",
              "type": "string"
            },
            "show_visual_alert": {
              "description": "",
              "type": "string"
            },
            "target_group_key": {
              "description": "",
              "type": "string"
            },
            "trigger_ids": {
              "description": "",
              "type": "string"
            },
            "type": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {},
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "action",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BadRequestError": {
      "properties": {
        "errors": {
          "description": "Errors",
          "items": {
            "properties": {
              "code": {
                "description": "an application-specific error code, expressed as a string value.",
                "type": "integer"
              },
              "detail": {
                "description": "a human-readable explanation specific to this occurrence of the problem. Like title, this field’s value can be localized.",
                "type": "string"
              },
              "title": {
                "description": "a short, human-readable summary of the problem that SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CustomRiskScenarioUpdateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "author": {
                  "description": "author name",
                  "type": "string"
                },
                "description": {
                  "description": "risk scenario description",
                  "type": "string"
                },
                "domains": {
                  "description": "domain names",
                  "example": [
                    "domain 1"
                  ],
                  "type": "array"
                },
                "industries": {
                  "description": "industry names",
                  "example": [
                    "industry 1"
                  ],
                  "type": "array"
                },
                "name": {
                  "description": "risk scenario name",
                  "type": "string"
                },
                "regions": {
                  "description": "region names",
                  "example": [
                    "region 1"
                  ],
                  "type": "array"
                },
                "risk_type_ids": {
                  "description": "risk type ids",
                  "example": [
                    "ppduDfPRaPVNh8NvPD9Gug"
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "id": {
              "description": "The JSON-API resource ID",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ModelVersionCreateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "description": {
                  "description": "",
                  "type": "string"
                },
                "version": {
                  "description": "v1",
                  "type": "string"
                }
              },
              "required": [
                "version"
              ],
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PolicyPackResponse": {
      "description": "A JSON-API document with a single [PolicyPackResource](#policypackresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/PolicyPackResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "VendorQuestionnairesResponse": {
      "description": "A collection of [VendorQuestionnaireResource](#vendorquestionnaireresource)",
      "properties": {
        "data": {
          "description": "Content with [VendorQuestionnaireResource](#vendorquestionnaireresource) objects",
          "items": {
            "$ref": "#/definitions/VendorQuestionnaireResource"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "CommentCreateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "content": {
                  "description": "The content of the comment",
                  "type": "string"
                }
              },
              "required": [
                "content"
              ],
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "comments",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UseCaseQuestionnaireSectionEvidenceCreateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "data": {
                  "description": "value data",
                  "example": {
                    "value": "This is text evidence"
                  },
                  "type": "object"
                },
                "generated_at": {
                  "description": "evidence generated time",
                  "example": "2022-05-03T11:33:25.582138Z",
                  "type": "string"
                },
                "question_id": {
                  "description": "question id",
                  "type": "string"
                }
              },
              "required": [
                "question_id",
                "data"
              ],
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AuditLogResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "action": {
              "description": "",
              "type": "string"
            },
            "action_id": {
              "description": "",
              "type": "string"
            },
            "inserted_at": {
              "description": "",
              "type": "string"
            },
            "message": {
              "description": "",
              "type": "string"
            },
            "metadata": {
              "description": "",
              "type": "string"
            },
            "name": {
              "description": "",
              "type": "string"
            },
            "use_case_id": {
              "description": "",
              "type": "string"
            },
            "user": {
              "description": "",
              "type": "string"
            },
            "user_id": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {},
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "audit_logs",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ModelEvidencesResponse": {
      "description": "A collection of [ModelEvidenceResource](#modelevidenceresource)",
      "properties": {
        "data": {
          "description": "Content with [ModelEvidenceResource](#modelevidenceresource) objects",
          "items": {
            "$ref": "#/definitions/ModelEvidenceResource"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "ModelFileResponse": {
      "description": "A JSON-API document with a single [ModelFileResource](#modelfileresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/ModelFileResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "UseCasePolicyPackUpdateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "due_date": {
                  "description": "due date",
                  "example": "2024-01-30T17:00:00.000Z",
                  "type": "string"
                },
                "timezone": {
                  "description": "timezone",
                  "example": "Asia/Seoul",
                  "type": "string"
                },
                "version": {
                  "description": "policy pack version",
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "id": {
              "description": "The JSON-API resource ID",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ReportResponse": {
      "description": "A JSON-API document with a single [ReportResource](#reportresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/ReportResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "TeamMembersRemoveRequest": {
      "description": "team mebers to delete",
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/TeamMembersRemoveResource"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ModelVendorLinkResponse": {
      "description": "A JSON-API document with a single [ModelVendorLinkResource](#modelvendorlinkresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/ModelVendorLinkResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "WebhooksResponse": {
      "description": "A collection of [WebhookResource](#webhookresource)",
      "properties": {
        "data": {
          "description": "Content with [WebhookResource](#webhookresource) objects",
          "items": {
            "$ref": "#/definitions/WebhookResource"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "UseCaseUpdateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "ai_type": {
                  "description": "",
                  "type": "string"
                },
                "description": {
                  "description": "",
                  "type": "string"
                },
                "icon": {
                  "description": "",
                  "type": "string"
                },
                "industries": {
                  "description": "industries",
                  "example": [
                    "Fishing, Hunting, & Trapping"
                  ],
                  "type": "array"
                },
                "is_vendor": {
                  "description": "",
                  "type": "boolean"
                },
                "monetary_value": {
                  "description": "",
                  "type": "integer"
                },
                "name": {
                  "description": "",
                  "type": "string"
                },
                "regions": {
                  "description": "regions",
                  "example": [
                    "CA",
                    "US"
                  ],
                  "type": "array"
                },
                "risk_classification_level": {
                  "description": "Risk classification level",
                  "example": 1,
                  "type": "integer"
                },
                "settings": {
                  "description": "use case settings",
                  "example": {
                    "use_risk_evaluations": false
                  },
                  "type": "object"
                },
                "source": {
                  "description": "",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "id": {
              "description": "The JSON-API resource ID",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UseCaseImportResponse": {
      "description": "Import use cases response",
      "properties": {
        "data": {
          "description": "Import use cases data",
          "properties": {
            "details": {
              "description": "List of details",
              "items": {
                "properties": {
                  "error": {
                    "description": "Error details",
                    "example": "code: \"MISSING_ENTITY_NAME\", details: \"Missing use case name\"",
                    "properties": {
                      "code": {
                        "description": "Error code",
                        "type": "string"
                      },
                      "details": {
                        "description": "Error details",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "id": {
                    "description": "Use case unique identifier",
                    "type": "string"
                  },
                  "index": {
                    "description": "Index of the use case in the import list",
                    "example": 0,
                    "type": "integer"
                  },
                  "name": {
                    "description": "Name of the use case",
                    "type": "string"
                  },
                  "status": {
                    "description": "Status of the use case",
                    "enum": [
                      "success",
                      "failure"
                    ],
                    "example": "success",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "status": {
              "description": "Status of the import",
              "enum": [
                "success",
                "failure",
                "partial_success"
              ],
              "example": "success",
              "type": "string"
            },
            "summary": {
              "description": "Import summary",
              "example": "%{total: 2, successful: 1, failed: 1}",
              "properties": {
                "failed": {
                  "description": "Number of failed use cases",
                  "type": "integer"
                },
                "successful": {
                  "description": "Number of successfully imported use cases",
                  "type": "integer"
                },
                "total": {
                  "description": "Total number of attempted use cases to import",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TaskBulkDeleteRequest": {
      "type": "object",
      "required": [
        "ids"
      ],
      "properties": {
        "ids": {
          "type": "array",
          "description": "Array of task IDs to delete",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "EvidenceTypeResponse": {
      "description": "A JSON-API document with a single [EvidenceTypeResource](#evidencetyperesource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/EvidenceTypeResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "UseCaseQuestionnaireSectionResponse": {
      "description": "A JSON-API document with a single [UseCaseQuestionnaireSectionResource](#usecasequestionnairesectionresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/UseCaseQuestionnaireSectionResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "ReportCreateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "policy_pack_key": {
                  "description": "",
                  "type": "string"
                },
                "policy_pack_version": {
                  "description": "",
                  "type": "integer"
                },
                "report_type": {
                  "description": "",
                  "type": "string"
                },
                "template_key": {
                  "description": "",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ApiTokenResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "inserted_at": {
              "description": "",
              "type": "string"
            },
            "last_used_at": {
              "description": "",
              "type": "string"
            },
            "name": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {},
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "api_tokens",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReportResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "inserted_at": {
              "description": "",
              "type": "string"
            },
            "policy_pack_key": {
              "description": "",
              "type": "string"
            },
            "policy_pack_version": {
              "description": "",
              "type": "string"
            },
            "report_type": {
              "description": "",
              "type": "string"
            },
            "snapshot_id": {
              "description": "",
              "type": "string"
            },
            "template_key": {
              "description": "",
              "type": "string"
            },
            "use_case_id": {
              "description": "",
              "type": "string"
            },
            "user_id": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {
            "attestation_requests": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related attestation_requests resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related attestation_requests resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "snapshot": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related snapshot resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related snapshot resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "user": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related user resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related user resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "use_case_reports",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ModelCustomFieldResponse": {
      "description": "A JSON-API document with a single [ModelCustomFieldResource](#modelcustomfieldresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/ModelCustomFieldResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "UseCaseControlEvidenceCreateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "data": {
                  "description": "value data",
                  "example": {
                    "value": "This is text evidence"
                  },
                  "type": "object"
                },
                "generated_at": {
                  "description": "2022-05-03T11:33:25.582138Z",
                  "type": "string"
                },
                "requirement_key": {
                  "description": "evidence requirement key",
                  "type": "string"
                }
              },
              "required": [
                "data"
              ],
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UseCaseQuestionnaireCreateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "key": {
                  "description": "questionnaire key",
                  "example": "QUES",
                  "type": "string"
                },
                "version": {
                  "description": "quetionnaire version",
                  "type": "integer"
                }
              },
              "required": [
                "key",
                "version"
              ],
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ControlFileResponse": {
      "description": "A JSON-API document with a single [ControlFileResource](#controlfileresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/ControlFileResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "UseCaseThreadResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "comments_count": {
              "description": "",
              "type": "integer"
            },
            "inserted_at": {
              "description": "",
              "type": "string"
            },
            "parent_comment_id": {
              "description": "",
              "type": "string"
            },
            "status": {
              "description": "",
              "type": "string"
            },
            "tags": {
              "description": "Tags",
              "example": [
                "FAIR.C1"
              ],
              "type": "array"
            },
            "topic": {
              "description": "",
              "type": "string"
            },
            "updated_at": {
              "description": "",
              "type": "string"
            },
            "use_case_id": {
              "description": "",
              "type": "string"
            },
            "user_id": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {
            "comments": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related comments resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related comments resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "parent_comment": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related parent_comment resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related parent_comment resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "user": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related user resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related user resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "use_case_threads",
          "type": "string"
        }
      },
      "type": "object"
    },
    "QuestionnaireBaseResponse": {
      "description": "A JSON-API document with a single [QuestionnaireBaseResource](#questionnairebaseresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/QuestionnaireBaseResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "UseCaseThreadsResponse": {
      "description": "A collection of [UseCaseThreadResource](#usecasethreadresource)",
      "properties": {
        "data": {
          "description": "Content with [UseCaseThreadResource](#usecasethreadresource) objects",
          "items": {
            "$ref": "#/definitions/UseCaseThreadResource"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "CommentThreadResponse": {
      "description": "A JSON-API document with a single [CommentThreadResource](#commentthreadresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/CommentThreadResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "UsersResponse": {
      "description": "A page of [UserResource](#userresource) results",
      "properties": {
        "data": {
          "description": "Content with [UserResource](#userresource) objects",
          "items": {
            "$ref": "#/definitions/UserResource"
          },
          "type": "array"
        },
        "meta": {
          "properties": {
            "after": {
              "description": "after cursor for the next page resources",
              "type": "string"
            },
            "before": {
              "description": "before cursor for the previous page resources",
              "type": "string"
            },
            "limit": {
              "description": "number of resources limit applied to this request",
              "type": "integer"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "RiskTypeCreateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "description": {
                  "description": "risk type description",
                  "example": "Custom Risk Description",
                  "type": "string"
                },
                "name": {
                  "description": "risk type name",
                  "example": "Custom Risk",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "IntegrationsResponse": {
      "description": "A collection of [IntegrationResource](#integrationresource)",
      "properties": {
        "data": {
          "description": "Content with [IntegrationResource](#integrationresource) objects",
          "items": {
            "$ref": "#/definitions/IntegrationResource"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "ApiTokensResponse": {
      "description": "A collection of [ApiTokenResource](#apitokenresource)",
      "properties": {
        "data": {
          "description": "Content with [ApiTokenResource](#apitokenresource) objects",
          "items": {
            "$ref": "#/definitions/ApiTokenResource"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "CommentsResponse": {
      "description": "A collection of [CommentResource](#commentresource)",
      "properties": {
        "data": {
          "description": "Content with [CommentResource](#commentresource) objects",
          "items": {
            "$ref": "#/definitions/CommentResource"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "RiskClassificationResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "value": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {},
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "risk_classifications",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorUpdateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "description": {
                  "description": "",
                  "type": "string"
                },
                "name": {
                  "description": "",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "id": {
              "description": "The JSON-API resource ID",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UseCaseRiskControlLinkResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "control_key": {
              "description": "",
              "type": "string"
            },
            "inserted_at": {
              "description": "",
              "type": "string"
            },
            "risk_id": {
              "description": "",
              "type": "string"
            },
            "use_case_id": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {
            "risk": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related risk resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related risk resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "use_case_risk_control_links",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomPolicyPackBaseResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "archived": {
              "description": "",
              "type": "string"
            },
            "custom": {
              "description": "",
              "type": "string"
            },
            "deprecated": {
              "description": "",
              "type": "string"
            },
            "info": {
              "description": "",
              "type": "string"
            },
            "inserted_at": {
              "description": "",
              "type": "string"
            },
            "metadata": {
              "description": "",
              "type": "string"
            },
            "ownership_type": {
              "description": "",
              "type": "string"
            },
            "transferred_at": {
              "description": "",
              "type": "string"
            },
            "updated_at": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {
            "versions": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related versions resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related versions resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "policy_pack_bases",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PolicyControlsCollectionResponse": {
      "description": "A collection of [PolicyControlResource](#policycontrolresource)",
      "properties": {
        "data": {
          "description": "Content with [PolicyControlResource](#policycontrolresource) objects",
          "items": {
            "$ref": "#/definitions/PolicyControlResource"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "UseCaseQuestionnaireResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "due_date": {
              "description": "",
              "type": "string"
            },
            "entity_id": {
              "description": "",
              "type": "string"
            },
            "inserted_at": {
              "description": "",
              "type": "string"
            },
            "key": {
              "description": "",
              "type": "string"
            },
            "timezone": {
              "description": "",
              "type": "string"
            },
            "updated_at": {
              "description": "",
              "type": "string"
            },
            "use_case_id": {
              "description": "",
              "type": "string"
            },
            "version": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {
            "use_case": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related use_case resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related use_case resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "use_case_questionnaires",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ModelResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "custom": {
              "description": "",
              "type": "string"
            },
            "has_use_cases": {
              "description": "",
              "type": "string"
            },
            "inserted_at": {
              "description": "",
              "type": "string"
            },
            "name": {
              "description": "",
              "type": "string"
            },
            "questionnaire_ids": {
              "description": "",
              "type": "string"
            },
            "source": {
              "description": "",
              "type": "string"
            },
            "status": {
              "description": "",
              "type": "string"
            },
            "summary": {
              "description": "",
              "type": "string"
            },
            "updated_at": {
              "description": "",
              "type": "string"
            },
            "user_id": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {
            "use_cases": {
              "properties": {
                "data": {
                  "items": {
                    "properties": {
                      "id": {
                        "description": "Related use_cases resource id",
                        "type": "string"
                      },
                      "type": {
                        "description": "Type of related use_cases resource",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "user": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related user resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related user resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "vendors": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related vendors resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related vendors resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "versions": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related versions resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related versions resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "models",
          "type": "string"
        }
      },
      "type": "object"
    },
    "QuestionnaireBaseResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "archived": {
              "description": "",
              "type": "string"
            },
            "custom": {
              "description": "",
              "type": "string"
            },
            "info": {
              "description": "",
              "type": "string"
            },
            "inserted_at": {
              "description": "",
              "type": "string"
            },
            "metadata": {
              "description": "",
              "type": "string"
            },
            "name": {
              "description": "",
              "type": "string"
            },
            "show_on_create": {
              "description": "",
              "type": "string"
            },
            "target": {
              "description": "",
              "type": "string"
            },
            "updated_at": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {
            "versions": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related versions resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related versions resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "questionnaire_bases",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DomainResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "custom": {
              "description": "",
              "type": "string"
            },
            "description": {
              "description": "",
              "type": "string"
            },
            "grouping": {
              "description": "",
              "type": "string"
            },
            "hidden": {
              "description": "",
              "type": "string"
            },
            "name": {
              "description": "",
              "type": "string"
            },
            "use_case_count": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {},
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "domains",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ModelCustomFieldsResponse": {
      "description": "A collection of [ModelCustomFieldResource](#modelcustomfieldresource)",
      "properties": {
        "data": {
          "description": "Content with [ModelCustomFieldResource](#modelcustomfieldresource) objects",
          "items": {
            "$ref": "#/definitions/ModelCustomFieldResource"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "QuestionnaireVersionResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "base_id": {
              "description": "",
              "type": "string"
            },
            "draft": {
              "description": "",
              "type": "string"
            },
            "inserted_at": {
              "description": "",
              "type": "string"
            },
            "sections": {
              "description": "",
              "type": "string"
            },
            "updated_at": {
              "description": "",
              "type": "string"
            },
            "version": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {},
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "questionnaire_versions",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorQuestionnaireSectionResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "compliances": {
              "description": "",
              "type": "string"
            },
            "entity_id": {
              "description": "",
              "type": "string"
            },
            "inserted_at": {
              "description": "",
              "type": "string"
            },
            "questionnaire_id": {
              "description": "",
              "type": "string"
            },
            "section_id": {
              "description": "",
              "type": "string"
            },
            "status": {
              "description": "",
              "type": "string"
            },
            "updated_at": {
              "description": "",
              "type": "string"
            },
            "vendor_id": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {},
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "vendor_questionnaire_sections",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UseCaseControlsResponse": {
      "description": "A collection of [UseCaseControlResource](#usecasecontrolresource)",
      "properties": {
        "data": {
          "description": "Content with [UseCaseControlResource](#usecasecontrolresource) objects",
          "items": {
            "$ref": "#/definitions/UseCaseControlResource"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "VendorQuestionnaireCreateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "key": {
                  "description": "questionnaire key",
                  "type": "string"
                },
                "version": {
                  "description": "questionnaire version",
                  "type": "integer"
                }
              },
              "required": [
                "key",
                "version"
              ],
              "type": "object"
            },
            "id": {
              "description": "The JSON-API resource ID",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UseCaseStakeholderCreateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "role": {
                  "description": "",
                  "type": "string"
                },
                "team_id": {
                  "description": "",
                  "type": "string"
                },
                "user_id": {
                  "description": "",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CustomFieldUpdateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "element_type": {
                  "description": "element type",
                  "enum": [
                    "input",
                    "checkbox",
                    "select",
                    "datepicker"
                  ],
                  "type": "string"
                },
                "metadata": {
                  "description": "metadata",
                  "example": {
                    "max": 100,
                    "min": 0
                  },
                  "type": "object"
                },
                "multiple": {
                  "description": "multiple",
                  "example": true,
                  "type": "boolean"
                },
                "name": {
                  "description": "name",
                  "type": "string"
                },
                "options": {
                  "description": "options",
                  "example": [
                    "Finance",
                    "Marketing"
                  ],
                  "type": "array"
                },
                "type": {
                  "description": "type",
                  "enum": [
                    "string",
                    "number",
                    "datetime",
                    "user"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "id": {
              "description": "The JSON-API resource ID",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "RiskClassificationsUpdateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "value": {
                  "description": "custom risk classifications (formerly known as risk categories - deprecated term)",
                  "example": [
                    {
                      "level": "1",
                      "name": "High"
                    },
                    {
                      "level": "2",
                      "name": "Low"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PolicyControlBaseResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "archived": {
              "description": "",
              "type": "string"
            },
            "deprecated": {
              "description": "",
              "type": "string"
            },
            "inserted_at": {
              "description": "",
              "type": "string"
            },
            "ownership_type": {
              "description": "",
              "type": "string"
            },
            "transferred_at": {
              "description": "",
              "type": "string"
            },
            "updated_at": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {
            "versions": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related versions resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related versions resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "policy_control_bases",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomFieldResponse": {
      "description": "A JSON-API document with a single [CustomFieldResource](#customfieldresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/CustomFieldResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "VendorQuestionnaireResponse": {
      "description": "A JSON-API document with a single [VendorQuestionnaireResource](#vendorquestionnaireresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/VendorQuestionnaireResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "UseCaseRiskControlLinkCreateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "control_key": {
                  "description": "",
                  "type": "string"
                },
                "risk_id": {
                  "description": "",
                  "type": "string"
                }
              },
              "required": [
                "risk_id",
                "control_key"
              ],
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UseCaseTriggeredActionResponse": {
      "description": "A collection of [UseCaseTriggeredActionResource](#usecasetriggeredactionresource)",
      "properties": {
        "data": {
          "description": "Content with [UseCaseTriggeredActionResource](#usecasetriggeredactionresource) objects",
          "items": {
            "$ref": "#/definitions/UseCaseTriggeredActionResource"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "TeamCreateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "description": {
                  "description": "",
                  "type": "string"
                },
                "name": {
                  "description": "",
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "RiskTypesResponse": {
      "description": "A collection of [RiskTypeResource](#risktyperesource)",
      "properties": {
        "data": {
          "description": "Content with [RiskTypeResource](#risktyperesource) objects",
          "items": {
            "$ref": "#/definitions/RiskTypeResource"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "TeamMembersUpsertRequest": {
      "description": "upsert team members request",
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/TeamMembersUpsertResource"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "UseCaseControlResponse": {
      "description": "A JSON-API document with a single [UseCaseControlResource](#usecasecontrolresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/UseCaseControlResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "AssistRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "content": {
                  "description": "content",
                  "type": "string"
                },
                "content_type": {
                  "description": "content type",
                  "type": "string"
                },
                "filename": {
                  "description": "File name",
                  "type": "string"
                }
              },
              "required": [
                "content",
                "content_type"
              ],
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "WorkflowStageUpdateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "assessment_required": {
                  "description": true,
                  "type": "boolean"
                },
                "description": {
                  "description": "",
                  "type": "string"
                },
                "evidence_collection_required": {
                  "description": true,
                  "type": "boolean"
                },
                "name": {
                  "description": "",
                  "type": "string"
                },
                "parent_id": {
                  "description": "",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "id": {
              "description": "The JSON-API resource ID",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TeamResponse": {
      "description": "A JSON-API document with a single [TeamResource](#teamresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/TeamResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "VendorResponse": {
      "description": "A JSON-API document with a single [VendorResource](#vendorresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/VendorResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "UseCaseCommentResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "content": {
              "description": "",
              "type": "string"
            },
            "inserted_at": {
              "description": "",
              "type": "string"
            },
            "metadata": {
              "description": "",
              "type": "string"
            },
            "thread_id": {
              "description": "",
              "type": "string"
            },
            "updated_at": {
              "description": "",
              "type": "string"
            },
            "use_case_id": {
              "description": "",
              "type": "string"
            },
            "user_id": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {
            "reply_thread": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related reply_thread resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related reply_thread resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "thread": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related thread resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related thread resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "user": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related user resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related user resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "use_case_comments",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ControlFileCreateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "content": {
                  "description": "Base 64 encoded file content",
                  "type": "string"
                },
                "content_type": {
                  "description": "Content type",
                  "type": "string"
                },
                "filename": {
                  "description": "File name",
                  "type": "string"
                },
                "requirement_key": {
                  "description": "file requirement key",
                  "type": "string"
                },
                "size": {
                  "description": "File size",
                  "type": "integer"
                }
              },
              "required": [
                "content"
              ],
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "WorkflowStageResponse": {
      "description": "A JSON-API document with a single [WorkflowStageResource](#workflowstageresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/WorkflowStageResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "TeamMembersUpsertResource": {
      "description": "Upsert TeamMembership",
      "example": {
        "id": "user_id",
        "role": "owner",
        "type": "users"
      },
      "properties": {
        "id": {
          "description": "member id",
          "type": "string"
        },
        "role": {
          "description": "member type",
          "enum": [
            "owner",
            "member"
          ],
          "type": "string"
        },
        "type": {
          "description": "users",
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "title": "Upsert TeamMembership",
      "type": "object"
    },
    "TeamResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "description": {
              "description": "",
              "type": "string"
            },
            "name": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {
            "members": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related members resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related members resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "memberships": {
              "properties": {
                "data": {
                  "items": {
                    "properties": {
                      "id": {
                        "description": "Related memberships resource id",
                        "type": "string"
                      },
                      "type": {
                        "description": "Type of related memberships resource",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "teams",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UseCasesImportRequest": {
      "description": "List of use cases to import",
      "items": {
        "properties": {
          "ai_type": {
            "description": "AI Type of the use case",
            "type": "string"
          },
          "description": {
            "description": "Description of the use case",
            "type": "string"
          },
          "domains": {
            "description": "Domains",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "icon": {
            "description": "Icon of the use case",
            "type": "string"
          },
          "industries": {
            "description": "Industries",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "monetary_value": {
            "description": "The monetary value of a use case",
            "type": "integer"
          },
          "name": {
            "description": "Name of the use case",
            "type": "string"
          },
          "questionnaires": {
            "description": "List of questionnaires",
            "items": {
              "properties": {
                "key": {
                  "description": "Questionnaire unique key",
                  "example": "SEQR",
                  "type": "string"
                },
                "sections": {
                  "description": "List of sections",
                  "items": {
                    "properties": {
                      "id": {
                        "description": "Section unique identifier",
                        "example": "64YUaLWSviHgibJaRWr3ZE",
                        "type": "string"
                      },
                      "questions": {
                        "description": "List of questions",
                        "items": {
                          "properties": {
                            "id": {
                              "description": "Question unique identifier",
                              "example": "64YUaLWSviHgibJaRWr3ZE",
                              "type": "string"
                            },
                            "value": {
                              "description": "Question value",
                              "example": "This is text evidence",
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "value"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "required": [
                      "id",
                      "questions"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "version": {
                  "description": "Questionnaire verstion",
                  "example": 1,
                  "type": "number"
                }
              },
              "required": [
                "key"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "regions": {
            "description": "Regions",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "risk_classification_level": {
            "description": "Risk Classification Level of the use case",
            "type": "integer"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "type": "array"
    },
    "UseCaseReviewUpdateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "due_date": {
                  "description": "due date",
                  "example": "2024-01-30T17:00:00.000Z",
                  "type": "string"
                },
                "review_date": {
                  "description": "review date",
                  "example": "2024-01-30T17:00:00.000Z",
                  "type": "string"
                },
                "status": {
                  "description": "status",
                  "enum": [
                    "in_progress",
                    "closed",
                    "approved"
                  ],
                  "type": "string"
                },
                "timezone": {
                  "description": "due date timezone",
                  "example": "America/New_York",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "id": {
              "description": "The JSON-API resource ID",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ModelFileCreateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "content": {
                  "description": "Base 64 encoded file content",
                  "type": "string"
                },
                "content_type": {
                  "description": "content type",
                  "type": "string"
                },
                "filename": {
                  "description": "File name",
                  "type": "string"
                },
                "size": {
                  "description": "File size",
                  "type": "integer"
                }
              },
              "required": [
                "content"
              ],
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UseCasePolicyPackCreateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "key": {
                  "description": "policy_pack key",
                  "example": "QUES",
                  "type": "string"
                },
                "version": {
                  "description": "quetionnaire version",
                  "type": "integer"
                }
              },
              "required": [
                "key",
                "version"
              ],
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ActionCreateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "data": {
                  "description": "",
                  "type": "object"
                },
                "description": {
                  "description": "",
                  "type": "string"
                },
                "show_visual_alert": {
                  "description": "",
                  "type": "boolean"
                },
                "trigger_ids": {
                  "description": "trigger_ids",
                  "example": [
                    "abc",
                    "def",
                    "ghi"
                  ],
                  "type": "array"
                },
                "type": {
                  "description": "",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UseCaseReviewActionsResponse": {
      "description": "A page of [UseCaseReviewActionResource](#usecasereviewactionresource) results",
      "properties": {
        "data": {
          "description": "Content with [UseCaseReviewActionResource](#usecasereviewactionresource) objects",
          "items": {
            "$ref": "#/definitions/UseCaseReviewActionResource"
          },
          "type": "array"
        },
        "meta": {
          "properties": {
            "after": {
              "description": "after cursor for the next page resources",
              "type": "string"
            },
            "before": {
              "description": "before cursor for the previous page resources",
              "type": "string"
            },
            "limit": {
              "description": "number of resources limit applied to this request",
              "type": "integer"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "ModelFileResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "content_type": {
              "description": "",
              "type": "string"
            },
            "entity_id": {
              "description": "",
              "type": "string"
            },
            "filename": {
              "description": "",
              "type": "string"
            },
            "inserted_at": {
              "description": "",
              "type": "string"
            },
            "model_id": {
              "description": "",
              "type": "string"
            },
            "size": {
              "description": "",
              "type": "string"
            },
            "updated_at": {
              "description": "",
              "type": "string"
            },
            "url": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {},
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "model_files",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCreateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "description": {
                  "description": "",
                  "type": "string"
                },
                "name": {
                  "description": "",
                  "type": "string"
                },
                "questionnaire_ids": {
                  "description": "Questionnaire Version IDs To Include",
                  "example": [
                    "VEND+1",
                    "VEND_QUEST+2"
                  ],
                  "items": "string",
                  "type": "array"
                }
              },
              "required": [
                "name"
              ],
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CustomFieldResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "element_type": {
              "description": "",
              "type": "string"
            },
            "metadata": {
              "description": "",
              "type": "string"
            },
            "multiple": {
              "description": "",
              "type": "string"
            },
            "name": {
              "description": "",
              "type": "string"
            },
            "options": {
              "description": "",
              "type": "string"
            },
            "target": {
              "description": "",
              "type": "string"
            },
            "type": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {},
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "custom_fields",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EmptyDataRequest": {
      "description": "empty data",
      "example": {
        "data": []
      },
      "items": {
        "$ref": "#/definitions/EmptyEntry"
      },
      "title": "EmptyData",
      "type": "array"
    },
    "NotificationsPageResponse": {
      "description": "A page of [NotificationResource](#notificationresource) results",
      "properties": {
        "data": {
          "description": "Content with [NotificationResource](#notificationresource) objects",
          "items": {
            "$ref": "#/definitions/NotificationResource"
          },
          "type": "array"
        },
        "meta": {
          "properties": {
            "after": {
              "description": "after cursor for the next page resources",
              "type": "string"
            },
            "before": {
              "description": "before cursor for the previous page resources",
              "type": "string"
            },
            "limit": {
              "description": "number of resources limit applied to this request",
              "type": "integer"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "EvidenceResponse": {
      "description": "A JSON-API document with a single [EvidenceResource](#evidenceresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/EvidenceResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "QuestionnairesResponse": {
      "description": "A collection of [QuestionnaireResource](#questionnaireresource)",
      "properties": {
        "data": {
          "description": "Content with [QuestionnaireResource](#questionnaireresource) objects",
          "items": {
            "$ref": "#/definitions/QuestionnaireResource"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "ControlsAssignmentRequest": {
      "description": "A JSON-API document with a single [ControlsAssignmentResource](#controlsassignmentresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/ControlsAssignmentResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "ReportsResponse": {
      "description": "A collection of [ReportResource](#reportresource)",
      "properties": {
        "data": {
          "description": "Content with [ReportResource](#reportresource) objects",
          "items": {
            "$ref": "#/definitions/ReportResource"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "VendorResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "custom": {
              "description": "",
              "type": "string"
            },
            "description": {
              "description": "",
              "type": "string"
            },
            "entity_id": {
              "description": "",
              "type": "string"
            },
            "inserted_at": {
              "description": "",
              "type": "string"
            },
            "name": {
              "description": "",
              "type": "string"
            },
            "questionnaire_ids": {
              "description": "",
              "type": "string"
            },
            "status": {
              "description": "",
              "type": "string"
            },
            "updated_at": {
              "description": "",
              "type": "string"
            },
            "user_id": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {
            "models": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related models resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related models resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "questionnaires": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related questionnaires resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related questionnaires resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "use_case_links": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related use_case_links resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related use_case_links resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "use_cases": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related use_cases resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related use_cases resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "user": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related user resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related user resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "vendors",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ApiTokenCreatedResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "inserted_at": {
              "description": "",
              "type": "string"
            },
            "last_used_at": {
              "description": "",
              "type": "string"
            },
            "name": {
              "description": "",
              "type": "string"
            },
            "token": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {},
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "api_tokens",
          "type": "string"
        }
      },
      "type": "object"
    },
    "QuestionnaireDuplicateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "key": {
                  "description": "key of duplicated questionnaire",
                  "example": "QUES-KEY",
                  "type": "string"
                },
                "name": {
                  "description": "name of duplicated questionnaire",
                  "type": "string"
                }
              },
              "required": [
                "key",
                "name"
              ],
              "type": "object"
            },
            "id": {
              "description": "The JSON-API resource ID",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UseCaseReviewActionUpdateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "comment": {
                  "description": "comment",
                  "type": "string"
                },
                "resolved": {
                  "description": "resolved",
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "id": {
              "description": "The JSON-API resource ID",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PolicyControlResponse": {
      "description": "A JSON-API document with a single [PolicyControlResource](#policycontrolresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/PolicyControlResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "ActionResponse": {
      "description": "A JSON-API document with a single [ActionResource](#actionresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/ActionResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "UseCaseVendorLinkCreateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "vendor_id": {
                  "description": "vendor ID",
                  "type": "string"
                }
              },
              "required": [
                "vendor_id"
              ],
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DomainUpdateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "hidden": {
                  "description": "",
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "id": {
              "description": "The JSON-API resource ID",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UpdateRiskClassificationRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "risk_classification_level": {
                  "description": "Risk classification level",
                  "example": 1,
                  "type": "integer"
                }
              },
              "required": [
                "risk_classification_level"
              ],
              "type": "object"
            },
            "id": {
              "description": "The JSON-API resource ID",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UseCaseRiskScenarioResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "description": {
              "description": "",
              "type": "string"
            },
            "inherent_risk": {
              "description": "",
              "type": "string"
            },
            "inherent_risk_impact": {
              "description": "",
              "type": "string"
            },
            "inherent_risk_likelihood": {
              "description": "",
              "type": "string"
            },
            "inserted_at": {
              "description": "",
              "type": "string"
            },
            "name": {
              "description": "",
              "type": "string"
            },
            "residual_risk": {
              "description": "",
              "type": "string"
            },
            "residual_risk_impact": {
              "description": "",
              "type": "string"
            },
            "residual_risk_likelihood": {
              "description": "",
              "type": "string"
            },
            "risk_scenario_id": {
              "description": "",
              "type": "string"
            },
            "risk_type_ids": {
              "description": "",
              "type": "string"
            },
            "updated_at": {
              "description": "",
              "type": "string"
            },
            "use_case_id": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {
            "risk_control_links": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related risk_control_links resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related risk_control_links resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "risk_scenario": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related risk_scenario resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related risk_scenario resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "use_case_risk_scenarios",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ModelVendorLinkCreateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "model_id": {
                  "description": "Model ID",
                  "type": "string"
                }
              },
              "required": [
                "model_id"
              ],
              "type": "object"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "resource-type",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "WebhookResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "authentication_method": {
              "description": "",
              "type": "string"
            },
            "authentication_payload": {
              "description": "",
              "type": "string"
            },
            "authentication_payload_type": {
              "description": "",
              "type": "string"
            },
            "authentication_server": {
              "description": "",
              "type": "string"
            },
            "bucket": {
              "description": "",
              "type": "string"
            },
            "description": {
              "description": "",
              "type": "string"
            },
            "environment": {
              "description": "",
              "type": "string"
            },
            "event_type_prefix": {
              "description": "",
              "type": "string"
            },
            "event_type_suffix": {
              "description": "",
              "type": "string"
            },
            "event_types": {
              "description": "",
              "type": "string"
            },
            "url": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {},
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "webhook",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UserSettingResponse": {
      "description": "A JSON-API document with a single [UserSettingResource](#usersettingresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/UserSettingResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "ApiTokenCreatedResponse": {
      "description": "A JSON-API document with a single [ApiTokenCreatedResource](#apitokencreatedresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/ApiTokenCreatedResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "PolicyPacksCollectionResponse": {
      "description": "A collection of [PolicyPackResource](#policypackresource)",
      "properties": {
        "data": {
          "description": "Content with [PolicyPackResource](#policypackresource) objects",
          "items": {
            "$ref": "#/definitions/PolicyPackResource"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "UserSettingResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "notification_preferences": {
              "description": "",
              "type": "object"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {},
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "user_settings",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UseCaseQuestionnaireSectionResource": {
      "description": "",
      "properties": {
        "attributes": {
          "properties": {
            "compliances": {
              "description": "",
              "type": "string"
            },
            "entity_id": {
              "description": "",
              "type": "string"
            },
            "inserted_at": {
              "description": "",
              "type": "string"
            },
            "questionnaire_id": {
              "description": "",
              "type": "string"
            },
            "section_id": {
              "description": "",
              "type": "string"
            },
            "status": {
              "description": "",
              "type": "string"
            },
            "updated_at": {
              "description": "",
              "type": "string"
            },
            "use_case_id": {
              "description": "",
              "type": "string"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The JSON-API resource ID",
          "example": "64YUaLWSviHgibJaRWr3ZE",
          "type": "string"
        },
        "relationships": {
          "properties": {
            "task": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "description": "Related task resource id",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of related task resource",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "type": {
          "description": "The JSON-API resource type",
          "example": "use_case_questionnaire_sections",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomFieldsResponse": {
      "description": "A collection of [CustomFieldResource](#customfieldresource)",
      "properties": {
        "data": {
          "description": "Content with [CustomFieldResource](#customfieldresource) objects",
          "items": {
            "$ref": "#/definitions/CustomFieldResource"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "UseCaseThreadResponse": {
      "description": "A JSON-API document with a single [UseCaseThreadResource](#usecasethreadresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/UseCaseThreadResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "RiskClassificationsResponse": {
      "description": "A collection of [RiskClassificationResource](#riskclassificationresource)",
      "properties": {
        "data": {
          "description": "Content with [RiskClassificationResource](#riskclassificationresource) objects",
          "items": {
            "$ref": "#/definitions/RiskClassificationResource"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "ModelResponse": {
      "description": "A JSON-API document with a single [ModelResource](#modelresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/ModelResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "CommentThreadUpdateRequest": {
      "description": "",
      "properties": {
        "data": {
          "description": "",
          "properties": {
            "attributes": {
              "properties": {
                "status": {
                  "description": "status",
                  "enum": [
                    "resolved"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "id": {
              "description": "The JSON-API resource ID",
              "example": "64YUaLWSviHgibJaRWr3ZE",
              "type": "string"
            },
            "type": {
              "description": "The JSON-API resource type",
              "example": "comment_threads",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UseCaseQuestionnaireSectionsResponse": {
      "description": "A collection of [UseCaseQuestionnaireSectionResource](#usecasequestionnairesectionresource)",
      "properties": {
        "data": {
          "description": "Content with [UseCaseQuestionnaireSectionResource](#usecasequestionnairesectionresource) objects",
          "items": {
            "$ref": "#/definitions/UseCaseQuestionnaireSectionResource"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "VendorsResponse": {
      "description": "A page of [VendorResource](#vendorresource) results",
      "properties": {
        "data": {
          "description": "Content with [VendorResource](#vendorresource) objects",
          "items": {
            "$ref": "#/definitions/VendorResource"
          },
          "type": "array"
        },
        "meta": {
          "properties": {
            "after": {
              "description": "after cursor for the next page resources",
              "type": "string"
            },
            "before": {
              "description": "before cursor for the previous page resources",
              "type": "string"
            },
            "limit": {
              "description": "number of resources limit applied to this request",
              "type": "integer"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "UserResponse": {
      "description": "A JSON-API document with a single [UserResource](#userresource) resource",
      "properties": {
        "data": {
          "$ref": "#/definitions/UserResource"
        },
        "included": {
          "description": "Included resources",
          "items": {
            "properties": {
              "id": {
                "description": "The JSON-API resource ID",
                "type": "string"
              },
              "type": {
                "description": "The JSON-API resource type",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    }
  },
  "paths": {
    "/domains": {
      "get": {
        "description": "Retrieves a list of all domains.",
        "operationId": "CredoAIWeb.API.V2.DomainController.index",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DomainsResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "fields"
        ]
      },
      "post": {
        "description": "Creates a new custom domain with the provided attributes.",
        "operationId": "CredoAIWeb.API.V2.DomainController.create",
        "parameters": [
          {
            "description": "data",
            "in": "body",
            "name": "model",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DomainCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/DomainResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "fields"
        ]
      }
    },
    "/use_cases/{use_case_id}/reports/{report_id}/attestation_requests": {
      "post": {
        "description": "Create a new attestation request for a specific report associated with a use case.",
        "operationId": "CredoAIWeb.API.V2.UseCase.Report.AttestationRequestController.create",
        "parameters": [
          {
            "description": "The unique identifier of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique identifier of the report.",
            "in": "path",
            "name": "report_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The attributes for the new attestation request.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ReportAttestationRequestCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ReportAttestationRequestResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_reports"
        ]
      }
    },
    "/me/setting/notification_preferences": {
      "patch": {
        "description": "Update the notification preferences for the currently authenticated user.",
        "operationId": "CredoAIWeb.API.V2.UserController.update_my_noti_setting",
        "parameters": [
          {
            "description": "data",
            "in": "body",
            "name": "model",
            "required": false,
            "schema": {
              "$ref": "#/definitions/NotificationPreferencesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "user"
        ]
      }
    },
    "/use_cases/{use_case_id}/assist": {
      "delete": {
        "description": "Deletes the assist entry associated with the specified use case.",
        "operationId": "CredoAIWeb.API.V2.UseCase.AssistController.delete",
        "parameters": [
          {
            "description": "The ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_assist"
        ]
      },
      "get": {
        "description": "Retrieves the assist entry associated with the specified use case.",
        "operationId": "CredoAIWeb.API.V2.UseCase.AssistController.show",
        "parameters": [
          {
            "description": "The ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UseCaseAssistResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_assist"
        ]
      },
      "post": {
        "description": "Creates an assist for the given use case.",
        "operationId": "CredoAIWeb.API.V2.UseCase.AssistController.assist_use_case",
        "parameters": [
          {
            "description": "The ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "attributes",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AssistRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_assist"
        ]
      }
    },
    "/policy_control_bases": {
      "get": {
        "description": "Retrieves a list of all policy control bases available.",
        "operationId": "CredoAIWeb.API.V2.PolicyControl.BaseController.index",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyControlBasesResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "policy_controls"
        ]
      },
      "post": {
        "description": "Creates a new custom policy control base with the provided attributes.",
        "operationId": "CredoAIWeb.API.V2.PolicyControl.BaseController.create",
        "parameters": [
          {
            "description": "The attributes for the new policy control base.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PolicyControlBaseCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/PolicyControlBaseResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "policy_controls"
        ]
      }
    },
    "/api/v2/workflow_stages": {
      "get": {
        "description": "List all workflow stages",
        "operationId": "CredoAIWeb.API.V2.WorkflowStageController.index",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkflowStage"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "workflow_stages"
        ]
      },
      "post": {
        "description": "Create a new workflow stage",
        "operationId": "CredoAIWeb.API.V2.WorkflowStageController.create",
        "parameters": [
          {
            "description": "Stage attributes",
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkflowStageCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/WorkflowStage"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "workflow_stages"
        ]
      }
    },
    "/use_cases/{use_case_id}/vendor_links/{id}": {
      "delete": {
        "description": "Delete a specific vendor link associated with a use case.",
        "operationId": "CredoAIWeb.API.V2.UseCase.VendorLinkController.delete",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the vendor link to be deleted.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_cases"
        ]
      }
    },
    "/me/relationships/favorite_use_cases": {
      "patch": {
        "description": "Modify the list of the user's favorite use cases.",
        "operationId": "CredoAIWeb.API.V2.MeController.set_favorite_use_cases",
        "parameters": [
          {
            "description": "Attributes for updating the user's favorite use cases.",
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/MeUpdateFavoriteUseCasesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MeResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "user"
        ]
      }
    },
    "/questionnaires/{id}/duplicate": {
      "post": {
        "description": "Creates a duplicate of the specified questionnaire, initializing a new custom questionnaire with version 1.",
        "operationId": "CredoAIWeb.API.V2.QuestionnaireController.duplicate",
        "parameters": [
          {
            "description": "ID of the source questionnaire to duplicate",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Request body containing the new questionnaire's key and name",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/QuestionnaireDuplicateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/QuestionnaireVersionResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "questionnaires"
        ]
      }
    },
    "/models/{model_id}/questionnaire_sections/{id}": {
      "get": {
        "description": "Fetches a specific questionnaire section for a model.",
        "operationId": "CredoAIWeb.API.V2.Model.Questionnaire.SectionController.show",
        "parameters": [
          {
            "description": "The unique ID of the model.",
            "in": "path",
            "name": "model_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the questionnaire section.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelQuestionnaireSectionResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "models"
        ]
      }
    },
    "/models/{model_id}/files": {
      "get": {
        "description": "Retrieve a list of files associated with a specific model.",
        "operationId": "CredoAIWeb.API.V2.Model.FileController.index",
        "parameters": [
          {
            "description": "The unique ID of the model whose files are being retrieved.",
            "in": "path",
            "name": "model_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelFilesResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "models"
        ]
      },
      "post": {
        "description": "Upload a new file for a specific model.",
        "operationId": "CredoAIWeb.API.V2.Model.FileController.create",
        "parameters": [
          {
            "description": "The unique ID of the model for whom the file is being created.",
            "in": "path",
            "name": "model_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The attributes of the file to be created.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ModelFileCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelFileResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "models"
        ]
      }
    },
    "/use_cases/{use_case_id}/workflow_stage": {
      "patch": {
        "description": "Update the workflow stage of a specific use case.",
        "operationId": "CredoAIWeb.API.V2.UseCaseController.update_workflow_stage",
        "parameters": [
          {
            "description": "Unique ID of the use case",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Workflow stage attributes",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UpdateWorkflowStageRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UseCaseResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_cases"
        ]
      }
    },
    "/risk_types/{id}": {
      "patch": {
        "description": "Update an existing risk type identified by its ID.",
        "operationId": "CredoAIWeb.API.V2.RiskTypeController.update",
        "parameters": [
          {
            "description": "The unique ID of the risk type to update.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "attributes",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/RiskTypeUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RiskTypeResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "risks"
        ]
      }
    },
    "/me/teams": {
      "get": {
        "description": "Retrieve a list of teams that the currently authenticated user is a member of.",
        "operationId": "CredoAIWeb.API.V2.TeamController.my_teams",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TeamsResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "user"
        ]
      }
    },
    "/use_cases/{use_case_id}/stakeholders/{id}": {
      "delete": {
        "description": "Remove a stakeholder from the specified use case.",
        "operationId": "CredoAIWeb.API.V2.UseCase.StakeholderController.delete",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the stakeholder to be deleted.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_cases"
        ]
      },
      "patch": {
        "description": "Update the role of an existing stakeholder within the specified use case.",
        "operationId": "CredoAIWeb.API.V2.UseCase.StakeholderController.update",
        "parameters": [
          {
            "description": "The unique ID of the stakeholder to be updated.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The attributes to update for the stakeholder.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UseCaseStakeholderUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UseCaseStakeholderResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_cases"
        ]
      }
    },
    "/custom_fields/{id}": {
      "delete": {
        "description": "Deletes the custom field identified by its ID. Returns no content upon successful deletion.",
        "operationId": "CredoAIWeb.API.V2.CustomFieldController.delete",
        "parameters": [
          {
            "description": "The unique identifier of the custom field to delete.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "fields"
        ]
      },
      "patch": {
        "description": "Updates the details of an existing custom field identified by its ID. Returns the updated field's details.",
        "operationId": "CredoAIWeb.API.V2.CustomFieldController.update",
        "parameters": [
          {
            "description": "The unique identifier of the custom field to update.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "attributes",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CustomFieldUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomFieldResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "fields"
        ]
      }
    },
    "/use_cases/{use_case_id}/questionnaire_sections/{section_id}/files/{id}": {
      "delete": {
        "description": "Deletes a specific file from a questionnaire section for a given use case.",
        "operationId": "CredoAIWeb.API.V2.UseCase.Questionnaire.SectionFileController.delete",
        "parameters": [
          {
            "description": "The unique ID for the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID for the questionnaire section.",
            "in": "path",
            "name": "section_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID for the file to be deleted.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_questionnaires"
        ]
      }
    },
    "/models/{model_id}/files/{id}": {
      "delete": {
        "description": "Delete a specific file associated with a model by its unique ID.",
        "operationId": "CredoAIWeb.API.V2.Model.FileController.delete",
        "parameters": [
          {
            "description": "The unique ID of the model whose file is to be deleted.",
            "in": "path",
            "name": "model_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the file to be deleted.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "models"
        ]
      }
    },
    "/use_case_reviews/{id}": {
      "delete": {
        "description": "Delete a specific review identified by its unique ID.",
        "operationId": "CredoAIWeb.API.V2.UseCase.ReviewController.delete",
        "parameters": [
          {
            "description": "The unique ID of the use case review.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_reviews"
        ]
      },
      "get": {
        "description": "Fetch details of a specific review by its unique ID.",
        "operationId": "CredoAIWeb.API.V2.UseCase.ReviewController.show",
        "parameters": [
          {
            "description": "The unique ID of the use case review.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UseCaseReviewResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_reviews"
        ]
      },
      "patch": {
        "description": "Update an existing review identified by its ID.",
        "operationId": "CredoAIWeb.API.V2.UseCase.ReviewController.update",
        "parameters": [
          {
            "description": "The unique ID of the use case review.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The attributes to update the review.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UseCaseReviewUpdateRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_reviews"
        ]
      }
    },
    "/policy_controls/{id}": {
      "get": {
        "description": "Get policy control",
        "operationId": "CredoAIWeb.API.V2.PolicyControlController.show",
        "parameters": [
          {
            "description": "policy control id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyControlResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "policy_controls"
        ]
      }
    },
    "/models/{model_id}/questionnaires/{id}": {
      "delete": {
        "description": "Remove a specific questionnaire from a model's collection.",
        "operationId": "CredoAIWeb.API.V2.Model.QuestionnaireController.delete",
        "parameters": [
          {
            "description": "The unique ID of the model.",
            "in": "path",
            "name": "model_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the questionnaire to be deleted.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "models"
        ]
      },
      "patch": {
        "description": "Update the version of a specific questionnaire for a model.",
        "operationId": "CredoAIWeb.API.V2.Model.QuestionnaireController.update",
        "parameters": [
          {
            "description": "The unique ID of the model.",
            "in": "path",
            "name": "model_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the questionnaire to be updated.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The attributes for updating the questionnaire.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ModelQuestionnaireUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelQuestionnaireResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "models"
        ]
      }
    },
    "/use_cases/{use_case_id}/{policy_pack_key}/audit_logs": {
      "get": {
        "description": "Retrieve a list of all audit logs associated with a specific use case and policy pack.",
        "operationId": "CredoAIWeb.API.V2.UseCase.AuditLogController.index",
        "parameters": [
          {
            "description": "page after cursor",
            "in": "query",
            "name": "page[after]",
            "required": false,
            "type": "string"
          },
          {
            "description": "page before cursor",
            "in": "query",
            "name": "page[before]",
            "required": false,
            "type": "string"
          },
          {
            "description": "page limit",
            "in": "query",
            "name": "page[limit]",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The unique ID of the use case for which audit logs are being retrieved.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the policy pack associated with the audit logs.",
            "in": "path",
            "name": "policy_pack_key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuditLogsPageResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_policy_packs"
        ]
      }
    },
    "/use_cases/{use_case_id}/questionnaire_sections/{section_id}/evidences": {
      "get": {
        "description": "Retrieves a list of evidences associated with a specific use case questionnaire section.",
        "operationId": "CredoAIWeb.API.V2.UseCase.Questionnaire.SectionEvidenceController.index",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the questionnaire section.",
            "in": "path",
            "name": "section_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EvidencesResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_questionnaires"
        ]
      },
      "post": {
        "description": "Creates a new evidence entry for a specific question within a questionnaire section of a use case.",
        "operationId": "CredoAIWeb.API.V2.UseCase.Questionnaire.SectionEvidenceController.create",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the questionnaire section.",
            "in": "path",
            "name": "section_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The attributes of the evidence to be created.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UseCaseQuestionnaireSectionEvidenceCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/EvidenceResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_questionnaires"
        ]
      }
    },
    "/use_cases/{use_case_id}/risk_scenarios": {
      "get": {
        "description": "Retrieves a list of all risk scenarios associated with the specified use case",
        "operationId": "CredoAIWeb.API.V2.UseCase.RiskScenarioController.index",
        "parameters": [
          {
            "description": "The ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UseCasesRiskScenariosResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_risk_scenarios"
        ]
      },
      "post": {
        "description": "Creates a new risk scenario for the specified use case. Options include:\n1. Creating a new scenario with a name and risk type.\n2. Referencing an existing scenario using its ID.\n",
        "operationId": "CredoAIWeb.API.V2.UseCase.RiskScenarioController.create",
        "parameters": [
          {
            "description": "The ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The attributes for the new risk scenario.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UseCaseRiskScenarioCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/UseCaseRiskScenarioResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/UseCaseRiskAlreadyExistError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_risk_scenarios"
        ]
      }
    },
    "/use_cases/{use_case_id}/questionnaires/{id}": {
      "delete": {
        "description": "Remove queationnaire from use case, as a result deletes use_case_questionnaires and use_case_questionnaire_sections",
        "operationId": "CredoAIWeb.API.V2.UseCase.QuestionnaireController.delete",
        "parameters": [
          {
            "description": "use_case id",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "use_case_questionnaire id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_questionnaires"
        ]
      },
      "patch": {
        "description": "Update use_case_questionnaires.\nIf version is provided, it will upgrade questinnaire to that version and other attributes will be ignored.\nIf due_date is provided, it will update due_date of use_case_questionnaires.\n",
        "operationId": "CredoAIWeb.API.V2.UseCase.QuestionnaireController.update",
        "parameters": [
          {
            "description": "use_case id",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "use_case_questionnaire id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "attributes",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UseCaseQuestionnaireUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UseCaseQuestionnaireResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_questionnaires"
        ]
      }
    },
    "/use_cases/export": {
      "get": {
        "description": "Export use cases to a JSON or CSV file format.",
        "operationId": "CredoAIWeb.API.V2.UseCaseController.export",
        "parameters": [],
        "produces": [
          [
            "application/json",
            "text/csv"
          ]
        ],
        "responses": {
          "200": {
            "description": "Successfully exported use cases in the requested format",
            "examples": {
              "application/jsontext/csv": "id,name,use_case_number,icon,description,risk_classification_level,workflow_stage,workflow_stage_step,in_review,ai_type,monetary_value,industries,regions,domains,is_vendor,rai_issues_count,updated_at,inserted_at\nHgdkGBGax7Qi6ezNBVM7bU,UseCase1,UC-123,,Description1,1,Start Stage,assessment,false,gen_ai,5000,Agriculture,Global,General Purpose AI,false,1,2021-01-01T14:23:06.555759Z,2021-01-01T14:23:06.555759Z"
            },
            "schema": {
              "allOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "#/definitions/UseCaseExportResponse"
                }
              ]
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_cases"
        ]
      }
    },
    "/use_case_reviews/{review_id}/tasks": {
      "post": {
        "description": "Create a new task associated with a specific use case review.",
        "operationId": "CredoAIWeb.API.V2.UseCase.ReviewController.create_task",
        "parameters": [
          {
            "description": "The unique ID of the use case review.",
            "in": "path",
            "name": "review_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The attributes for the new task.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UseCaseControlTaskCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TaskResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_reviews",
          "tasks"
        ]
      }
    },
    "/questionnaire_bases": {
      "get": {
        "description": "Retrieves a list of all questionnaire bases.",
        "operationId": "CredoAIWeb.API.V2.Questionnaire.BaseController.index",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuestionnaireBasesResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "questionnaires"
        ]
      },
      "post": {
        "description": "Creates a new questionnaire base with the provided attributes.",
        "operationId": "CredoAIWeb.API.V2.Questionnaire.BaseController.create",
        "parameters": [
          {
            "description": "The attributes for the new questionnaire base.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/QuestionnaireBaseCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/QuestionnaireBaseResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "questionnaires"
        ]
      }
    },
    "/sources": {
      "get": {
        "description": "Retrieve a list of all sources available in the system.",
        "operationId": "CredoAIWeb.API.V2.SourceController.index",
        "parameters": [
          {
            "description": "page after cursor",
            "in": "query",
            "name": "page[after]",
            "required": false,
            "type": "string"
          },
          {
            "description": "page before cursor",
            "in": "query",
            "name": "page[before]",
            "required": false,
            "type": "string"
          },
          {
            "description": "page limit",
            "in": "query",
            "name": "page[limit]",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SourcesPageResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "sources"
        ]
      },
      "post": {
        "description": "Create a new source with the specified attributes.",
        "operationId": "CredoAIWeb.API.V2.SourceController.create",
        "parameters": [
          {
            "description": "Attributes required to create a new source",
            "in": "body",
            "name": "source",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SourceCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/SourceResource"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "sources"
        ]
      }
    },
    "/policy_control_bases/{id}/versions": {
      "get": {
        "description": "Retrieves a list of all versions associated with a specific policy control base.",
        "operationId": "CredoAIWeb.API.V2.PolicyControl.VersionController.index",
        "parameters": [
          {
            "description": "The unique ID of the policy control base.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyControlVersionsResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "policy_controls"
        ]
      },
      "post": {
        "description": "Creates a new version for a specified policy control base.",
        "operationId": "CredoAIWeb.API.V2.PolicyControl.VersionController.create",
        "parameters": [
          {
            "description": "The unique ID of the policy control base.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The attributes of the new version to be created.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PolicyControlVersionCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/PolicyControlVersionResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "policy_controls"
        ]
      }
    },
    "/questionnaire_bases/{id}/versions": {
      "get": {
        "description": "Retrieves a list of all versions associated with a specific questionnaire base.",
        "operationId": "CredoAIWeb.API.V2.Questionnaire.VersionController.index",
        "parameters": [
          {
            "description": "The unique ID of the questionnaire base.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuestionnaireVersionsResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "questionnaires"
        ]
      },
      "post": {
        "description": "Creates a new version for the specified questionnaire base, using the provided attributes.",
        "operationId": "CredoAIWeb.API.V2.Questionnaire.VersionController.create",
        "parameters": [
          {
            "description": "The unique ID of the questionnaire base.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Attributes for the new questionnaire version.",
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QuestionnaireVersionCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/QuestionnaireVersionResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "questionnaires"
        ]
      }
    },
    "/use_cases/{use_case_id}/reviews": {
      "get": {
        "description": "Retrieve a list of reviews associated with a specific use case.",
        "operationId": "CredoAIWeb.API.V2.UseCase.ReviewController.index",
        "parameters": [
          {
            "description": "status match filter",
            "in": "query",
            "name": "filter[status]",
            "required": false,
            "type": "string",
            "x-example": "in_progress"
          },
          {
            "description": "sort options",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string",
            "x-example": "-inserted_at,status"
          },
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UseCaseReviewsResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_reviews"
        ]
      },
      "post": {
        "description": "Create a new review for a specified use case.",
        "operationId": "CredoAIWeb.API.V2.UseCase.ReviewController.create",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The attributes for the new review.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UseCaseReviewCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UseCaseReviewResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_reviews"
        ]
      }
    },
    "/teams/{team_id}/relationships/members": {
      "delete": {
        "description": "Remove specified team members from the team.\nThe request body should contain an array of user IDs to be removed.\n",
        "operationId": "CredoAIWeb.API.V2.TeamController.remove_members",
        "parameters": [
          {
            "description": "team id",
            "in": "path",
            "name": "team_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "attributes",
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TeamMembersRemoveRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TeamResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "teams"
        ]
      },
      "patch": {
        "description": "Add or update team members based on the provided user IDs and roles.\nThe request body should contain an array of user IDs and their corresponding roles.\n",
        "operationId": "CredoAIWeb.API.V2.TeamController.upsert_members",
        "parameters": [
          {
            "description": "team id",
            "in": "path",
            "name": "team_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "attributes",
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TeamMembersUpsertRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TeamResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "teams"
        ]
      }
    },
    "/triggers": {
      "get": {
        "description": "Retrieve a list of all available triggers.",
        "operationId": "CredoAIWeb.API.V2.TriggerController.index",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TriggersResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "triggers_and_actions"
        ]
      },
      "post": {
        "description": "Create a new trigger with the specified attributes.",
        "operationId": "CredoAIWeb.API.V2.TriggerController.create",
        "parameters": [
          {
            "description": "The attributes of the trigger to be created.",
            "in": "body",
            "name": "model",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TriggerCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/TriggerResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "triggers_and_actions"
        ]
      }
    },
    "/sources/{id}": {
      "patch": {
        "description": "Update the attributes of an existing source identified by its ID.",
        "operationId": "CredoAIWeb.API.V2.SourceController.update",
        "parameters": [
          {
            "description": "Unique identifier of the source to update",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Attributes to update the source",
            "in": "body",
            "name": "source",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SourceUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SourceResource"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "sources"
        ]
      }
    },
    "/vendors/{vendor_id}/evidences": {
      "get": {
        "description": "Retrieve a list of active evidences associated with a specific vendor.",
        "operationId": "CredoAIWeb.API.V2.Vendor.EvidenceController.index",
        "parameters": [
          {
            "description": "type match filter",
            "in": "query",
            "name": "filter[type]",
            "required": false,
            "type": "string"
          },
          {
            "description": "sort options",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string",
            "x-example": "-inserted_at"
          },
          {
            "description": "The unique ID of the vendor.",
            "in": "path",
            "name": "vendor_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VendorEvidencesResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "vendors"
        ]
      }
    },
    "/trigger_actions": {
      "get": {
        "description": "Retrieve a list of all actions that can be triggered.",
        "operationId": "CredoAIWeb.API.V2.TriggerActionController.index",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ActionsResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "triggers_and_actions"
        ]
      },
      "post": {
        "description": "Create a new action with the provided attributes.",
        "operationId": "CredoAIWeb.API.V2.TriggerActionController.create",
        "parameters": [
          {
            "description": "The attributes for the action being created.",
            "in": "body",
            "name": "model",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ActionCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ActionResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "triggers_and_actions"
        ]
      }
    },
    "/use_cases/{use_case_id}/rai_issues": {
      "get": {
        "description": "Retrieve a list of all RAI issues associated with a specific use case.",
        "operationId": "CredoAIWeb.API.V2.UseCase.RaiIssueController.index",
        "parameters": [
          {
            "description": "evidence",
            "in": "query",
            "name": "include",
            "required": false,
            "type": "string",
            "x-example": "evidence"
          },
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UseCaseRaiIssuesResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_cases"
        ]
      }
    },
    "/vendors/{vendor_id}/model_links/{id}": {
      "delete": {
        "description": "Delete a specific model link associated with a vendor.",
        "operationId": "CredoAIWeb.API.V2.Vendor.ModelLinkController.delete",
        "parameters": [
          {
            "description": "The unique ID of the vendor.",
            "in": "path",
            "name": "vendor_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the model link to be deleted.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "vendors"
        ]
      }
    },
    "/api/v2/workflow_stages/{id}": {
      "delete": {
        "description": "Delete a workflow stage",
        "operationId": "CredoAIWeb.API.V2.WorkflowStageController.delete",
        "parameters": [
          {
            "description": "Stage ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "workflow_stages"
        ]
      },
      "get": {
        "description": "Get a specific workflow stage",
        "operationId": "CredoAIWeb.API.V2.WorkflowStageController.show",
        "parameters": [
          {
            "description": "Stage ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkflowStagesResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "workflow_stages"
        ]
      },
      "patch": {
        "description": "Update an existing workflow stage",
        "operationId": "CredoAIWeb.API.V2.WorkflowStageController.update",
        "parameters": [
          {
            "description": "Stage ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Stage attributes",
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkflowStageUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkflowStage"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "workflow_stages"
        ]
      }
    },
    "/assist": {
      "post": {
        "description": "Creates a new assist.",
        "operationId": "CredoAIWeb.API.V2.UseCase.AssistController.assist",
        "parameters": [
          {
            "description": "attributes",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AssistRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "assist"
        ]
      }
    },
    "/risk_types": {
      "get": {
        "description": "Retrieve a list of all available risk types.",
        "operationId": "CredoAIWeb.API.V2.RiskTypeController.index",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RiskTypesResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "risks"
        ]
      },
      "post": {
        "description": "Create a new risk type with the specified attributes.",
        "operationId": "CredoAIWeb.API.V2.RiskTypeController.create",
        "parameters": [
          {
            "description": "attributes",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/RiskTypeCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/RiskTypeResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "risks"
        ]
      }
    },
    "/use_cases/{use_case_id}/assist/retry": {
      "post": {
        "description": "Retries the creation of an assist for the specified use case.",
        "operationId": "CredoAIWeb.API.V2.UseCase.AssistController.retry_assist_use_case",
        "parameters": [
          {
            "description": "The ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_assist"
        ]
      }
    },
    "/policy_control_bases/{id}": {
      "delete": {
        "description": "Deletes a specific policy control base identified by its unique ID.",
        "operationId": "CredoAIWeb.API.V2.PolicyControl.BaseController.delete",
        "parameters": [
          {
            "description": "The unique ID of the custom policy control base to be deleted.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "policy_controls"
        ]
      },
      "get": {
        "description": "Fetches the details of a specific policy control base identified by its unique ID.",
        "operationId": "CredoAIWeb.API.V2.PolicyControl.BaseController.show",
        "parameters": [
          {
            "description": "The unique ID of the custom policy control base.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyControlBaseResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "policy_controls"
        ]
      }
    },
    "/tasks/bulk_delete": {
      "post": {
        "description": "Delete multiple tasks in a single request.",
        "operationId": "CredoAIWeb.API.V2.TaskController.bulk_delete",
        "parameters": [
          {
            "description": "Array of task IDs to delete",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TaskBulkDeleteRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "tasks"
        ]
      }
    },
    "/use_cases/{use_case_id}/controls/{id}": {
      "get": {
        "description": "Fetch detailed information about a specific control within a use case.",
        "operationId": "CredoAIWeb.API.V2.UseCase.ControlController.show",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the control.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UseCaseControlResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_controls"
        ]
      },
      "patch": {
        "description": "Update the details of a specific control within a use case.",
        "operationId": "CredoAIWeb.API.V2.UseCase.ControlController.update",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the control.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The attributes to update for the control.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UseCaseControlUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UseCaseControlResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_controls"
        ]
      }
    },
    "/use_cases/{use_case_id}/scheduled_reviews/{id}": {
      "delete": {
        "description": "Delete a specific scheduled_review identified by its unique ID.",
        "operationId": "CredoAIWeb.API.V2.UseCase.ScheduledReviewController.delete",
        "parameters": [
          {
            "description": "The ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the use case scheduled_review.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_scheduled_reviews"
        ]
      },
      "get": {
        "description": "Fetch details of a specific scheduled_review by its unique ID.",
        "operationId": "CredoAIWeb.API.V2.UseCase.ScheduledReviewController.show",
        "parameters": [
          {
            "description": "The ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the use case scheduled_review.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UseCaseScheduledReviewResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_scheduled_reviews"
        ]
      },
      "patch": {
        "description": "Update an existing scheduled review identified by its ID.",
        "operationId": "CredoAIWeb.API.V2.UseCase.ScheduledReviewController.update",
        "parameters": [
          {
            "description": "The ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the use case scheduled review.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The attributes to update the scheduled review.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UseCaseScheduledReviewUpdateRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_scheduled_reviews"
        ]
      }
    },
    "/me": {
      "get": {
        "description": "Fetch the details of the currently authenticated user.",
        "operationId": "CredoAIWeb.API.V2.MeController.show",
        "parameters": [
          {
            "description": "Included relationships. Available options:\n- setting (preloads user settings)\n- favorite_use_cases (includes favorite use cases)\n- recently_visited_use_cases (DEPRECATED: use /me/recently_visited_use_cases endpoint instead)\n",
            "in": "query",
            "name": "include",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MeResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "user"
        ]
      },
      "patch": {
        "description": "Update the profile information of the currently authenticated user.",
        "operationId": "CredoAIWeb.API.V2.UserController.update_me",
        "parameters": [
          {
            "description": "data",
            "in": "body",
            "name": "model",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ProfileUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "user"
        ]
      }
    },
    "/use_cases/{use_case_id}/controls/{control_id}/tasks": {
      "post": {
        "description": "Create a new task for a specific control within a use case.",
        "operationId": "CredoAIWeb.API.V2.UseCase.ControlController.create_task",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the control.",
            "in": "path",
            "name": "control_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The attributes for the new task.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UseCaseControlTaskCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/TaskResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_controls"
        ]
      }
    },
    "/policy_pack_versions/{id}": {
      "delete": {
        "description": "Deletes a specific version of a custom policy pack identified by its ID.",
        "operationId": "CredoAIWeb.API.V2.PolicyPack.VersionController.delete",
        "parameters": [
          {
            "description": "The unique ID of the version to delete.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "policy_packs"
        ]
      },
      "get": {
        "description": "Fetches the details of a specific version of a custom policy pack by its ID.",
        "operationId": "CredoAIWeb.API.V2.PolicyPack.VersionController.show",
        "parameters": [
          {
            "description": "The unique ID of the version to retrieve.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyPackVersionResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "policy_packs"
        ]
      },
      "patch": {
        "description": "Updates an existing version of a custom policy pack identified by its ID with the provided attributes.",
        "operationId": "CredoAIWeb.API.V2.PolicyPack.VersionController.update",
        "parameters": [
          {
            "description": "The unique identifier of the version to update.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The attributes to update the version with.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PolicyPackVersionUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyPackVersionResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "policy_packs"
        ]
      }
    },
    "/vendors/{vendor_id}/questionnaire_sections": {
      "get": {
        "description": "Retrieves a list of all questionnaire sections associated with a specific vendor.",
        "operationId": "CredoAIWeb.API.V2.Vendor.Questionnaire.SectionController.index",
        "parameters": [
          {
            "description": "The unique ID of the vendor.",
            "in": "path",
            "name": "vendor_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VendorQuestionnaireSectionsResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "vendors"
        ]
      }
    },
    "/vendors/{vendor_id}/model_links": {
      "get": {
        "description": "Retrieve a list of model links associated with a specific vendor.",
        "operationId": "CredoAIWeb.API.V2.Vendor.ModelLinkController.index",
        "parameters": [
          {
            "description": "The unique ID of the vendor.",
            "in": "path",
            "name": "vendor_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelVendorLinksResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "vendors"
        ]
      },
      "post": {
        "description": "Create a new model link for a specific vendor.",
        "operationId": "CredoAIWeb.API.V2.Vendor.ModelLinkController.create",
        "parameters": [
          {
            "description": "The unique ID of the vendor.",
            "in": "path",
            "name": "vendor_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The attributes for the new model link.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ModelVendorLinkCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ModelVendorLinkResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "vendors"
        ]
      }
    },
    "/custom_risk_scenarios/{id}": {
      "delete": {
        "description": "Deletes the custom risk scenario identified by its ID.",
        "operationId": "CredoAIWeb.API.V2.CustomRiskScenarioController.delete",
        "parameters": [
          {
            "description": "The unique ID of the risk scenario to delete.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "risks"
        ]
      },
      "patch": {
        "description": "Updates an existing custom risk scenario identified by its ID.",
        "operationId": "CredoAIWeb.API.V2.CustomRiskScenarioController.update",
        "parameters": [
          {
            "description": "The unique ID of the risk scenario to update.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "data",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CustomRiskScenarioUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RiskScenarioResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "risks"
        ]
      }
    },
    "/use_cases/{use_case_id}/comment_threads": {
      "get": {
        "description": "Retrieve a list of all comment threads associated with a specific entity.",
        "operationId": "CredoAIWeb.API.V2.Entity.CommentThreadController.index",
        "parameters": [
          {
            "description": "status filter type",
            "in": "query",
            "name": "filter[status][type]",
            "required": false,
            "type": "string"
          },
          {
            "description": "status filter value",
            "in": "query",
            "name": "filter[status][value]",
            "required": false,
            "type": "string"
          },
          {
            "description": "resource_type filter type",
            "in": "query",
            "name": "filter[resource_type][type]",
            "required": false,
            "type": "string"
          },
          {
            "description": "resource_type filter value",
            "in": "query",
            "name": "filter[resource_type][value]",
            "required": false,
            "type": "string"
          },
          {
            "description": "resource_id filter type",
            "in": "query",
            "name": "filter[resource_id][type]",
            "required": false,
            "type": "string"
          },
          {
            "description": "resource_id filter value",
            "in": "query",
            "name": "filter[resource_id][value]",
            "required": false,
            "type": "string"
          },
          {
            "description": "parent_q_section_id filter type",
            "in": "query",
            "name": "filter[parent_q_section_id][type]",
            "required": false,
            "type": "string"
          },
          {
            "description": "parent_q_section_id filter value",
            "in": "query",
            "name": "filter[parent_q_section_id][value]",
            "required": false,
            "type": "string"
          },
          {
            "description": "parent_entity_control_id filter type",
            "in": "query",
            "name": "filter[parent_entity_control_id][type]",
            "required": false,
            "type": "string"
          },
          {
            "description": "parent_entity_control_id filter value",
            "in": "query",
            "name": "filter[parent_entity_control_id][value]",
            "required": false,
            "type": "string"
          },
          {
            "description": "parent_use_case_review_id filter type",
            "in": "query",
            "name": "filter[parent_use_case_review_id][type]",
            "required": false,
            "type": "string"
          },
          {
            "description": "parent_use_case_review_id filter value",
            "in": "query",
            "name": "filter[parent_use_case_review_id][value]",
            "required": false,
            "type": "string"
          },
          {
            "description": "sort options",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string",
            "x-example": "-inserted_at"
          },
          {
            "description": "comments.user,user,comments",
            "in": "query",
            "name": "include",
            "required": false,
            "type": "string",
            "x-example": "comments.user,user,comments"
          },
          {
            "description": "page after cursor",
            "in": "query",
            "name": "page[after]",
            "required": false,
            "type": "string"
          },
          {
            "description": "page before cursor",
            "in": "query",
            "name": "page[before]",
            "required": false,
            "type": "string"
          },
          {
            "description": "page limit",
            "in": "query",
            "name": "page[limit]",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CommentThreadsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "schema": {
              "$ref": "#/definitions/UnprocessableEntityError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "comment_threads"
        ]
      },
      "post": {
        "description": "Create a new comment thread with the first comment within a specified use case.",
        "operationId": "CredoAIWeb.API.V2.Entity.CommentThreadController.create",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The attributes for the new thread.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CommentThreadCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/CommentThreadResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "schema": {
              "$ref": "#/definitions/UnprocessableEntityError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "comment_threads"
        ]
      }
    },
    "/risk_type/{id}": {
      "delete": {
        "description": "Delete a risk type identified by its ID.",
        "operationId": "CredoAIWeb.API.V2.RiskTypeController.delete",
        "parameters": [
          {
            "description": "The unique ID of the risk type to delete.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "risks"
        ]
      }
    },
    "/policy_pack_bases/{base_id}/versions": {
      "get": {
        "description": "Retrieves a list of all versions associated with a specific custom policy pack base.",
        "operationId": "CredoAIWeb.API.V2.PolicyPack.VersionController.index",
        "parameters": [
          {
            "description": "The unique ID of the policy pack base.",
            "in": "path",
            "name": "base_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyPackVersionsResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "policy_packs"
        ]
      },
      "post": {
        "description": "Creates a new version for a specified custom policy pack base, using the provided attributes.",
        "operationId": "CredoAIWeb.API.V2.PolicyPack.VersionController.create",
        "parameters": [
          {
            "description": "The unique ID of the policy pack base.",
            "in": "path",
            "name": "base_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The attributes for the new version.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PolicyPackVersionCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/PolicyPackVersionResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "policy_packs"
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "description": "Retrieve detailed information about a specific user by their unique ID.",
        "operationId": "CredoAIWeb.API.V2.UserController.show",
        "parameters": [
          {
            "description": "id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "users"
        ]
      },
      "patch": {
        "description": "Update the information of an existing user identified by their unique ID.",
        "operationId": "CredoAIWeb.API.V2.UserController.update",
        "parameters": [
          {
            "description": "id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "data",
            "in": "body",
            "name": "model",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UserUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "users"
        ]
      }
    },
    "/vendors/{id}/status": {
      "patch": {
        "description": "Change the status of a vendor identified by ID.",
        "operationId": "CredoAIWeb.API.V2.VendorController.update_status",
        "parameters": [
          {
            "description": "Unique ID of the vendor.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "New status attributes for the vendor.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/VendorUpdateStatusRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VendorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "vendors"
        ]
      }
    },
    "/use_cases/{use_case_id}/control_assignments": {
      "post": {
        "description": "Creates tasks for multiple controls and assigns them to a user or team",
        "operationId": "CredoAIWeb.API.V2.UseCase.ControlsAssignmentController.create",
        "parameters": [
          {
            "description": "The unique ID of the use case",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The task assignment details",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ControlsAssignmentRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/TasksResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_controls"
        ]
      }
    },
    "/domains/{id}": {
      "delete": {
        "description": "Deletes a custom domain identified by its unique ID.",
        "operationId": "CredoAIWeb.API.V2.DomainController.delete",
        "parameters": [
          {
            "description": "The unique identifier of the domain to delete.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "fields"
        ]
      },
      "patch": {
        "description": "Updates the attributes of an existing custom domain.",
        "operationId": "CredoAIWeb.API.V2.DomainController.update",
        "parameters": [
          {
            "description": "The unique identifier of the domain to update.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "data",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DomainUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DomainResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "fields"
        ]
      }
    },
    "/use_cases/{use_case_id}/threads": {
      "get": {
        "deprecated": true,
        "description": "DEPRECATED: Retrieve a list of all threads associated with a specific use case.\nThis endpoint will be removed in a major release after v20. Please use the new API endpoint instead:\n[GET /use_cases/{use_case_id}/comment_threads](#/paths/~1use_cases~1{use_case_id}~1comment_threads/get)\n",
        "operationId": "CredoAIWeb.API.V2.UseCase.ThreadController.index",
        "parameters": [
          {
            "description": "user,parent_comment",
            "in": "query",
            "name": "include",
            "required": false,
            "type": "string",
            "x-example": "user,parent_comment"
          },
          {
            "description": "topic filter type",
            "in": "query",
            "name": "filter[topic][type]",
            "required": false,
            "type": "string"
          },
          {
            "description": "topic filter value",
            "in": "query",
            "name": "filter[topic][value]",
            "required": false,
            "type": "string"
          },
          {
            "description": "status filter type",
            "in": "query",
            "name": "filter[status][type]",
            "required": false,
            "type": "string"
          },
          {
            "description": "status filter value",
            "in": "query",
            "name": "filter[status][value]",
            "required": false,
            "type": "string"
          },
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UseCaseThreadsResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_comments"
        ]
      },
      "post": {
        "deprecated": true,
        "description": "DEPRECATED: Create a new thread within a specified use case.\nThis endpoint will be removed in a major release after v20. Please use the new API endpoint instead:\n[POST /use_cases/{use_case_id}/comment_threads](#/paths/~1use_cases~1{use_case_id}~1comment_threads/post)\n",
        "operationId": "CredoAIWeb.API.V2.UseCase.ThreadController.create",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The attributes for the new thread.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UseCaseThreadCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/UseCaseThreadResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_comments"
        ]
      }
    },
    "/use_cases/{use_case_id}/questionnaires": {
      "get": {
        "description": "List all use_case_questionnaires of use_case",
        "operationId": "CredoAIWeb.API.V2.UseCase.QuestionnaireController.index",
        "parameters": [
          {
            "description": "use_case id",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UseCaseQuestionnairesResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_questionnaires"
        ]
      },
      "post": {
        "description": "Add questionnaire to use case, as a result creates use_case_questionnaires and use_case_questionnaire_sections",
        "operationId": "CredoAIWeb.API.V2.UseCase.QuestionnaireController.create",
        "parameters": [
          {
            "description": "use_case id",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "attributes",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UseCaseQuestionnaireCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UseCaseQuestionnaireResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_questionnaires"
        ]
      }
    },
    "/models/{model_id}/evidences/{id}": {
      "delete": {
        "description": "Deactivate a specific evidence for the given model.",
        "operationId": "CredoAIWeb.API.V2.Model.EvidenceController.delete",
        "parameters": [
          {
            "description": "The unique ID of the model.",
            "in": "path",
            "name": "model_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the evidence to be deactivated.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "models"
        ]
      }
    },
    "/tenant_info": {
      "get": {
        "description": "Retrieves the tenant's information including display name and logo URL",
        "operationId": "CredoAIWeb.API.V2.TenantInfoController.show",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TenantInfoResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "other"
        ]
      },
      "patch": {
        "description": "Updates the tenant's information such as display name and logo URL",
        "operationId": "CredoAIWeb.API.V2.TenantInfoController.update",
        "parameters": [
          {
            "description": "data",
            "in": "body",
            "name": "model",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TenantInfoUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TenantInfoResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "other"
        ]
      }
    },
    "/vendors/{vendor_id}/evidences/{id}": {
      "delete": {
        "description": "Deactivate a specific evidence for the given vendor.",
        "operationId": "CredoAIWeb.API.V2.Vendor.EvidenceController.delete",
        "parameters": [
          {
            "description": "The unique ID of the vendor.",
            "in": "path",
            "name": "vendor_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the evidence to be deactivated.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "vendors"
        ]
      }
    },
    "/models/{model_id}/versions/{id}": {
      "delete": {
        "description": "Delete a specific model version identified by its unique ID.",
        "operationId": "CredoAIWeb.API.V2.Model.VersionController.delete",
        "parameters": [
          {
            "description": "The unique identifier of the model.",
            "in": "path",
            "name": "model_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique identifier of the model version.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "models"
        ]
      },
      "get": {
        "description": "Retrieve details of a specific model version identified by its unique ID.",
        "operationId": "CredoAIWeb.API.V2.Model.VersionController.show",
        "parameters": [
          {
            "description": "The unique identifier of the model.",
            "in": "path",
            "name": "model_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique identifier of the model version.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelVersionResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "models"
        ]
      },
      "patch": {
        "description": "Update the attributes of a specific model version identified by its unique ID.",
        "operationId": "CredoAIWeb.API.V2.Model.VersionController.update",
        "parameters": [
          {
            "description": "The unique identifier of the model.",
            "in": "path",
            "name": "model_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique identifier of the model version.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Updated attributes for the model version.",
            "in": "body",
            "name": "model",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ModelVersionUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelVersionResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "models"
        ]
      }
    },
    "/me/notifications/{id}": {
      "get": {
        "description": "Fetch a specific notification by its ID for the authenticated user.",
        "operationId": "CredoAIWeb.API.V2.NotificationController.show",
        "parameters": [
          {
            "description": "The unique ID of the notification.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NotificationResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "user"
        ]
      },
      "patch": {
        "description": "Update the details of a specific notification identified by its ID.",
        "operationId": "CredoAIWeb.API.V2.NotificationController.update",
        "parameters": [
          {
            "description": "The unique ID of the notification.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The attributes to update.",
            "in": "body",
            "name": "model",
            "required": false,
            "schema": {
              "$ref": "#/definitions/NotificationUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NotificationResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "user"
        ]
      }
    },
    "/use_case_reviews/{review_id}/snapshot": {
      "get": {
        "description": "Retrieve the snapshot of a specific review.",
        "operationId": "CredoAIWeb.API.V2.UseCase.ReviewController.show_snapshot",
        "parameters": [
          {
            "description": "The unique ID of the use case review.",
            "in": "path",
            "name": "review_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UseCaseSnapshotResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_reviews"
        ]
      }
    },
    "/use_cases/{use_case_id}/risk_classification": {
      "patch": {
        "description": "Update the risk classification of a specific use case.",
        "operationId": "CredoAIWeb.API.V2.UseCaseController.update_risk_classification",
        "parameters": [
          {
            "description": "Unique ID of the use case",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Risk classification attributes",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UpdateRiskClassificationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UseCaseResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_cases"
        ]
      }
    },
    "/teams/{id}": {
      "delete": {
        "description": "Remove a team from the system using its ID.",
        "operationId": "CredoAIWeb.API.V2.TeamController.delete",
        "parameters": [
          {
            "description": "The unique identifier of the team to be deleted.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "teams"
        ]
      },
      "get": {
        "description": "Fetch detailed information about a specific team identified by its ID.",
        "operationId": "CredoAIWeb.API.V2.TeamController.show",
        "parameters": [
          {
            "description": "id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TeamResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "teams"
        ]
      },
      "patch": {
        "description": "Update the details of an existing team identified by its ID.",
        "operationId": "CredoAIWeb.API.V2.TeamController.update",
        "parameters": [
          {
            "description": "id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "data",
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TeamUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TeamResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "teams"
        ]
      }
    },
    "/policy_pack_bases/{id}": {
      "delete": {
        "description": "Deletes a custom policy pack base identified by its unique ID from the system.",
        "operationId": "CredoAIWeb.API.V2.PolicyPack.BaseController.delete",
        "parameters": [
          {
            "description": "The unique ID of the custom policy pack base to delete.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "policy_packs"
        ]
      },
      "get": {
        "description": "Fetches the details of a specific custom policy pack base identified by its unique ID.",
        "operationId": "CredoAIWeb.API.V2.PolicyPack.BaseController.show",
        "parameters": [
          {
            "description": "The unique ID of the custom policy pack base to retrieve.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomPolicyPackBaseResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "policy_packs"
        ]
      },
      "post": {
        "description": "Updates an existing custom policy pack base identified by its unique ID with the provided attributes.",
        "operationId": "CredoAIWeb.API.V2.PolicyPack.BaseController.update",
        "parameters": [
          {
            "description": "The unique ID of the custom policy pack base to update.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The attributes to update the custom policy pack base.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CustomPolicyPackBaseUpdateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomPolicyPackBaseResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "policy_packs"
        ]
      }
    },
    "/me/api_tokens/{id}": {
      "delete": {
        "description": "Remove the specified API token from the authenticated user's account.",
        "operationId": "CredoAIWeb.API.V2.ApiTokenController.delete",
        "parameters": [
          {
            "description": "The unique identifier of the API token to be deleted.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "user"
        ]
      }
    },
    "/vendors/{vendor_id}/questionnaire_sections/{section_id}/evidences": {
      "get": {
        "description": "Retrieves a list of evidences associated with a specific vendor's questionnaire section.",
        "operationId": "CredoAIWeb.API.V2.Vendor.Questionnaire.SectionEvidenceController.index",
        "parameters": [
          {
            "description": "The unique ID of the vendor.",
            "in": "path",
            "name": "vendor_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the questionnaire section.",
            "in": "path",
            "name": "section_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VendorEvidencesResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "vendors"
        ]
      },
      "post": {
        "description": "Creates a new evidence entry for a specific question within a vendor's questionnaire section.",
        "operationId": "CredoAIWeb.API.V2.Vendor.Questionnaire.SectionEvidenceController.create",
        "parameters": [
          {
            "description": "The unique ID of the vendor.",
            "in": "path",
            "name": "vendor_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the questionnaire section.",
            "in": "path",
            "name": "section_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The attributes of the evidence to be created.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/VendorQuestionnaireSectionEvidenceCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VendorEvidenceResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "vendors"
        ]
      }
    },
    "/vendors/{vendor_id}/files/{id}": {
      "delete": {
        "description": "Delete a specific file associated with a vendor by its unique ID.",
        "operationId": "CredoAIWeb.API.V2.Vendor.FileController.delete",
        "parameters": [
          {
            "description": "The unique ID of the vendor whose file is to be deleted.",
            "in": "path",
            "name": "vendor_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the file to be deleted.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "vendors"
        ]
      }
    },
    "/models/{model_id}/evidences": {
      "get": {
        "description": "Retrieve a list of active evidences associated with a specific model.",
        "operationId": "CredoAIWeb.API.V2.Model.EvidenceController.index",
        "parameters": [
          {
            "description": "type match filter",
            "in": "query",
            "name": "filter[type]",
            "required": false,
            "type": "string"
          },
          {
            "description": "sort options",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string",
            "x-example": "-inserted_at"
          },
          {
            "description": "The unique ID of the model.",
            "in": "path",
            "name": "model_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelEvidencesResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "models"
        ]
      }
    },
    "/use_cases/{use_case_id}/threads/{thread_id}/comments/{id}": {
      "delete": {
        "deprecated": true,
        "description": "DEPRECATED: Remove a comment identified by its ID from a specific thread in a use case.\nThis endpoint will be removed in a major release after v20. Please use the new API endpoint instead:\n[DELETE /use_cases/{use_case_id}/comment_threads/{thread_id}/comments/{id}](#/paths/~1use_cases~1{use_case_id}~1comment_threads~1{thread_id}~1comments~1{id}/delete)\n",
        "operationId": "CredoAIWeb.API.V2.UseCase.CommentController.delete",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the thread.",
            "in": "path",
            "name": "thread_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the comment to be deleted.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_comments"
        ]
      },
      "patch": {
        "deprecated": true,
        "description": "DEPRECATED: Update an existing comment identified by its ID within a specific thread of a use case.\nThis endpoint will be removed in a major release after v20. Please use the new API endpoint instead:\n[PATCH /use_cases/{use_case_id}/comment_threads/{thread_id}/comments/{id}](#/paths/~1use_cases~1{use_case_id}~1comment_threads~1{thread_id}~1comments~1{id}/patch)\n",
        "operationId": "CredoAIWeb.API.V2.UseCase.CommentController.update",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the thread.",
            "in": "path",
            "name": "thread_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the comment to be updated.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The attributes of the comment to be updated.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UseCaseCommentUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UseCaseCommentResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_comments"
        ]
      }
    },
    "/users": {
      "get": {
        "description": "List of users",
        "operationId": "CredoAIWeb.API.V2.UserController.index",
        "parameters": [
          {
            "description": "page after cursor",
            "in": "query",
            "name": "page[after]",
            "required": false,
            "type": "string"
          },
          {
            "description": "page before cursor",
            "in": "query",
            "name": "page[before]",
            "required": false,
            "type": "string"
          },
          {
            "description": "page limit",
            "in": "query",
            "name": "page[limit]",
            "required": false,
            "type": "integer"
          },
          {
            "description": "given_name filter type",
            "in": "query",
            "name": "filter[given_name][type]",
            "required": false,
            "type": "string"
          },
          {
            "description": "given_name filter value",
            "in": "query",
            "name": "filter[given_name][value]",
            "required": false,
            "type": "string"
          },
          {
            "description": "role match filter",
            "in": "query",
            "name": "filter[role]",
            "required": false,
            "type": "string"
          },
          {
            "description": "q match filter",
            "in": "query",
            "name": "filter[q]",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UsersResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "users"
        ]
      },
      "post": {
        "description": "Create a new vendor user with the provided user data.",
        "operationId": "CredoAIWeb.API.V2.UserController.create",
        "parameters": [
          {
            "description": "data",
            "in": "body",
            "name": "model",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UserCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "users"
        ]
      }
    },
    "/use_cases/{use_case_id}/model_links/{id}": {
      "patch": {
        "description": "update model version",
        "operationId": "CredoAIWeb.API.V2.UseCase.ModelController.update_model_link",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the model link.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The updated attributes for the model link.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ModelLinkUpdateRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case"
        ]
      }
    },
    "/vendors": {
      "get": {
        "description": "Retrieve a list of all vendors.",
        "operationId": "CredoAIWeb.API.V2.VendorController.index",
        "parameters": [
          {
            "description": "page after cursor",
            "in": "query",
            "name": "page[after]",
            "required": false,
            "type": "string"
          },
          {
            "description": "page before cursor",
            "in": "query",
            "name": "page[before]",
            "required": false,
            "type": "string"
          },
          {
            "description": "page limit",
            "in": "query",
            "name": "page[limit]",
            "required": false,
            "type": "integer"
          },
          {
            "description": "name filter type",
            "in": "query",
            "name": "filter[name][type]",
            "required": false,
            "type": "string"
          },
          {
            "description": "name filter value",
            "in": "query",
            "name": "filter[name][value]",
            "required": false,
            "type": "string"
          },
          {
            "description": "sort options",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string",
            "x-example": "-inserted_at"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VendorsResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "vendors"
        ]
      },
      "post": {
        "description": "Create a new vendor with the provided attributes.",
        "operationId": "CredoAIWeb.API.V2.VendorController.create",
        "parameters": [
          {
            "description": "Attributes for the new vendor.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/VendorCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/VendorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "vendors"
        ]
      }
    },
    "/use_cases/{use_case_id}/reports/{report_id}/snapshot": {
      "get": {
        "description": "Retrieve the snapshot data for a specific report associated with a use case.",
        "operationId": "CredoAIWeb.API.V2.UseCase.ReportController.show_snapshot",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the report.",
            "in": "path",
            "name": "report_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UseCaseSnapshotResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_reports"
        ]
      }
    },
    "/use_cases/{use_case_id}/reports/{id}": {
      "get": {
        "description": "Fetch detailed information about a specific report associated with a use case.",
        "operationId": "CredoAIWeb.API.V2.UseCase.ReportController.show",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the report.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReportResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_reports"
        ]
      }
    },
    "/use_cases/{use_case_id}/risk_control_links/{id}": {
      "delete": {
        "description": "Delete a specific risk control link associated with a use case.",
        "operationId": "CredoAIWeb.API.V2.UseCase.RiskControlLinkController.delete",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the risk control link to be deleted.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_controls"
        ]
      }
    },
    "/use_cases/{use_case_id}/custom_fields": {
      "get": {
        "description": "Retrieve a list of all custom fields associated with a specific use case.",
        "operationId": "CredoAIWeb.API.V2.UseCase.CustomFieldController.index",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UseCaseCustomFieldsResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_custom_fields"
        ]
      },
      "patch": {
        "description": "Update the value of a specific custom field for a given use case.",
        "operationId": "CredoAIWeb.API.V2.UseCase.CustomFieldController.update_one",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The attributes of the custom field to be updated.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UseCaseCustomFieldUpdateOneRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UseCaseCustomFieldResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_custom_fields"
        ]
      },
      "post": {
        "deprecated": true,
        "description": "[DEPRECATED] Create a new custom field for a specific use case.",
        "operationId": "CredoAIWeb.API.V2.UseCase.CustomFieldController.create",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The attributes of the custom field to be created.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UseCaseCustomFieldCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/UseCaseCustomFieldResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_custom_fields"
        ]
      }
    },
    "/questionnaire_versions/{id}": {
      "delete": {
        "description": "Deletes a specific version of a questionnaire identified by its ID.",
        "operationId": "CredoAIWeb.API.V2.Questionnaire.VersionController.delete",
        "parameters": [
          {
            "description": "The unique ID of the questionnaire version to delete.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "questionnaires"
        ]
      },
      "get": {
        "description": "Retrieves the details of a specific version of a questionnaire by its ID.",
        "operationId": "CredoAIWeb.API.V2.Questionnaire.VersionController.show",
        "parameters": [
          {
            "description": "The unique ID of the questionnaire version.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuestionnaireVersionResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "questionnaires"
        ]
      },
      "patch": {
        "description": "Updates the details of a specific questionnaire version identified by its ID.",
        "operationId": "CredoAIWeb.API.V2.Questionnaire.VersionController.update",
        "parameters": [
          {
            "description": "The unique ID of the questionnaire version to update.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Attributes to update the questionnaire version.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/QuestionnaireVersionUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuestionnaireVersionResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "questionnaires"
        ]
      }
    },
    "/models/{model_id}/questionnaire_sections/{section_id}/evidences": {
      "get": {
        "description": "List all evidences for a specific questionnaire section in a model.",
        "operationId": "CredoAIWeb.API.V2.Model.Questionnaire.SectionEvidenceController.index",
        "parameters": [
          {
            "description": "The unique ID of the model.",
            "in": "path",
            "name": "model_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the questionnaire section.",
            "in": "path",
            "name": "section_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelEvidencesResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "models"
        ]
      },
      "post": {
        "description": "Create a new evidence for a specific questionnaire section in a model.",
        "operationId": "CredoAIWeb.API.V2.Model.Questionnaire.SectionEvidenceController.create",
        "parameters": [
          {
            "description": "The unique ID of the model.",
            "in": "path",
            "name": "model_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the questionnaire section.",
            "in": "path",
            "name": "section_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The attributes for the new evidence.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ModelEvidenceCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ModelEvidenceResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "models"
        ]
      }
    },
    "/use_cases/{use_case_id}/evidences/{id}": {
      "delete": {
        "description": "Deactivate a specific evidence item associated with a use case.",
        "operationId": "CredoAIWeb.API.V2.UseCase.EvidenceController.delete",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the evidence.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_cases"
        ]
      },
      "get": {
        "description": "Retrieve detailed information about a specific evidence item.",
        "operationId": "CredoAIWeb.API.V2.UseCase.EvidenceController.show",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the evidence.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EvidenceResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_cases"
        ]
      }
    },
    "/use_cases/{use_case_id}/step": {
      "patch": {
        "description": "Update the workflow step of a specific use case.",
        "operationId": "CredoAIWeb.API.V2.UseCaseController.update_workflow_step",
        "parameters": [
          {
            "description": "Unique ID of the use case",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Workflow step attributes",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UpdateWorkflowStepRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UseCaseResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_cases"
        ]
      }
    },
    "/risk_classifications": {
      "get": {
        "description": "Retrieve the list of custom risk classifications.",
        "operationId": "CredoAIWeb.API.V2.RiskClassificationController.index",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RiskClassificationsResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "risks"
        ]
      },
      "put": {
        "description": "Update the custom risk classifications with the provided attributes.",
        "operationId": "CredoAIWeb.API.V2.RiskClassificationController.update",
        "parameters": [
          {
            "description": "attributes",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/RiskClassificationsUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RiskClassificationsResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "risks"
        ]
      }
    },
    "/models/{model_id}/versions": {
      "get": {
        "description": "Retrieve a list of all model versions associated with the specified model.",
        "operationId": "CredoAIWeb.API.V2.Model.VersionController.index",
        "parameters": [
          {
            "description": "The unique identifier of the model.",
            "in": "path",
            "name": "model_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelVersionsResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "models"
        ]
      },
      "post": {
        "description": "Create a new version for the specified model with the provided attributes.",
        "operationId": "CredoAIWeb.API.V2.Model.VersionController.create",
        "parameters": [
          {
            "description": "The unique identifier of the model.",
            "in": "path",
            "name": "model_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Attributes for the new model version.",
            "in": "body",
            "name": "model",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ModelVersionCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ModelVersionResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "models"
        ]
      }
    },
    "/use_cases/{use_case_id}/controls": {
      "get": {
        "description": "Retrieve a list of controls associated with a specific use case.",
        "operationId": "CredoAIWeb.API.V2.UseCase.ControlController.index",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UseCaseControlsResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_controls"
        ]
      }
    },
    "/vendors/{vendor_id}/custom_fields": {
      "get": {
        "description": "Retrieve a list of all custom fields associated with a specific vendor.",
        "operationId": "CredoAIWeb.API.V2.Vendor.CustomFieldController.index",
        "parameters": [
          {
            "description": "The unique ID of the vendor.",
            "in": "path",
            "name": "vendor_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VendorCustomFieldsResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "vendors"
        ]
      },
      "patch": {
        "description": "Update the value of a specific custom field for a vendor.",
        "operationId": "CredoAIWeb.API.V2.Vendor.CustomFieldController.update_one",
        "parameters": [
          {
            "description": "The unique ID of the vendor.",
            "in": "path",
            "name": "vendor_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The attributes of the custom field to be updated.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/VendorCustomFieldUpdateOneRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VendorCustomFieldResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "vendors"
        ]
      }
    },
    "/webhooks": {
      "get": {
        "description": "Retrieve a list of all webhook endpoints.",
        "operationId": "CredoAIWeb.API.V2.WebhookController.index",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WebhooksResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "webhooks"
        ]
      },
      "post": {
        "description": "Create a new webhook endpoint with the provided attributes.",
        "operationId": "CredoAIWeb.API.V2.WebhookController.create",
        "parameters": [
          {
            "description": "The attributes for the webhook endpoint being created.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WebhookCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/WebhookResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "webhooks"
        ]
      }
    },
    "/me/relationships/notifications": {
      "patch": {
        "description": "Mark all notifications as read for the authenticated user.",
        "operationId": "CredoAIWeb.API.V2.NotificationController.all_notifications_read",
        "parameters": [
          {
            "description": "Request body to indicate the action.",
            "in": "body",
            "name": "model",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EmptyDataRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "user"
        ]
      }
    },
    "/tasks/{id}": {
      "delete": {
        "description": "Delete a specific task identified by its unique ID.",
        "operationId": "CredoAIWeb.API.V2.TaskController.delete",
        "parameters": [
          {
            "description": "Unique ID of the task.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "tasks"
        ]
      },
      "get": {
        "description": "Fetch detailed information about a specific task using its unique ID.",
        "operationId": "CredoAIWeb.API.V2.TaskController.show",
        "parameters": [
          {
            "description": "Unique ID of the task.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TaskResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "tasks"
        ]
      },
      "patch": {
        "description": "Update the details of a specific task identified by its unique ID.",
        "operationId": "CredoAIWeb.API.V2.TaskController.update",
        "parameters": [
          {
            "description": "Unique ID of the task to update.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Attributes to update the task with.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TaskUpdateRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "tasks"
        ]
      }
    },
    "/risk_scenarios": {
      "get": {
        "description": "Retrieves a list of all available risk scenarios.",
        "operationId": "CredoAIWeb.API.V2.RiskScenarioController.index",
        "parameters": [
          {
            "description": "ownership_type filter type",
            "in": "query",
            "name": "filter[ownership_type][type]",
            "required": false,
            "type": "string"
          },
          {
            "description": "ownership_type filter value",
            "in": "query",
            "name": "filter[ownership_type][value]",
            "required": false,
            "type": "string"
          },
          {
            "description": "archived filter type",
            "in": "query",
            "name": "filter[archived][type]",
            "required": false,
            "type": "string"
          },
          {
            "description": "archived filter value",
            "in": "query",
            "name": "filter[archived][value]",
            "required": false,
            "type": "string"
          },
          {
            "description": "deprecated filter type",
            "in": "query",
            "name": "filter[deprecated][type]",
            "required": false,
            "type": "string"
          },
          {
            "description": "deprecated filter value",
            "in": "query",
            "name": "filter[deprecated][value]",
            "required": false,
            "type": "string"
          },
          {
            "description": "risk_type_id filter type",
            "in": "query",
            "name": "filter[risk_type_id][type]",
            "required": false,
            "type": "string"
          },
          {
            "description": "risk_type_id filter value",
            "in": "query",
            "name": "filter[risk_type_id][value]",
            "required": false,
            "type": "string"
          },
          {
            "description": "sort options",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string",
            "x-example": "name,inserted_at"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RiskScenariosResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "risks"
        ]
      }
    },
    "/vendors/{vendor_id}/questionnaires/{id}": {
      "delete": {
        "description": "Remove a specific questionnaire from a vendor's collection.",
        "operationId": "CredoAIWeb.API.V2.Vendor.QuestionnaireController.delete",
        "parameters": [
          {
            "description": "The unique ID of the vendor.",
            "in": "path",
            "name": "vendor_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the questionnaire to be deleted.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "vendors"
        ]
      },
      "patch": {
        "description": "Update the version of a specific questionnaire for a vendor.",
        "operationId": "CredoAIWeb.API.V2.Vendor.QuestionnaireController.update",
        "parameters": [
          {
            "description": "The unique ID of the vendor.",
            "in": "path",
            "name": "vendor_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the questionnaire to be updated.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The attributes for updating the questionnaire.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/VendorQuestionnaireUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VendorQuestionnaireResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "vendors"
        ]
      }
    },
    "/integrations/{id}": {
      "delete": {
        "description": "Delete an integration by its ID.",
        "operationId": "CredoAIWeb.API.V2.IntegrationController.delete",
        "parameters": [
          {
            "description": "The unique ID of the integration to delete.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "integrations"
        ]
      },
      "get": {
        "description": "Fetch details of a specific integration by its ID.",
        "operationId": "CredoAIWeb.API.V2.IntegrationController.show",
        "parameters": [
          {
            "description": "The unique ID of the integration.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IntegrationResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "integrations"
        ]
      },
      "patch": {
        "description": "Update an existing integration identified by its ID.",
        "operationId": "CredoAIWeb.API.V2.IntegrationController.update",
        "parameters": [
          {
            "description": "The unique ID of the integration to update.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Updated integration data.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/IntegrationUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IntegrationResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "integrations"
        ]
      }
    },
    "/use_cases/{use_case_id}/vendor_links": {
      "get": {
        "description": "Retrieve a list of vendor links associated with a specific use case.",
        "operationId": "CredoAIWeb.API.V2.UseCase.VendorLinkController.index",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UseCaseVendorLinksResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_cases"
        ]
      },
      "post": {
        "description": "Create a new vendor link for a specific use case.",
        "operationId": "CredoAIWeb.API.V2.UseCase.VendorLinkController.create",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The attributes for the new vendor link.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UseCaseVendorLinkCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/UseCaseVendorLinkResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_cases"
        ]
      }
    },
    "/use_cases/{use_case_id}/controls/{id}/cookbook": {
      "get": {
        "description": "Retrieve the cookbook associated with a specific control in a use case.",
        "operationId": "CredoAIWeb.API.V2.UseCase.ControlController.cookbook",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the control.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UseCaseControlCookbookResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_controls"
        ]
      }
    },
    "/use_case_reviews/{review_id}/actions": {
      "get": {
        "description": "Retrieve a list of all review actions associated with a specific use case review.\n\nNOTE: Using this endpoint with review actions of type 'comment' is DEPRECATED.\nPlease use the comment_threads API endpoints instead for comment functionality:\n[GET /use_cases/{use_case_id}/comment_threads](#/paths/~1use_cases~1{use_case_id}~1comment_threads/get)\n",
        "operationId": "CredoAIWeb.API.V2.UseCase.Review.ActionController.index",
        "parameters": [
          {
            "description": "page after cursor",
            "in": "query",
            "name": "page[after]",
            "required": false,
            "type": "string"
          },
          {
            "description": "page before cursor",
            "in": "query",
            "name": "page[before]",
            "required": false,
            "type": "string"
          },
          {
            "description": "page limit",
            "in": "query",
            "name": "page[limit]",
            "required": false,
            "type": "integer"
          },
          {
            "description": "type match filter",
            "in": "query",
            "name": "filter[type]",
            "required": false,
            "type": "string",
            "x-example": "approve"
          },
          {
            "description": "resolved match filter",
            "in": "query",
            "name": "filter[resolved]",
            "required": false,
            "type": "string",
            "x-example": "false"
          },
          {
            "description": "deleted match filter",
            "in": "query",
            "name": "filter[deleted]",
            "required": false,
            "type": "string",
            "x-example": "false"
          },
          {
            "description": "sort options",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string",
            "x-example": "-inserted_at"
          },
          {
            "description": "The unique ID of the use case review for which actions are being retrieved.",
            "in": "path",
            "name": "review_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UseCaseReviewActionsResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_reviews"
        ]
      },
      "post": {
        "description": "Create a new review action for the specified use case review.\n\nNOTE: Creating review actions of type 'comment' is DEPRECATED.\nPlease use the comment_threads API endpoints instead for comment functionality:\n[POST /use_cases/{use_case_id}/comment_threads](#/paths/~1use_cases~1{use_case_id}~1comment_threads/post)\nand\n[POST /use_cases/{use_case_id}/comment_threads/{thread_id}/comments](#/paths/~1use_cases~1{use_case_id}~1comment_threads~1{thread_id}~1comments/post)\n",
        "operationId": "CredoAIWeb.API.V2.UseCase.Review.ActionController.create",
        "parameters": [
          {
            "description": "The unique ID of the use case review for which a new action is being created.",
            "in": "path",
            "name": "review_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The attributes of the review action to be created.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UseCaseReviewActionCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UseCaseReviewActionResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_reviews"
        ]
      }
    },
    "/trigger_actions/{id}": {
      "delete": {
        "description": "Delete an action identified by its ID from the system.",
        "operationId": "CredoAIWeb.API.V2.TriggerActionController.delete",
        "parameters": [
          {
            "description": "Unique ID of the action to delete.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "$ref": "#/definitions/ActionResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "triggers_and_actions"
        ]
      },
      "get": {
        "description": "Fetch details of a specific action by its ID.",
        "operationId": "CredoAIWeb.API.V2.TriggerActionController.show",
        "parameters": [
          {
            "description": "Unique ID of the action.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ActionResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "triggers_and_actions"
        ]
      },
      "patch": {
        "description": "Update an existing action identified by its ID.",
        "operationId": "CredoAIWeb.API.V2.TriggerActionController.update",
        "parameters": [
          {
            "description": "Unique ID of the action to update.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Updated action data.",
            "in": "body",
            "name": "model",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ActionUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ActionResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "triggers_and_actions"
        ]
      }
    },
    "/policy_packs/{id}": {
      "get": {
        "description": "Fetch detailed information about a specific out-of-the-box policy pack identified by its ID.",
        "operationId": "CredoAIWeb.API.V2.PolicyPackController.show",
        "parameters": [
          {
            "description": "The unique ID of the policy pack.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyPackResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "policy_packs"
        ]
      }
    },
    "/triggers/{id}": {
      "delete": {
        "description": "Delete a trigger identified by its ID.",
        "operationId": "CredoAIWeb.API.V2.TriggerController.delete",
        "parameters": [
          {
            "description": "The unique ID of the trigger to delete.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TriggerResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "triggers_and_actions"
        ]
      },
      "get": {
        "description": "Fetch details of a specific trigger by its ID.",
        "operationId": "CredoAIWeb.API.V2.TriggerController.show",
        "parameters": [
          {
            "description": "The unique ID of the trigger.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TriggerResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "triggers_and_actions"
        ]
      },
      "patch": {
        "description": "Update an existing trigger identified by its ID.",
        "operationId": "CredoAIWeb.API.V2.TriggerController.update",
        "parameters": [
          {
            "description": "The unique ID of the trigger to update.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The updated attributes of the trigger.",
            "in": "body",
            "name": "model",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TriggerUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TriggerResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "triggers_and_actions"
        ]
      }
    },
    "/use_cases/{use_case_id}/comment_threads/{thread_id}/comments/{id}": {
      "delete": {
        "description": "Delete a specific comment from a comment thread.",
        "operationId": "CredoAIWeb.API.V2.Entity.CommentController.delete",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the thread.",
            "in": "path",
            "name": "thread_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the comment to be deleted.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "comment_threads"
        ]
      },
      "patch": {
        "description": "Update a specific comment within a comment thread.",
        "operationId": "CredoAIWeb.API.V2.Entity.CommentController.update",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the thread.",
            "in": "path",
            "name": "thread_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the comment.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The attributes of the comment to update.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CommentUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CommentResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "comment_threads"
        ]
      }
    },
    "/use_cases": {
      "get": {
        "description": "Retrieve a list of all use cases.",
        "operationId": "CredoAIWeb.API.V2.UseCaseController.index",
        "parameters": [
          {
            "description": "page after cursor",
            "in": "query",
            "name": "page[after]",
            "required": false,
            "type": "string"
          },
          {
            "description": "page before cursor",
            "in": "query",
            "name": "page[before]",
            "required": false,
            "type": "string"
          },
          {
            "description": "page limit",
            "in": "query",
            "name": "page[limit]",
            "required": false,
            "type": "integer"
          },
          {
            "description": "name filter type",
            "in": "query",
            "name": "filter[name][type]",
            "required": false,
            "type": "string"
          },
          {
            "description": "name filter value",
            "in": "query",
            "name": "filter[name][value]",
            "required": false,
            "type": "string"
          },
          {
            "description": "id filter type",
            "in": "query",
            "name": "filter[id][type]",
            "required": false,
            "type": "string"
          },
          {
            "description": "id filter value",
            "in": "query",
            "name": "filter[id][value]",
            "required": false,
            "type": "string"
          },
          {
            "description": "sort options",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string",
            "x-example": "-inserted_at"
          },
          {
            "description": "domains",
            "in": "query",
            "name": "filter[domains][]",
            "required": false,
            "type": "string"
          },
          {
            "description": "ai_type",
            "in": "query",
            "name": "filter[ai_type][]",
            "required": false,
            "type": "string"
          },
          {
            "description": "in_review",
            "in": "query",
            "name": "filter[in_review][]",
            "required": false,
            "type": "string"
          },
          {
            "description": "is_vendor",
            "in": "query",
            "name": "filter[is_vendor][]",
            "required": false,
            "type": "string"
          },
          {
            "description": "policy pack key",
            "in": "query",
            "name": "filter[policy_pack_keys][]",
            "required": false,
            "type": "string"
          },
          {
            "description": "vendors",
            "in": "query",
            "name": "filter[vendors][]",
            "required": false,
            "type": "string"
          },
          {
            "description": "has_vendors",
            "in": "query",
            "name": "filter[has_vendors][]",
            "required": false,
            "type": "string"
          },
          {
            "description": "models",
            "in": "query",
            "name": "filter[models][]",
            "required": false,
            "type": "string"
          },
          {
            "description": "regions",
            "in": "query",
            "name": "filter[regions][]",
            "required": false,
            "type": "string"
          },
          {
            "description": "creator_id",
            "in": "query",
            "name": "filter[creator_id][]",
            "required": false,
            "type": "string"
          },
          {
            "description": "risk_classification_level",
            "in": "query",
            "name": "filter[risk_classification_level][]",
            "required": false,
            "type": "string"
          },
          {
            "description": "custom_fields",
            "in": "query",
            "name": "filter[custom_fields][]",
            "required": false,
            "type": "string"
          },
          {
            "description": "use_case_number",
            "in": "query",
            "name": "filter[use_case_number][]",
            "required": false,
            "type": "string"
          },
          {
            "description": "has_active_reviewers",
            "in": "query",
            "name": "filter[has_active_reviewers][]",
            "required": false,
            "type": "string"
          },
          {
            "description": "has_scheduled_reviews",
            "in": "query",
            "name": "filter[has_scheduled_reviews][]",
            "required": false,
            "type": "string"
          },
          {
            "description": "reviewers",
            "in": "query",
            "name": "filter[reviewers][]",
            "required": false,
            "type": "string"
          },
          {
            "description": "workflow_stage_id",
            "in": "query",
            "name": "filter[workflow_stage_id][]",
            "required": false,
            "type": "string"
          },
          {
            "description": "workflow_stage_step",
            "in": "query",
            "name": "filter[workflow_stage_step][]",
            "required": false,
            "type": "string"
          },
          {
            "description": "q",
            "in": "query",
            "name": "filter[q][]",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UseCasesResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_cases"
        ]
      },
      "post": {
        "description": "Create a new use case.",
        "operationId": "CredoAIWeb.API.V2.UseCaseController.create",
        "parameters": [
          {
            "description": "Attributes of the use case to be created",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UseCaseCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/UseCaseResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_cases"
        ]
      }
    },
    "/custom_fields": {
      "get": {
        "description": "Retrieves a list of all custom fields.",
        "operationId": "CredoAIWeb.API.V2.CustomFieldController.index",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomFieldsResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "fields"
        ]
      },
      "post": {
        "description": "Creates a new custom field with the specified attributes. Returns the created field's details.",
        "operationId": "CredoAIWeb.API.V2.CustomFieldController.create",
        "parameters": [
          {
            "description": "attributes",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CustomFieldCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/CustomFieldResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "fields"
        ]
      }
    },
    "/questionnaires/{id}": {
      "get": {
        "description": "Fetches the details of a specific published questionnaire identified by its ID.",
        "operationId": "CredoAIWeb.API.V2.QuestionnaireController.show",
        "parameters": [
          {
            "description": "questionnaire id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuestionnaireResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "questionnaires"
        ]
      }
    },
    "/use_cases/{use_case_id}/comment_threads/{thread_id}/comments": {
      "post": {
        "description": "Create a new comment within a comment thread.",
        "operationId": "CredoAIWeb.API.V2.Entity.CommentController.create",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the thread.",
            "in": "path",
            "name": "thread_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The attributes for the new comment.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CommentCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/CommentResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "comment_threads"
        ]
      }
    },
    "/regions": {
      "get": {
        "description": "Retrieves a list of available regions for the tenant.",
        "operationId": "CredoAIWeb.API.V2.TenantInfoController.regions",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RegionsResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "fields"
        ]
      }
    },
    "/use_case_review_actions/{action_id}/reply_thread": {
      "post": {
        "deprecated": true,
        "description": "DEPRECATED: Create a reply thread for a specific review action.\nThis endpoint will be removed in a major release after v20. Please use the new API endpoints instead:\n[POST /use_cases/{use_case_id}/comment_threads](#/paths/~1use_cases~1{use_case_id}~1comment_threads/post)\nor\n[POST /use_cases/{use_case_id}/comment_threads/{thread_id}/comments](#/paths/~1use_cases~1{use_case_id}~1comment_threads~1{thread_id}~1comments/post)\n",
        "operationId": "CredoAIWeb.API.V2.UseCase.Review.ActionController.create_thread",
        "parameters": [
          {
            "description": "The unique ID of the review action for which to create a thread.",
            "in": "path",
            "name": "action_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/UseCaseThreadResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_reviews"
        ]
      }
    },
    "/sources/in_use": {
      "get": {
        "description": "Retrieves a list of sources that are currently in use by models.",
        "operationId": "CredoAIWeb.API.V2.SourceController.in_use",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SourcesPageResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "sources"
        ]
      }
    },
    "/use_cases/{use_case_id}/policy_packs/{id}": {
      "delete": {
        "description": "Delete a policy pack from the specified use case, which also removes related policy packs and controls.",
        "operationId": "CredoAIWeb.API.V2.UseCase.PolicyPackController.delete",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the policy pack to delete.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_policy_packs"
        ]
      },
      "patch": {
        "description": "Update an existing policy pack. \nIf a version is provided, the policy pack will be upgraded to that version, ignoring other attributes. \nIf a due date is provided, it will update the due date of the policy pack.\n",
        "operationId": "CredoAIWeb.API.V2.UseCase.PolicyPackController.update",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the policy pack to update.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Attributes to update the policy pack.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UseCasePolicyPackUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UseCasePolicyPackResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_policy_packs"
        ]
      }
    },
    "/use_cases/{use_case_id}/reports/{report_id}/attestation_requests/{id}": {
      "delete": {
        "description": "Cancel a specific attestation request associated with a report and use case.",
        "operationId": "CredoAIWeb.API.V2.UseCase.Report.AttestationRequestController.delete",
        "parameters": [
          {
            "description": "The unique identifier of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique identifier of the report.",
            "in": "path",
            "name": "report_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique identifier of the attestation request to be canceled.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_reports"
        ]
      }
    },
    "/me/tasks": {
      "get": {
        "description": "Retrieve a list of tasks that are currently assigned to the authenticated user.",
        "operationId": "CredoAIWeb.API.V2.TaskController.my_tasks",
        "parameters": [
          {
            "description": "status match filter",
            "in": "query",
            "name": "filter[status]",
            "required": false,
            "type": "string",
            "x-example": "in_progress"
          },
          {
            "description": "sort options",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string",
            "x-example": "-inserted_at,status"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TasksResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "user"
        ]
      }
    },
    "/use_cases/{use_case_id}/custom_fields/{name}": {
      "delete": {
        "deprecated": true,
        "description": "[DEPRECATED] Delete a custom field identified by its name for a specific use case.",
        "operationId": "CredoAIWeb.API.V2.UseCase.CustomFieldController.delete",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the custom field to be deleted.",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_custom_fields"
        ]
      },
      "patch": {
        "deprecated": true,
        "description": "[DEPRECATED] Update the value of a custom field identified by its name for a specific use case.",
        "operationId": "CredoAIWeb.API.V2.UseCase.CustomFieldController.update",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the custom field to be updated.",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "The attributes of the custom field to be updated.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UseCaseCustomFieldUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UseCaseCustomFieldResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_custom_fields"
        ]
      }
    },
    "/models/{model_id}/questionnaires": {
      "get": {
        "description": "Retrieve a list of all questionnaires associated with a specific model.",
        "operationId": "CredoAIWeb.API.V2.Model.QuestionnaireController.index",
        "parameters": [
          {
            "description": "The unique ID of the model.",
            "in": "path",
            "name": "model_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelQuestionnairesResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "models"
        ]
      },
      "post": {
        "description": "Create a new questionnaire for a specific model.",
        "operationId": "CredoAIWeb.API.V2.Model.QuestionnaireController.create",
        "parameters": [
          {
            "description": "The unique ID of the model.",
            "in": "path",
            "name": "model_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The attributes for the new questionnaire.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ModelQuestionnaireCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ModelQuestionnaireResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "models"
        ]
      }
    },
    "/use_cases/{use_case_id}/questionnaire_sections/{section_id}/tasks": {
      "post": {
        "description": "Creates a new task associated with a specific questionnaire section of a use case.",
        "operationId": "CredoAIWeb.API.V2.UseCase.Questionnaire.SectionController.create_task",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the questionnaire section.",
            "in": "path",
            "name": "section_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The details of the task to be created.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UseCaseControlTaskCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/TaskResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_questionnaires",
          "tasks"
        ]
      }
    },
    "/teams": {
      "get": {
        "description": "Retrieve a list of all teams.",
        "operationId": "CredoAIWeb.API.V2.TeamController.index",
        "parameters": [
          {
            "description": "page after cursor",
            "in": "query",
            "name": "page[after]",
            "required": false,
            "type": "string"
          },
          {
            "description": "page before cursor",
            "in": "query",
            "name": "page[before]",
            "required": false,
            "type": "string"
          },
          {
            "description": "page limit",
            "in": "query",
            "name": "page[limit]",
            "required": false,
            "type": "integer"
          },
          {
            "description": "name filter type",
            "in": "query",
            "name": "filter[name][type]",
            "required": false,
            "type": "string"
          },
          {
            "description": "name filter value",
            "in": "query",
            "name": "filter[name][value]",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TeamsResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "teams"
        ]
      },
      "post": {
        "description": "Create a new team with the provided attributes.",
        "operationId": "CredoAIWeb.API.V2.TeamController.create",
        "parameters": [
          {
            "description": "data",
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TeamCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TeamResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "teams"
        ]
      }
    },
    "/policy_controls": {
      "get": {
        "description": "List all latest policy controls",
        "operationId": "CredoAIWeb.API.V2.PolicyControlController.index",
        "parameters": [
          {
            "description": "risk type IDs",
            "in": "query",
            "name": "filter[risk_type_ids][]",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyControlsCollectionResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "policy_controls"
        ]
      }
    },
    "/me/setting": {
      "get": {
        "description": "Retrieve the current settings for the authenticated user.",
        "operationId": "CredoAIWeb.API.V2.UserController.show_my_setting",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserSettingResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "user"
        ]
      }
    },
    "/models/{model_id}/vendor_links/{id}": {
      "delete": {
        "description": "Delete a specific vendor link associated with a model.",
        "operationId": "CredoAIWeb.API.V2.Model.VendorLinkController.delete",
        "parameters": [
          {
            "description": "The unique ID of the model.",
            "in": "path",
            "name": "model_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the vendor link to be deleted.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "models"
        ]
      }
    },
    "/use_cases/{use_case_id}/reports": {
      "get": {
        "description": "Retrieve a list of reports associated with a specific use case.",
        "operationId": "CredoAIWeb.API.V2.UseCase.ReportController.index",
        "parameters": [
          {
            "description": "policy_pack_key match filter",
            "in": "query",
            "name": "filter[policy_pack_key]",
            "required": false,
            "type": "string"
          },
          {
            "description": "sort options",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string",
            "x-example": "-inserted_at"
          },
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReportsResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_reports"
        ]
      },
      "post": {
        "description": "Create a new report for a specific use case with the provided attributes.",
        "operationId": "CredoAIWeb.API.V2.UseCase.ReportController.create",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The attributes for the new report.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ReportCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ReportResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_reports"
        ]
      }
    },
    "/use_cases/{use_case_id}/comment_threads/{id}": {
      "get": {
        "description": "Retrieve details of a specific comment thread within a use case.",
        "operationId": "CredoAIWeb.API.V2.Entity.CommentThreadController.show",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the thread.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CommentThreadResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "comment_threads"
        ]
      },
      "patch": {
        "description": "Resolve a specific comment thread within a use case.",
        "operationId": "CredoAIWeb.API.V2.Entity.CommentThreadController.update",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the thread.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The attributes of the thread to update.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CommentThreadUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CommentThreadResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "schema": {
              "$ref": "#/definitions/UnprocessableEntityError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "comment_threads"
        ]
      }
    },
    "/policy_packs/{id}/duplicate": {
      "post": {
        "description": "Create a duplicate of an existing out-of-the-box policy pack, generating a new custom policy pack with version 1.",
        "operationId": "CredoAIWeb.API.V2.PolicyPackController.duplicate",
        "parameters": [
          {
            "description": "The unique ID of the policy pack to duplicate.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Attributes for the duplicated policy pack.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PolicyPackDuplicateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/PolicyPackVersionResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "policy_packs"
        ]
      }
    },
    "/questionnaires": {
      "get": {
        "description": "Retrieves a list of the latest versions of published questionnaires.",
        "operationId": "CredoAIWeb.API.V2.QuestionnaireController.index",
        "parameters": [
          {
            "description": "target",
            "in": "query",
            "name": "filter[target][]",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuestionnairesResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "questionnaires"
        ]
      }
    },
    "/use_cases/{use_case_id}/scheduled_reviews": {
      "get": {
        "description": "Retrieve a list of scheduled reviews associated with a specific use case.",
        "operationId": "CredoAIWeb.API.V2.UseCase.ScheduledReviewController.index",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UseCaseScheduledReviewsResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_scheduled_reviews"
        ]
      },
      "post": {
        "description": "Create a new scheduled_review for a specified use case.",
        "operationId": "CredoAIWeb.API.V2.UseCase.ScheduledReviewController.create",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The attributes for the new scheduled review.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UseCaseScheduledReviewCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UseCaseScheduledReviewResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_scheduled_reviews"
        ]
      }
    },
    "/webhooks/{id}": {
      "delete": {
        "description": "Delete a webhook endpoint identified by its ID from the system.",
        "operationId": "CredoAIWeb.API.V2.WebhookController.delete",
        "parameters": [
          {
            "description": "The unique ID of the webhook endpoint to delete.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "webhooks"
        ]
      },
      "get": {
        "description": "Fetch details of a specific webhook endpoint by its ID.",
        "operationId": "CredoAIWeb.API.V2.WebhookController.show",
        "parameters": [
          {
            "description": "The unique ID of the webhook endpoint.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WebhookResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "webhooks"
        ]
      },
      "patch": {
        "description": "Update an existing webhook endpoint identified by its ID.",
        "operationId": "CredoAIWeb.API.V2.WebhookController.update",
        "parameters": [
          {
            "description": "The unique ID of the webhook endpoint to update.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Updated webhook endpoint data.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WebhookUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WebhookResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "webhooks"
        ]
      }
    },
    "/integrations": {
      "get": {
        "description": "Retrieve a list of all integrations.",
        "operationId": "CredoAIWeb.API.V2.IntegrationController.index",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IntegrationsResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "integrations"
        ]
      },
      "post": {
        "description": "Create a new integration with the provided attributes.",
        "operationId": "CredoAIWeb.API.V2.IntegrationController.create",
        "parameters": [
          {
            "description": "The attributes for the integration being created.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/IntegrationCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/IntegrationResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "integrations"
        ]
      }
    },
    "/questionnaire_bases/{id}": {
      "delete": {
        "description": "Deletes a specific questionnaire base identified by its ID from the system.",
        "operationId": "CredoAIWeb.API.V2.Questionnaire.BaseController.delete",
        "parameters": [
          {
            "description": "The unique ID of the questionnaire base to delete.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "questionnaires"
        ]
      },
      "get": {
        "description": "Fetches the details of a specific questionnaire base identified by its ID.",
        "operationId": "CredoAIWeb.API.V2.Questionnaire.BaseController.show",
        "parameters": [
          {
            "description": "The unique ID of the questionnaire base.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuestionnaireBaseResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "questionnaires"
        ]
      },
      "patch": {
        "description": "Updates an existing questionnaire base identified by its ID with the provided attributes.",
        "operationId": "CredoAIWeb.API.V2.Questionnaire.BaseController.update",
        "parameters": [
          {
            "description": "The unique ID of the questionnaire base to update.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The attributes to update the questionnaire base.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/QuestionnaireBaseUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuestionnaireBaseResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "questionnaires"
        ]
      }
    },
    "/use_cases/{use_case_id}/controls/{control_id}/evidences": {
      "get": {
        "description": "Retrieve a list of evidences associated with a specific use case control.",
        "operationId": "CredoAIWeb.API.V2.UseCase.ControlEvidenceController.index",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the use case control.",
            "in": "path",
            "name": "control_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EvidencesResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_controls"
        ]
      },
      "post": {
        "description": "Create a new evidence entry for a specified requirement of a use case control.",
        "operationId": "CredoAIWeb.API.V2.UseCase.ControlEvidenceController.create",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the use case control.",
            "in": "path",
            "name": "control_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The attributes of the evidence to be created.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UseCaseControlEvidenceCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/EvidenceResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_controls"
        ]
      }
    },
    "/me/recently_visited_use_cases": {
      "get": {
        "description": "Retrieve a list of use cases that the user has recently interacted with.",
        "operationId": "CredoAIWeb.API.V2.MeController.recently_visited_use_cases",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UseCasesResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "user"
        ]
      }
    },
    "/metadata_fields_setting": {
      "get": {
        "description": "Retrieves the current settings for metadata fields, providing details on their configuration and usage.",
        "operationId": "CredoAIWeb.API.V2.MetadataFieldSettingController.show",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MetadataFieldsSettingsResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "fields"
        ]
      },
      "patch": {
        "description": "Updates the settings for metadata fields.",
        "operationId": "CredoAIWeb.API.V2.MetadataFieldSettingController.update",
        "parameters": [
          {
            "description": "attributes",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/MetadataFieldsSettingUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MetadataFieldsSettingResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "schema": {
              "$ref": "#/definitions/UnprocessableEntityError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "fields"
        ]
      }
    },
    "/custom_risk_scenarios": {
      "post": {
        "description": "Creates a new custom risk scenario with the provided attributes.",
        "operationId": "CredoAIWeb.API.V2.CustomRiskScenarioController.create",
        "parameters": [
          {
            "description": "data",
            "in": "body",
            "name": "model",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CustomRiskScenarioCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/RiskScenarioResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "risks"
        ]
      }
    },
    "/use_cases/{use_case_id}/policy_packs": {
      "get": {
        "description": "Retrieve a list of all policy packs associated with a specific use case.",
        "operationId": "CredoAIWeb.API.V2.UseCase.PolicyPackController.index",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UseCasePolicyPacksResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_policy_packs"
        ]
      },
      "post": {
        "description": "Create a new policy pack for the specified use case, resulting in the creation of related policy packs and controls.",
        "operationId": "CredoAIWeb.API.V2.UseCase.PolicyPackController.create",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Attributes for the new policy pack.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UseCasePolicyPackCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/UseCasePolicyPackResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_policy_packs"
        ]
      }
    },
    "/vendors/{vendor_id}/files": {
      "get": {
        "description": "Retrieve a list of files associated with a specific vendor.",
        "operationId": "CredoAIWeb.API.V2.Vendor.FileController.index",
        "parameters": [
          {
            "description": "The unique ID of the vendor whose files are being retrieved.",
            "in": "path",
            "name": "vendor_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VendorFilesResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "vendors"
        ]
      },
      "post": {
        "description": "Upload a new file for a specific vendor.",
        "operationId": "CredoAIWeb.API.V2.Vendor.FileController.create",
        "parameters": [
          {
            "description": "The unique ID of the vendor for whom the file is being created.",
            "in": "path",
            "name": "vendor_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The attributes of the file to be created.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/VendorFileCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VendorFileResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "vendors"
        ]
      }
    },
    "/me/notifications": {
      "get": {
        "description": "Retrieve a list of notifications for the authenticated user.",
        "operationId": "CredoAIWeb.API.V2.NotificationController.index",
        "parameters": [
          {
            "description": "page after cursor",
            "in": "query",
            "name": "page[after]",
            "required": false,
            "type": "string"
          },
          {
            "description": "page before cursor",
            "in": "query",
            "name": "page[before]",
            "required": false,
            "type": "string"
          },
          {
            "description": "page limit",
            "in": "query",
            "name": "page[limit]",
            "required": false,
            "type": "integer"
          },
          {
            "description": "sort options",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string",
            "x-example": "-inserted_at"
          },
          {
            "description": "type filter type",
            "in": "query",
            "name": "filter[type][type]",
            "required": false,
            "type": "string"
          },
          {
            "description": "type filter value",
            "in": "query",
            "name": "filter[type][value]",
            "required": false,
            "type": "string"
          },
          {
            "description": "status filter type",
            "in": "query",
            "name": "filter[status][type]",
            "required": false,
            "type": "string"
          },
          {
            "description": "status filter value",
            "in": "query",
            "name": "filter[status][value]",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NotificationsPageResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "user"
        ]
      }
    },
    "/models/{model_id}/vendor_links": {
      "get": {
        "description": "Retrieve a list of vendor links associated with a specific model.",
        "operationId": "CredoAIWeb.API.V2.Model.VendorLinkController.index",
        "parameters": [
          {
            "description": "The unique ID of the model.",
            "in": "path",
            "name": "model_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelVendorLinksResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "models"
        ]
      },
      "post": {
        "description": "Create a new vendor link for a specific model.",
        "operationId": "CredoAIWeb.API.V2.Model.VendorLinkController.create",
        "parameters": [
          {
            "description": "The unique ID of the model.",
            "in": "path",
            "name": "model_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The attributes for the new vendor link.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ModelVendorLinkCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ModelVendorLinkResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "models"
        ]
      }
    },
    "/use_cases/{use_case_id}/threads/{thread_id}/comments": {
      "get": {
        "deprecated": true,
        "description": "DEPRECATED: Retrieve a list of all comments associated with a specific thread in a use case.\nThis endpoint will be removed in a major release after v20. Please use the new API endpoint instead:\n[GET /use_cases/{use_case_id}/comment_threads/{id}](#/paths/~1use_cases~1{use_case_id}~1comment_threads~1{id}/get)\n",
        "operationId": "CredoAIWeb.API.V2.UseCase.CommentController.index",
        "parameters": [
          {
            "description": "user,thread,reply_thread",
            "in": "query",
            "name": "include",
            "required": false,
            "type": "string",
            "x-example": "user,thread,reply_thread"
          },
          {
            "description": "page after cursor",
            "in": "query",
            "name": "page[after]",
            "required": false,
            "type": "string"
          },
          {
            "description": "page before cursor",
            "in": "query",
            "name": "page[before]",
            "required": false,
            "type": "string"
          },
          {
            "description": "page limit",
            "in": "query",
            "name": "page[limit]",
            "required": false,
            "type": "integer"
          },
          {
            "description": "sort options",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string",
            "x-example": "-inserted_at"
          },
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the thread.",
            "in": "path",
            "name": "thread_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UseCaseCommentsPageResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_comments"
        ]
      },
      "post": {
        "deprecated": true,
        "description": "DEPRECATED: Create a new comment within a specified thread of a use case.\nThis endpoint will be removed in a major release after v20. Please use the new API endpoint instead:\n[POST /use_cases/{use_case_id}/comment_threads/{thread_id}/comments](#/paths/~1use_cases~1{use_case_id}~1comment_threads~1{thread_id}~1comments/post)\n",
        "operationId": "CredoAIWeb.API.V2.UseCase.CommentController.create",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the thread.",
            "in": "path",
            "name": "thread_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The attributes of the comment to be created.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UseCaseCommentCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/UseCaseCommentResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_comments"
        ]
      }
    },
    "/use_cases/{use_case_id}/risk_control_links": {
      "get": {
        "description": "Retrieve a list of risk control links associated with a specific use case.",
        "operationId": "CredoAIWeb.API.V2.UseCase.RiskControlLinkController.index",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UseCaseRiskControlLinksResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_controls"
        ]
      },
      "post": {
        "description": "Create a new risk control link for a specified use case.",
        "operationId": "CredoAIWeb.API.V2.UseCase.RiskControlLinkController.create",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The attributes for the new risk control link.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UseCaseRiskControlLinkCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/UseCaseRiskControlLinkResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_controls"
        ]
      }
    },
    "/models/{model_id}/custom_fields": {
      "get": {
        "description": "Retrieve a list of all custom fields associated with a specific model.",
        "operationId": "CredoAIWeb.API.V2.Model.CustomFieldController.index",
        "parameters": [
          {
            "description": "The unique ID of the model.",
            "in": "path",
            "name": "model_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelCustomFieldsResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "models"
        ]
      }
    },
    "/evidence_types": {
      "get": {
        "description": "Retrieves all available evidence types supported by the system.",
        "operationId": "CredoAIWeb.API.V2.EvidenceTypeController.evidence_types",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EvidenceTypeResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "other"
        ]
      }
    },
    "/use_cases/{use_case_id}/stakeholders": {
      "get": {
        "description": "Retrieve a list of all stakeholders associated with a specific use case.",
        "operationId": "CredoAIWeb.API.V2.UseCase.StakeholderController.index",
        "parameters": [
          {
            "description": "user,use_case,team",
            "in": "query",
            "name": "include",
            "required": false,
            "type": "string",
            "x-example": "user,use_case,team"
          },
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UseCasesStakeholdersResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_cases"
        ]
      },
      "post": {
        "description": "Create a new stakeholder for the specified use case.",
        "operationId": "CredoAIWeb.API.V2.UseCase.StakeholderController.create",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The attributes of the stakeholder to be created.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UseCaseStakeholderCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/UseCaseStakeholderResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/UseCaseStakeholderAlreadyExistError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_cases"
        ]
      }
    },
    "/models/{id}": {
      "delete": {
        "description": "Delete a specific model identified by its ID from the system.",
        "operationId": "CredoAIWeb.API.V2.ModelController.delete",
        "parameters": [
          {
            "description": "Unique identifier of the model to delete",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "models"
        ]
      },
      "get": {
        "description": "Retrieve detailed information about a specific model identified by its ID.",
        "operationId": "CredoAIWeb.API.V2.ModelController.show",
        "parameters": [
          {
            "description": "user,model_project,workflows,metrics,stakeholders,tags,assets,vendors",
            "in": "query",
            "name": "include",
            "required": false,
            "type": "string",
            "x-example": "user,model_project,workflows,metrics,stakeholders,tags,assets,vendors"
          },
          {
            "description": "Unique identifier of the model to retrieve",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "models"
        ]
      },
      "patch": {
        "description": "Update the attributes of an existing model identified by its ID.",
        "operationId": "CredoAIWeb.API.V2.ModelController.update",
        "parameters": [
          {
            "description": "Unique identifier of the model to update",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Attributes to update the model",
            "in": "body",
            "name": "model",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ModelUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "models"
        ]
      }
    },
    "/tasks": {
      "get": {
        "description": "Retrieve the list of all tasks.",
        "operationId": "CredoAIWeb.API.V2.TaskController.index",
        "parameters": [
          {
            "description": "status match filter",
            "in": "query",
            "name": "filter[status]",
            "required": false,
            "type": "string",
            "x-example": "in_progress"
          },
          {
            "description": "sort options",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string",
            "x-example": "-inserted_at,status"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TasksResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "tasks"
        ]
      }
    },
    "/use_cases/{use_case_id}/threads/{id}": {
      "delete": {
        "description": "DEPRECATED: Delete a specific thread from a use case.\nThis endpoint will be removed in a major release after v20. Please use the new API endpoint instead:\n[DELETE /use_cases/{use_case_id}/comment_threads/{id}](#/paths/~1use_cases~1{use_case_id}~1comment_threads~1{id}/delete)\n",
        "operationId": "CredoAIWeb.API.V2.UseCase.ThreadController.delete",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the thread to be deleted.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_comments"
        ]
      },
      "get": {
        "description": "DEPRECATED: Retrieve details of a specific thread within a use case.\nThis endpoint will be removed in a major release after v20. Please use the new API endpoint instead:\n[GET /use_cases/{use_case_id}/comment_threads/{id}](#/paths/~1use_cases~1{use_case_id}~1comment_threads~1{id}/get)\n",
        "operationId": "CredoAIWeb.API.V2.UseCase.ThreadController.show",
        "parameters": [
          {
            "description": "user,parent_comment",
            "in": "query",
            "name": "include",
            "required": false,
            "type": "string",
            "x-example": "user,parent_comment"
          },
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the thread.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UseCaseThreadResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_comments"
        ]
      }
    },
    "/models": {
      "get": {
        "description": "Retrieve a list of all models available in the system.",
        "operationId": "CredoAIWeb.API.V2.ModelController.index",
        "parameters": [
          {
            "description": "page after cursor",
            "in": "query",
            "name": "page[after]",
            "required": false,
            "type": "string"
          },
          {
            "description": "page before cursor",
            "in": "query",
            "name": "page[before]",
            "required": false,
            "type": "string"
          },
          {
            "description": "page limit",
            "in": "query",
            "name": "page[limit]",
            "required": false,
            "type": "integer"
          },
          {
            "description": "sort options",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string",
            "x-example": "-inserted_at"
          },
          {
            "description": "name filter type",
            "in": "query",
            "name": "filter[name][type]",
            "required": false,
            "type": "string"
          },
          {
            "description": "name filter value",
            "in": "query",
            "name": "filter[name][value]",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter models by tag name",
            "in": "query",
            "name": "filter[tags.name][]",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter models by their unique identifier",
            "in": "query",
            "name": "filter[id][]",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter models by source",
            "in": "query",
            "name": "filter[source]",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelsPageResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "models"
        ]
      },
      "post": {
        "description": "Create a new model with the specified attributes.",
        "operationId": "CredoAIWeb.API.V2.ModelController.create",
        "parameters": [
          {
            "description": "Attributes required to create a new model",
            "in": "body",
            "name": "model",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ModelCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ModelResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "models"
        ]
      }
    },
    "/use_cases/{use_case_id}/evidences": {
      "get": {
        "description": "List all active evidences related to a specific use case.",
        "operationId": "CredoAIWeb.API.V2.UseCase.EvidenceController.index",
        "parameters": [
          {
            "description": "type match filter",
            "in": "query",
            "name": "filter[type]",
            "required": false,
            "type": "string"
          },
          {
            "description": "sort options",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string",
            "x-example": "-inserted_at"
          },
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EvidencesResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_cases"
        ]
      }
    },
    "/models/{model_id}/questionnaire_sections": {
      "get": {
        "description": "Retrieves a list of all questionnaire sections associated with a specific model.",
        "operationId": "CredoAIWeb.API.V2.Model.Questionnaire.SectionController.index",
        "parameters": [
          {
            "description": "The unique ID of the model.",
            "in": "path",
            "name": "model_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelQuestionnaireSectionsResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "models"
        ]
      }
    },
    "/use_cases/{use_case_id}/questionnaire_sections": {
      "get": {
        "description": "Retrieves a list of all questionnaire sections associated with a specific use case.",
        "operationId": "CredoAIWeb.API.V2.UseCase.Questionnaire.SectionController.index",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UseCaseQuestionnaireSectionsResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_questionnaires"
        ]
      }
    },
    "/risk_scenarios/{id}": {
      "get": {
        "description": "Get risk scenario",
        "operationId": "CredoAIWeb.API.V2.RiskScenarioController.show",
        "parameters": [
          {
            "description": "risk scenario id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RiskScenarioResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "risks"
        ]
      },
      "patch": {
        "description": "Updates the visibility status of a specific risk scenario.",
        "operationId": "CredoAIWeb.API.V2.RiskScenarioController.update",
        "parameters": [
          {
            "description": "The unique ID of the risk scenario to update.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The attributes to update for the risk scenario.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/RiskScenarioUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RiskScenarioResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "risks"
        ]
      }
    },
    "/use_cases/{use_case_id}/section_assignments": {
      "post": {
        "description": "Creates tasks for multiple sections and assigns them to a user or team",
        "operationId": "CredoAIWeb.API.V2.UseCase.SectionsAssignmentController.create",
        "parameters": [
          {
            "description": "The unique ID of the use case",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The task assignment details",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SectionAssignmentRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/TasksResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_cases"
        ]
      }
    },
    "/domains/in_use": {
      "get": {
        "description": "Retrieves a list of domains that are currently in use.",
        "operationId": "CredoAIWeb.API.V2.DomainController.in_use",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DomainsResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "fields"
        ]
      }
    },
    "/use_cases/import": {
      "post": {
        "description": "Import multiple use cases from a JSON file.",
        "operationId": "CredoAIWeb.API.V2.UseCaseController.import",
        "parameters": [
          {
            "description": "Items to be imported as use cases",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UseCasesImportRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/UseCaseImportResponse"
            }
          },
          "207": {
            "description": "Partial success in importing use cases",
            "schema": {
              "$ref": "#/definitions/UseCaseImportResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_cases"
        ]
      }
    },
    "/use_cases/{use_case_id}/risk_scenarios/{id}": {
      "delete": {
        "description": "Deletes the specified risk scenario from the use case.",
        "operationId": "CredoAIWeb.API.V2.UseCase.RiskScenarioController.delete",
        "parameters": [
          {
            "description": "The ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the risk scenario.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_risk_scenarios"
        ]
      },
      "get": {
        "description": "Retrieves detailed information about a specific risk scenario associated with the given use case.",
        "operationId": "CredoAIWeb.API.V2.UseCase.RiskScenarioController.show",
        "parameters": [
          {
            "description": "The ID of the risk scenario.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UseCaseRiskScenarioResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_risk_scenarios"
        ]
      },
      "patch": {
        "description": "Updates the attributes of an existing risk scenario.",
        "operationId": "CredoAIWeb.API.V2.UseCase.RiskScenarioController.update",
        "parameters": [
          {
            "description": "The ID of the risk scenario.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The updated attributes for the risk scenario.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UseCaseRiskScenarioUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UseCaseRiskScenarioResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_risk_scenarios"
        ]
      }
    },
    "/use_cases/{use_case_id}/questionnaire_sections/{section_id}/files": {
      "get": {
        "description": "Retrieves a list of all supplementary files associated with a specific questionnaire section for a given use case.",
        "operationId": "CredoAIWeb.API.V2.UseCase.Questionnaire.SectionFileController.index",
        "parameters": [
          {
            "description": "The unique ID for the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID for the questionnaire section.",
            "in": "path",
            "name": "section_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SectionFilesResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_questionnaires"
        ]
      },
      "post": {
        "description": "Creates a new file associated with a specific questionnaire section for a given use case.",
        "operationId": "CredoAIWeb.API.V2.UseCase.Questionnaire.SectionFileController.create",
        "parameters": [
          {
            "description": "The unique ID for the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID for the questionnaire section.",
            "in": "path",
            "name": "section_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The attributes of the file to be created.",
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SectionFileCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/SectionFileResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_questionnaires"
        ]
      }
    },
    "/use_cases/{use_case_id}/controls/{control_id}/files": {
      "get": {
        "description": "Retrieves a list of all supplementary files associated with a specific questionnaire control for a given use case.",
        "operationId": "CredoAIWeb.API.V2.UseCase.ControlFileController.index",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the control associated with the use case.",
            "in": "path",
            "name": "control_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ControlFilesResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_controls"
        ]
      },
      "post": {
        "description": "Creates a new file associated with a specific questionnaire control for a given use case.",
        "operationId": "CredoAIWeb.API.V2.UseCase.ControlFileController.create",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the control associated with the use case.",
            "in": "path",
            "name": "control_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The attributes of the file to be created.",
            "in": "body",
            "name": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ControlFileCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ControlFileResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_controls"
        ]
      }
    },
    "/policy_control_versions/{id}": {
      "delete": {
        "description": "Deletes a specific version of a policy control identified by its unique ID.",
        "operationId": "CredoAIWeb.API.V2.PolicyControl.VersionController.delete",
        "parameters": [
          {
            "description": "The unique ID of the version to delete.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "policy_controls"
        ]
      },
      "get": {
        "description": "Fetches the details of a specific version of a policy control by its unique ID.",
        "operationId": "CredoAIWeb.API.V2.PolicyControl.VersionController.show",
        "parameters": [
          {
            "description": "The unique ID of the version to retrieve.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyControlVersionResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "policy_controls"
        ]
      },
      "patch": {
        "description": "Updates the attributes of an existing version of a policy control identified by its unique ID.",
        "operationId": "CredoAIWeb.API.V2.PolicyControl.VersionController.update",
        "parameters": [
          {
            "description": "The unique ID of the version to update.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The updated attributes for the version.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PolicyControlVersionUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyControlVersionResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "policy_controls"
        ]
      }
    },
    "/use_case_reviews/{review_id}/snapshot/workflow_stage": {
      "get": {
        "description": "Retrieve the workflow stage from a specific review's snapshot.",
        "operationId": "CredoAIWeb.API.V2.UseCase.ReviewController.show_workflow_stage",
        "parameters": [
          {
            "description": "The unique ID of the use case review.",
            "in": "path",
            "name": "review_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UseCaseSnapshotResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_reviews"
        ]
      }
    },
    "/domains/{id}/use_cases": {
      "get": {
        "description": "Retrieves use cases associated with a specific domain.",
        "operationId": "CredoAIWeb.API.V2.DomainController.use_cases",
        "parameters": [
          {
            "description": "The unique ID of the domain.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UseCasesResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "fields"
        ]
      }
    },
    "/use_cases/{use_case_id}/controls/{control_id}/files/{id}": {
      "delete": {
        "description": "Deletes a specific file associated with a questionnaire control for a given use case.",
        "operationId": "CredoAIWeb.API.V2.UseCase.ControlFileController.delete",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the control associated with the use case.",
            "in": "path",
            "name": "control_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the file to be deleted.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_controls"
        ]
      }
    },
    "/use_cases/{use_case_id}/triggered_actions": {
      "get": {
        "description": "Retrieve a list of all triggered actions associated with a specific use case.",
        "operationId": "CredoAIWeb.API.V2.UseCase.TriggeredActionController.index",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UseCaseTriggeredActionResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_cases"
        ]
      }
    },
    "/vendors/{vendor_id}/questionnaire_sections/{id}": {
      "get": {
        "description": "Fetches a specific questionnaire section for a vendor.",
        "operationId": "CredoAIWeb.API.V2.Vendor.Questionnaire.SectionController.show",
        "parameters": [
          {
            "description": "The unique ID of the vendor.",
            "in": "path",
            "name": "vendor_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the questionnaire section.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VendorQuestionnaireSectionResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "vendors"
        ]
      }
    },
    "/use_cases/{use_case_id}/relationships/policy_controls": {
      "patch": {
        "description": "Update the policy controls associated with a specific use case.",
        "operationId": "CredoAIWeb.API.V2.UseCaseController.upgrade_policy_controls",
        "parameters": [
          {
            "description": "Unique ID of the use case",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Relationships to modify policy controls",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ModifyPolicyPackRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UseCaseResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_cases"
        ]
      }
    },
    "/policy_packs": {
      "get": {
        "description": "Retrieve a list of all available out-of-the-box policy packs.",
        "operationId": "CredoAIWeb.API.V2.PolicyPackController.index",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyPacksCollectionResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "policy_packs"
        ]
      }
    },
    "/industries": {
      "get": {
        "description": "Retrieves a list of available industries for the tenant.",
        "operationId": "CredoAIWeb.API.V2.TenantInfoController.industries",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IndustriesResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "fields"
        ]
      }
    },
    "/me/api_tokens": {
      "get": {
        "description": "Retrieve a list of API tokens associated with the authenticated user.",
        "operationId": "CredoAIWeb.API.V2.ApiTokenController.index",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiTokensResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "user"
        ]
      },
      "post": {
        "description": "Generate a new API token for the authenticated user.",
        "operationId": "CredoAIWeb.API.V2.ApiTokenController.create",
        "parameters": [
          {
            "description": "The request body containing the details for the new API token.",
            "in": "body",
            "name": "model",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ApiTokenCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ApiTokenCreatedResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "user"
        ]
      }
    },
    "/integrations/{id}/rotate_token": {
      "post": {
        "description": "Rotate the integration token/key for the specified integration.",
        "operationId": "CredoAIWeb.API.V2.IntegrationController.rotate_token",
        "parameters": [
          {
            "description": "The unique ID of the integration.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IntegrationResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "integrations"
        ]
      }
    },
    "/use_cases/{id}": {
      "delete": {
        "description": "Delete a specific use case. Only the owner of the use case can perform this action.",
        "operationId": "CredoAIWeb.API.V2.UseCaseController.delete",
        "parameters": [
          {
            "description": "Unique ID of the use case",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_cases"
        ]
      },
      "get": {
        "description": "Fetch detailed information about a specific use case identified by its ID.",
        "operationId": "CredoAIWeb.API.V2.UseCaseController.show",
        "parameters": [
          {
            "description": "Unique ID of the use case",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UseCaseResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_cases"
        ]
      },
      "patch": {
        "description": "Update an existing use case identified by its ID.",
        "operationId": "CredoAIWeb.API.V2.UseCaseController.update",
        "parameters": [
          {
            "description": "Unique ID of the use case",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Attributes to update the use case",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UseCaseUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UseCaseResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_cases"
        ]
      }
    },
    "/vendors/{vendor_id}/questionnaires": {
      "get": {
        "description": "Retrieve a list of all questionnaires associated with a specific vendor.",
        "operationId": "CredoAIWeb.API.V2.Vendor.QuestionnaireController.index",
        "parameters": [
          {
            "description": "The unique ID of the vendor.",
            "in": "path",
            "name": "vendor_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VendorQuestionnairesResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "vendors"
        ]
      },
      "post": {
        "description": "Create a new questionnaire for a specific vendor.",
        "operationId": "CredoAIWeb.API.V2.Vendor.QuestionnaireController.create",
        "parameters": [
          {
            "description": "The unique ID of the vendor.",
            "in": "path",
            "name": "vendor_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The attributes for the new questionnaire.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/VendorQuestionnaireCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/VendorQuestionnaireResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "vendors"
        ]
      }
    },
    "/use_case_review_actions/{id}": {
      "delete": {
        "description": "Delete a specific review action.\n\nNOTE: Deleting review actions of type 'comment' is DEPRECATED.\nPlease use the comment_threads API endpoints instead for comment functionality:\n[DELETE /use_cases/{use_case_id}/comment_threads/{thread_id}](#/paths/~1use_cases~1{use_case_id}~1comment_threads~1{thread_id}/delete)\nor\n[DELETE /use_cases/{use_case_id}/comment_threads/{thread_id}/comments/{id}](#/paths/~1use_cases~1{use_case_id}~1comment_threads~1{thread_id}~1comments~1{id}/delete)\n",
        "operationId": "CredoAIWeb.API.V2.UseCase.Review.ActionController.delete",
        "parameters": [
          {
            "description": "The unique ID of the review action to be deleted.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_reviews"
        ]
      },
      "patch": {
        "description": "Update an existing review action.\n\nNOTE: Updating review actions of type 'comment' is DEPRECATED.\nPlease use the comment_threads API endpoints instead for comment functionality:\n[PATCH /use_cases/{use_case_id}/comment_threads/{thread_id}](#/paths/~1use_cases~1{use_case_id}~1comment_threads~1{thread_id}/patch)\nor\n[PATCH /use_cases/{use_case_id}/comment_threads/{thread_id}/comments/{id}](#/paths/~1use_cases~1{use_case_id}~1comment_threads~1{thread_id}~1comments~1{id}/patch)\n",
        "operationId": "CredoAIWeb.API.V2.UseCase.Review.ActionController.update",
        "parameters": [
          {
            "description": "The unique ID of the review action to be updated.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The attributes to be updated for the review action.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UseCaseReviewActionUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UseCaseReviewActionResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_reviews"
        ]
      }
    },
    "/use_cases/{use_case_id}/questionnaire_sections/{id}": {
      "get": {
        "description": "Fetches a specific questionnaire section for a given use case by its unique ID.",
        "operationId": "CredoAIWeb.API.V2.UseCase.Questionnaire.SectionController.show",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the questionnaire section.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UseCaseQuestionnaireSectionResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_case_questionnaires"
        ]
      }
    },
    "/policy_pack_bases": {
      "get": {
        "description": "Retrieves a list of all custom policy pack bases.",
        "operationId": "CredoAIWeb.API.V2.PolicyPack.BaseController.index",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomPolicyPackBasesResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "policy_packs"
        ]
      },
      "post": {
        "description": "Creates a new custom policy pack base with the provided attributes.",
        "operationId": "CredoAIWeb.API.V2.PolicyPack.BaseController.create",
        "parameters": [
          {
            "description": "The attributes for the new custom policy pack base.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CustomPolicyPackBaseCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/CustomPolicyPackBaseResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "policy_packs"
        ]
      }
    },
    "/vendors/{id}": {
      "delete": {
        "description": "Remove a vendor from the system using its unique ID.",
        "operationId": "CredoAIWeb.API.V2.VendorController.delete",
        "parameters": [
          {
            "description": "Unique ID of the vendor to be deleted.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "vendors"
        ]
      },
      "get": {
        "description": "Fetch detailed information about a specific vendor by ID.",
        "operationId": "CredoAIWeb.API.V2.VendorController.show",
        "parameters": [
          {
            "description": "user,use_cases,questionnaires,models",
            "in": "query",
            "name": "include",
            "required": false,
            "type": "string",
            "x-example": "user,use_cases,questionnaires,models"
          },
          {
            "description": "Unique ID of the vendor.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VendorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "vendors"
        ]
      },
      "patch": {
        "description": "Update the details of an existing vendor identified by ID.",
        "operationId": "CredoAIWeb.API.V2.VendorController.update",
        "parameters": [
          {
            "description": "Unique ID of the vendor.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Attributes to update for the vendor.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/VendorUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VendorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "vendors"
        ]
      }
    },
    "/use_cases/{use_case_id}/relationships/models": {
      "delete": {
        "description": "Removes models from the specified use case.",
        "operationId": "CredoAIWeb.API.V2.UseCase.ModelController.remove_models",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The models to be removed from the use case.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UseCaseModelDeleteRelationships"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/DatabaseError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_cases"
        ]
      },
      "post": {
        "description": "Adds models to the specified use case.",
        "operationId": "CredoAIWeb.API.V2.UseCase.ModelController.add_models",
        "parameters": [
          {
            "description": "The unique ID of the use case.",
            "in": "path",
            "name": "use_case_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The models to be added to the use case.",
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UseCaseModelCreateRelationships"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/DatabaseError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundError"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "use_cases"
        ]
      }
    }
  },
  "swagger": "2.0",
  "tags": [
    {
      "name": "use_cases",
      "description": "Operations related to use cases"
    },
    {
      "name": "use_case_assist",
      "description": "Operations related to use case assist"
    },
    {
      "name": "use_case_questionnaires",
      "description": "Operations related to questionnaires, questionnaire sections, and questionnaire evidence for a specific use case"
    },
    {
      "name": "use_case_risk_scenarios",
      "description": "Operations related to risk scenarios for a specific use case"
    },
    {
      "name": "use_case_controls",
      "description": "Operations related to controls for a specific use case"
    },
    {
      "name": "use_case_policy_packs",
      "description": "Operations related to policy packs for a specific use case"
    },
    {
      "name": "use_case_reports",
      "description": "Operations related to reports for a specific use case, including creation, retrieval, and management of attestation requests"
    },
    {
      "name": "use_case_reviews",
      "description": "Operations related to use case reviews, review actions, tasks and attestations"
    },
    {
      "name": "use_case_comments",
      "description": "Operations related to use case threads and comments"
    },
    {
      "name": "use_case_custom_fields",
      "description": "Operations related to use case custom fields"
    },
    {
      "name": "models",
      "description": "Operations related to models and model versions"
    },
    {
      "name": "vendors",
      "description": "Operations related to vendors and their questionnaires"
    },
    {
      "name": "questionnaires",
      "description": "Operations related to questionnaires and their versions"
    },
    {
      "name": "triggers_and_actions",
      "description": "Endpoints for managing triggers and actions"
    },
    {
      "name": "policy_packs",
      "description": "Endpoints for policy packs management"
    },
    {
      "name": "risks",
      "description": "Endpoints for management of risk classifications, risk types, and risk scenarios"
    },
    {
      "name": "policy_controls",
      "description": "Endpoints for policy controls management"
    },
    {
      "name": "tasks",
      "description": "Operations related to task management"
    },
    {
      "name": "fields",
      "description": "Operations related to custom fields management"
    },
    {
      "name": "users",
      "description": "Endpoints for user management, roles, and profiles"
    },
    {
      "name": "teams",
      "description": "Operations related to team management and memberships"
    },
    {
      "name": "user",
      "description": "Endpoints related to user preferences and settings"
    },
    {
      "name": "assist",
      "description": "Operations related to assist"
    },
    {
      "name": "webhooks",
      "description": "Operations related to webhooks"
    },
    {
      "name": "other",
      "description": "Utility endpoints including tenant information and evidence types"
    }
  ],
  "basePath": "/api/v2/credoai",
  "consumes": [
    "application/vnd.api+json"
  ],
  "produces": [
    "application/vnd.api+json"
  ],
  "securityDefinitions": {
    "Bearer": {
      "in": "header",
      "name": "Authorization",
      "type": "apiKey"
    }
  }
}